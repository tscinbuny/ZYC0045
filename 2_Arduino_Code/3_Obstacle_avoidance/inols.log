






Started logging.

<<<
Content-Length: 3414

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":19932,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"g:\\11.ZhiYi\\5.Tutorial\\1.tutorial\\ZYC0043ï¼‰Four-way tracking and obstacle avoidance following car kit v2.0 tutorial\\ZYC0043\\4_Arduino_Code\\HC-SR04","rootUri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04","name":"HC-SR04"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.1"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4867

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","languageId":"cpp","version":39,"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    Serial.print(\"Distance = \");\r\n    Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            back();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            back();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}}Content-Length: 293

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3788

{"jsonrpc":"2.0","id":1,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":152,"character":11}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":49,"character":26},"end":{"line":49,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":3,"result":[]}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":4,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3414

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":19932,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"g:\\11.ZhiYi\\5.Tutorial\\1.tutorial\\ZYC0043ï¼‰Four-way tracking and obstacle avoidance following car kit v2.0 tutorial\\ZYC0043\\4_Arduino_Code\\HC-SR04","rootUri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04","name":"HC-SR04"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.1"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4867

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","languageId":"cpp","version":39,"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    Serial.print(\"Distance = \");\r\n    Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            back();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            back();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}}Content-Length: 396

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":49,"character":26},"end":{"line":49,"character":26}},"context":{"diagnostics":[]}}}Content-Length: 58

{"jsonrpc":"2.0","id":2,"method":"shutdown","params":null}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 128

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end","message":"Shutdown"}}}Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
<<<
Content-Length: 155

{"jsonrpc":"2.0","id":"1","error":{"code":-32603,"message":"Request window/workDoneProgress/create failed with message: Language client is not ready yet"}}Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3414

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":19932,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"g:\\11.ZhiYi\\5.Tutorial\\1.tutorial\\ZYC0043ï¼‰Four-way tracking and obstacle avoidance following car kit v2.0 tutorial\\ZYC0043\\4_Arduino_Code\\HC-SR04","rootUri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04","name":"HC-SR04"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.1"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4867

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","languageId":"cpp","version":39,"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    Serial.print(\"Distance = \");\r\n    Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            back();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            back();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}}Content-Length: 396

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":45,"character":25},"end":{"line":45,"character":25}},"context":{"diagnostics":[]}}}Content-Length: 322

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":25}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 219

{"jsonrpc":"2.0","id":2,"result":{"contents":{"kind":"markdown","value":"### macro `carSpeed`  \n\n---\n```cpp\n#define carSpeed 130\n```"},"range":{"start":{"line":43,"character":19},"end":{"line":43,"character":27}}}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":48,"character":25},"end":{"line":48,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":3,"result":[]}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":38}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 334

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":51}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":43,"character":51},"end":{"line":43,"character":51}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":6,"result":[]}
<<<
Content-Length: 334

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":44,"character":18}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":7,"result":[]}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":44,"character":18},"end":{"line":44,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":120,"character":58}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":9,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":125,"character":5}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":10,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":126,"character":4}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":11,"result":null}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":126,"character":5},"end":{"line":126,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":12,"result":[]}
<<<
Content-Length: 399

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":161,"character":18},"end":{"line":161,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":13,"result":[]}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":14,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":24}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":14,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":15,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":21,"character":18}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":16,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":18}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":17,"result":null}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":19}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":18,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":19},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":19,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":20,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":21,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":18}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":21,"result":null}
<<<
Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":40},"contentChanges":[{"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":19}},"rangeLength":1,"text":"5"}]}}Content-Length: 294

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}Content-Length: 294

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":22,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":23,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":19},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":24,"result":[]}
<<<
Content-Length: 4848

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":40},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 150//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    Serial.print(\"Distance = \");\r\n    Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            back();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            back();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"8","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"8","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":39}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":25,"result":null}
<<<
Content-Length: 321

{"jsonrpc":"2.0","id":26,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":5,"character":0}}}
>>>
Content-Length: 170

{"jsonrpc":"2.0","id":26,"result":{"contents":{"kind":"markdown","value":"### `Servo.h`  \n\n---\n```\nD:\\Program Files\\Arduino\\libraries\\Servo\\src\\Servo.h\n```"}}}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":27,"result":[]}
<<<
Content-Length: 394

{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":5,"character":0},"end":{"line":19,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":28,"result":[]}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":5,"character":0},"end":{"line":24,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":29,"result":[]}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":5,"character":0},"end":{"line":30,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":30,"result":[]}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":5,"character":0},"end":{"line":38,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":31,"result":[]}
<<<
Content-Length: 394

{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":5,"character":0},"end":{"line":39,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":32,"result":[]}
<<<
Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 294

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":33,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":35,"character":26},"end":{"line":35,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":34,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":34,"character":13}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":35,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":36,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":21,"character":13}}}
>>>
Content-Length: 273

{"jsonrpc":"2.0","id":36,"result":{"contents":{"kind":"markdown","value":"### variable `Sensor1`  \n\n---\nType: `int`  \nValue = `16 (0x10)`  \npin A2  \n\n---\n```cpp\nint Sensor1 = A2\n```"},"range":{"start":{"line":21,"character":12},"end":{"line":21,"character":13}}}}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":37,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":24,"character":5}}}
>>>
Content-Length: 240

{"jsonrpc":"2.0","id":37,"result":{"contents":{"kind":"markdown","value":"### variable `SensorLeft`  \n\n---\nType: `int`  \n\n---\n```cpp\nint SensorLeft\n```"},"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}}}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":38,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":42,"character":12}}}
>>>
Content-Length: 494

{"jsonrpc":"2.0","id":38,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\nRight now, PWM output only works on the pins with hardware support. These are defined in the appropriate pins\\_\\*.c file. For the rest of the pins, we default to digital output.  \n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":13}}}}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":39,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":41,"character":27}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":39,"result":null}
<<<
Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 294

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":40,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":41,"character":12},"end":{"line":41,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":41,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":42,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":39}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":42,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":43,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":38}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":43,"result":null}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":25},"end":{"line":33,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":44,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":35,"character":26},"end":{"line":35,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":45,"result":[]}
<<<
Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":41},"contentChanges":[{"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":19}},"rangeLength":1,"text":"3"}]}}Content-Length: 294

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":46,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":47,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"9","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"9","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 4848

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":41},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    Serial.print(\"Distance = \");\r\n    Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            back();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            back();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"10","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"10","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":48,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":22,"character":23}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":48,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":49,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":22,"character":23}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":49,"result":null}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":50,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":99,"character":9}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":50,"result":null}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":51,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":97,"character":3}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":51}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":51,"result":null}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":52,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":97,"character":4}}}
>>>
Content-Length: 267

{"jsonrpc":"2.0","id":52,"result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"start":{"line":97,"character":4},"end":{"line":97,"character":10}}}}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":53,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":97,"character":3}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":53,"result":null}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":54,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":97,"character":3}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":54,"result":null}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":55,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":97,"character":4}}}
>>>
Content-Length: 267

{"jsonrpc":"2.0","id":55,"result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"start":{"line":97,"character":4},"end":{"line":97,"character":10}}}}
<<<
Content-Length: 334

{"jsonrpc":"2.0","id":56,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":97,"character":4}}}
>>>
Content-Length: 736

{"jsonrpc":"2.0","id":56,"result":[{"range":{"start":{"line":38,"character":2},"end":{"line":38,"character":8}},"kind":1},{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":8}},"kind":1},{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":8}},"kind":1},{"range":{"start":{"line":76,"character":2},"end":{"line":76,"character":8}},"kind":1},{"range":{"start":{"line":82,"character":2},"end":{"line":82,"character":8}},"kind":1},{"range":{"start":{"line":97,"character":4},"end":{"line":97,"character":10}},"kind":1},{"range":{"start":{"line":98,"character":4},"end":{"line":98,"character":10}},"kind":1},{"range":{"start":{"line":104,"character":2},"end":{"line":104,"character":8}},"kind":1}]}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":57,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":97,"character":4},"end":{"line":97,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":57,"result":[]}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":99,"character":4}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":58,"result":null}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":42},"contentChanges":[{"range":{"start":{"line":97,"character":4},"end":{"line":97,"character":4}},"rangeLength":0,"text":"/"}]}}Content-Length: 294

{"jsonrpc":"2.0","id":59,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":59}}Content-Length: 294

{"jsonrpc":"2.0","id":60,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 378

{"jsonrpc":"2.0","id":61,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":97,"character":5},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":"11","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3789

{"jsonrpc":"2.0","id":59,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3787

{"jsonrpc":"2.0","id":60,"result":[{"name":"myservo","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 70

{"jsonrpc":"2.0","id":61,"result":{"isIncomplete":false,"items":null}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"11","result":null}Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":43},"contentChanges":[{"range":{"start":{"line":97,"character":5},"end":{"line":97,"character":5}},"rangeLength":0,"text":"/"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":60}}Content-Length: 294

{"jsonrpc":"2.0","id":62,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":62}}Content-Length: 294

{"jsonrpc":"2.0","id":63,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":61}}Content-Length: 378

{"jsonrpc":"2.0","id":64,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":97,"character":6},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 3787

{"jsonrpc":"2.0","id":62,"result":[{"name":"myservo","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3787

{"jsonrpc":"2.0","id":63,"result":[{"name":"myservo","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 70

{"jsonrpc":"2.0","id":64,"result":{"isIncomplete":false,"items":null}}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":97,"character":6},"end":{"line":97,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":65,"result":[]}
<<<
Content-Length: 4850

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":43},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            back();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            back();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}Content-Length: 334

{"jsonrpc":"2.0","id":66,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":98,"character":6}}}
>>>
Content-Length: 648

{"jsonrpc":"2.0","id":66,"result":[{"range":{"start":{"line":38,"character":2},"end":{"line":38,"character":8}},"kind":1},{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":8}},"kind":1},{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":8}},"kind":1},{"range":{"start":{"line":76,"character":2},"end":{"line":76,"character":8}},"kind":1},{"range":{"start":{"line":82,"character":2},"end":{"line":82,"character":8}},"kind":1},{"range":{"start":{"line":98,"character":4},"end":{"line":98,"character":10}},"kind":1},{"range":{"start":{"line":104,"character":2},"end":{"line":104,"character":8}},"kind":1}]}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":98,"character":5},"end":{"line":98,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":67,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"12","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"12","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":98,"character":4},"end":{"line":98,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":68,"result":[]}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":44},"contentChanges":[{"range":{"start":{"line":98,"character":4},"end":{"line":98,"character":4}},"rangeLength":0,"text":"/"}]}}Content-Length: 294

{"jsonrpc":"2.0","id":69,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":69}}Content-Length: 294

{"jsonrpc":"2.0","id":70,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 378

{"jsonrpc":"2.0","id":71,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":98,"character":5},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
>>>
Content-Length: 3787

{"jsonrpc":"2.0","id":69,"result":[{"name":"myservo","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3787

{"jsonrpc":"2.0","id":70,"result":[{"name":"myservo","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 70

{"jsonrpc":"2.0","id":71,"result":{"isIncomplete":false,"items":null}}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":72,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":98,"character":5},"end":{"line":98,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":72,"result":[]}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":45},"contentChanges":[{"range":{"start":{"line":98,"character":5},"end":{"line":98,"character":5}},"rangeLength":0,"text":"/"}]}}Content-Length: 294

{"jsonrpc":"2.0","id":73,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":73}}Content-Length: 294

{"jsonrpc":"2.0","id":74,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 378

{"jsonrpc":"2.0","id":75,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":98,"character":6},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
>>>
Content-Length: 3787

{"jsonrpc":"2.0","id":73,"result":[{"name":"myservo","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3787

{"jsonrpc":"2.0","id":74,"result":[{"name":"myservo","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 70

{"jsonrpc":"2.0","id":75,"result":{"isIncomplete":false,"items":null}}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":98,"character":6},"end":{"line":98,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":76,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"13","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"13","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 4852

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":45},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            back();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            back();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}Content-Length: 323

{"jsonrpc":"2.0","id":77,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":98,"character":13}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":77,"result":null}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"14","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"14","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":78,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":98,"character":49}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":78,"result":null}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"15","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"15","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"16","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"16","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":79,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":150,"character":40}}}
>>>
Content-Length: 266

{"jsonrpc":"2.0","id":79,"result":{"contents":{"kind":"markdown","value":"### variable `leftDistance`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\nint leftDistance = 0\n```"},"range":{"start":{"line":150,"character":32},"end":{"line":150,"character":44}}}}
<<<
Content-Length: 399

{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":165,"character":17},"end":{"line":165,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":80,"result":[]}
<<<
Content-Length: 399

{"jsonrpc":"2.0","id":81,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":163,"character":20},"end":{"line":163,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":81,"result":[]}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":82,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":164,"character":8}}}
>>>
Content-Length: 305

{"jsonrpc":"2.0","id":82,"result":[{"range":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}},"kind":1},{"range":{"start":{"line":147,"character":12},"end":{"line":147,"character":17}},"kind":1},{"range":{"start":{"line":164,"character":6},"end":{"line":164,"character":11}},"kind":1}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":164,"character":6},"end":{"line":164,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":83,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":84,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":131,"character":39}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":84,"result":null}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":85,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":70,"character":26},"end":{"line":70,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":85,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":86,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":73,"character":25},"end":{"line":73,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":86,"result":[]}
<<<
Content-Length: 4852

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":45},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            back();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            back();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"17","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"17","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"18","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"18","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":87,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":131,"character":33}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":87,"result":{"contents":{"kind":"markdown","value":"### function `GetDistance`  \n\n---\nâ†’ `float`  \n\n---\n```cpp\nfloat GetDistance()\n```"},"range":{"start":{"line":131,"character":24},"end":{"line":131,"character":35}}}}
<<<
Content-Length: 399

{"jsonrpc":"2.0","id":88,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":129,"character":26},"end":{"line":129,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":88,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":89,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":150,"character":34}}}
>>>
Content-Length: 266

{"jsonrpc":"2.0","id":89,"result":{"contents":{"kind":"markdown","value":"### variable `leftDistance`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\nint leftDistance = 0\n```"},"range":{"start":{"line":150,"character":32},"end":{"line":150,"character":44}}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":90,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":150,"character":23}}}
>>>
Content-Length: 268

{"jsonrpc":"2.0","id":90,"result":{"contents":{"kind":"markdown","value":"### variable `rightDistance`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\nint rightDistance = 0\n```"},"range":{"start":{"line":150,"character":16},"end":{"line":150,"character":29}}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":91,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":145,"character":14}}}
>>>
Content-Length: 233

{"jsonrpc":"2.0","id":91,"result":{"contents":{"kind":"markdown","value":"### function `back`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid back()\n```"},"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":16}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":92,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":145,"character":14}}}
>>>
Content-Length: 305

{"jsonrpc":"2.0","id":92,"result":[{"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}},"kind":1},{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":16}},"kind":1},{"range":{"start":{"line":151,"character":12},"end":{"line":151,"character":16}},"kind":1}]}
<<<
Content-Length: 399

{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":145,"character":14},"end":{"line":145,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":93,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":94,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":146,"character":22}}}
>>>
Content-Length: 288

{"jsonrpc":"2.0","id":94,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\nâ†’ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":146,"character":22},"end":{"line":146,"character":23}}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":95,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":145,"character":16}}}
>>>
Content-Length: 233

{"jsonrpc":"2.0","id":95,"result":{"contents":{"kind":"markdown","value":"### function `back`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid back()\n```"},"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":16}}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":96,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":145,"character":15}}}
>>>
Content-Length: 233

{"jsonrpc":"2.0","id":96,"result":{"contents":{"kind":"markdown","value":"### function `back`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid back()\n```"},"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":16}}}}
<<<
Content-Length: 399

{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":97,"result":[]}
<<<
Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":46},"contentChanges":[{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":16}},"rangeLength":4,"text":"s"}]}}Content-Length: 294

{"jsonrpc":"2.0","id":98,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":98}}Content-Length: 294

{"jsonrpc":"2.0","id":99,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":98,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":99,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}
<<<
Content-Length: 358

{"jsonrpc":"2.0","id":100,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":145,"character":13},"context":{"triggerKind":1}}}Content-Length: 400

{"jsonrpc":"2.0","id":101,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":145,"character":13},"end":{"line":145,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 64300

{"jsonrpc":"2.0","id":100,"result":{"isIncomplete":true,"items":[{"label":" SensorLeft","kind":6,"detail":"int","sortText":"4024a767SensorLeft","filterText":"SensorLeft","insertText":"SensorLeft","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SensorLeft"}},{"label":" SensorRight","kind":6,"detail":"int","sortText":"4024a767SensorRight","filterText":"SensorRight","insertText":"SensorRight","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SensorRight"}},{"label":" setup()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"403c35b3setup","filterText":"setup","insertText":"setup","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"setup"}},{"label":" Sensor1","kind":6,"detail":"int","documentation":{"kind":"markdown","value":"pin A2"},"sortText":"404db22cSensor1","filterText":"Sensor1","insertText":"Sensor1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"Sensor1"}},{"label":" Sensor2","kind":6,"detail":"int","documentation":{"kind":"markdown","value":"pin A5"},"sortText":"404db22cSensor2","filterText":"Sensor2","insertText":"Sensor2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"Sensor2"}},{"label":" std","kind":9,"sortText":"4062ed6bstd","filterText":"std","insertText":"std","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"std"}},{"label":"â€¢Serial","kind":6,"detail":"HardwareSerial","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40759cfbSerial","filterText":"Serial","insertText":"Serial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"Serial"}},{"label":" stop()","kind":3,"detail":"void","sortText":"407edfe4stop","filterText":"stop","insertText":"stop","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"stop"}},{"label":"â€¢SERIAL_5E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5E2","filterText":"SERIAL_5E2","insertText":"SERIAL_5E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SERIAL_5E2"}},{"label":"â€¢SERIAL_5N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5N2","filterText":"SERIAL_5N2","insertText":"SERIAL_5N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SERIAL_5N2"}},{"label":"â€¢SERIAL_5O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5O1","filterText":"SERIAL_5O1","insertText":"SERIAL_5O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SERIAL_5O1"}},{"label":"â€¢SERIAL_6N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6N1","filterText":"SERIAL_6N1","insertText":"SERIAL_6N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SERIAL_6N1"}},{"label":"â€¢SERIAL_6N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6N2","filterText":"SERIAL_6N2","insertText":"SERIAL_6N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SERIAL_6N2"}},{"label":"â€¢SERIAL_7O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7O1","filterText":"SERIAL_7O1","insertText":"SERIAL_7O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SERIAL_7O1"}},{"label":"â€¢SERIAL_8E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8E1","filterText":"SERIAL_8E1","insertText":"SERIAL_8E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SERIAL_8E1"}},{"label":"â€¢SERIAL_8N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8N1","filterText":"SERIAL_8N1","insertText":"SERIAL_8N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SERIAL_8N1"}},{"label":" signbitf","kind":1,"sortText":"40821470signbitf","filterText":"signbitf","insertText":"signbitf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"signbitf"}},{"label":" sinf","kind":1,"sortText":"40821470sinf","filterText":"sinf","insertText":"sinf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"sinf"}},{"label":" sinhf","kind":1,"sortText":"40821470sinhf","filterText":"sinhf","insertText":"sinhf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"sinhf"}},{"label":" squaref","kind":1,"sortText":"40821470squaref","filterText":"squaref","insertText":"squaref","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"squaref"}},{"label":" SEEK_CUR","kind":1,"sortText":"40a80791SEEK_CUR","filterText":"SEEK_CUR","insertText":"SEEK_CUR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SEEK_CUR"}},{"label":" SEEK_END","kind":1,"sortText":"40a80791SEEK_END","filterText":"SEEK_END","insertText":"SEEK_END","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SEEK_END"}},{"label":" SEEK_SET","kind":1,"sortText":"40a80791SEEK_SET","filterText":"SEEK_SET","insertText":"SEEK_SET","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"SEEK_SET"}},{"label":" stderr","kind":1,"sortText":"40a80791stderr","filterText":"stderr","insertText":"stderr","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"stderr"}},{"label":" stdin","kind":1,"sortText":"40a80791stdin","filterText":"stdin","insertText":"stdin","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"stdin"}},{"label":" stdout","kind":1,"sortText":"40a80791stdout","filterText":"stdout","insertText":"stdout","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"stdout"}},{"label":" short","kind":14,"sortText":"40a9a1f8short","filterText":"short","insertText":"short","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"40a9a1f8signed","filterText":"signed","insertText":"signed","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"40a9a1f8sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"40a9a1f8sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static","kind":14,"sortText":"40a9a1f8static","filterText":"static","insertText":"static","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"40a9a1f8static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"40a9a1f8static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"40a9a1f8struct","filterText":"struct","insertText":"struct","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"struct"}},{"label":" switch (condition) {cases}","kind":15,"sortText":"40a9a1f8switch","filterText":"switch","insertText":"switch (${1:condition}) {\n${0:cases}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"switch (${1:condition}) {\n${0:cases}\n}"}},{"label":" Servo","kind":7,"sortText":"40c34bbdServo","filterText":"Servo","insertText":"Servo","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"Servo"}},{"label":"â€¢std::size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstddef\u003e`  \nThis is normally declared in various headers that we do not have available, so just define it here. We could also use ::size_t below, but then anyone including \\\u003cnew\u003e can no longer assume std::size_t is available."},"sortText":"40cc4228size_t","filterText":"size_t","insertText":"std::size_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"std::size_t"}},{"label":" strlen(const char *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlen(const char \\*src)  \n\\\\brief Calculate the length of a string.  \nThe strlen() function calculates the length of the string src, not including the terminating '\\\\\\\\0' character.  \n\\\\returns The strlen() function returns the number of characters in src."},"sortText":"40e7b831strlen","filterText":"strlen","insertText":"strlen","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strlen"}},{"label":" strstr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strstr(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared.  \n\\\\returns The strstr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"40f8a8f0strstr","filterText":"strstr","insertText":"strstr","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strstr"}},{"label":" signbit(double x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The signbit() function returns a nonzero value if the value of \\\\a \\_\\_x has its sign bit set. This is not the same as \\`\\\\a \\_\\_x \u003c 0.0',  \nbecause IEEE 754 floating point allows zero to be signed. The comparison \\`-0.0 \u003c 0.0' is false, but \\`signbit (-0.0)' will return a nonzero value."},"sortText":"40fd1dd8signbit","filterText":"signbit","insertText":"signbit","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"signbit"}},{"label":" sin(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sin() function returns the sine of \\\\a \\_\\_x, measured in radians."},"sortText":"40fd1dd8sin","filterText":"sin","insertText":"sin","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"sin"}},{"label":" sinh(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sinh() function returns the hyperbolic sine of \\\\a \\_\\_x."},"sortText":"40fd1dd8sinh","filterText":"sinh","insertText":"sinh","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"sinh"}},{"label":" sqrt(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sqrt() function returns the non-negative square root of \\\\a \\_\\_x."},"sortText":"40fd1dd8sqrt","filterText":"sqrt","insertText":"sqrt","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"sqrt"}},{"label":" sqrtf(float)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"An alias for sqrt()."},"sortText":"40fd1dd8sqrtf","filterText":"sqrtf","insertText":"sqrtf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"sqrtf"}},{"label":" square(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The function square() returns \\\u003cem\u003e\\_\\_x * \\_\\_x\\\u003c/em\u003e.  \n\\\\note This function does not belong to the C standard definition."},"sortText":"40fd1dd8square","filterText":"square","insertText":"square","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"square"}},{"label":" strcasecmp(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcasecmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\returns The strcasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\"  \n\\\\p s2."},"sortText":"40fd1dd8strcasecmp","filterText":"strcasecmp","insertText":"strcasecmp","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcasecmp"}},{"label":" strcasecmp_P(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_P(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp_P() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\param s1 A pointer to a string in the devices SRAM.  \n\\\\param s2 A pointer to a string in the devices Flash.  \n\\\\returns The strcasecmp_P() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"40fd1dd8strcasecmp_P","filterText":"strcasecmp_P","insertText":"strcasecmp_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcasecmp_P"}},{"label":" strcasecmp_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compare two strings ignoring case  \nThe strcasecmp_PF() function compares the two strings \\\\e s1 and \\\\e s2, ignoring the case of the characters.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strcasecmp_PF","filterText":"strcasecmp_PF","insertText":"strcasecmp_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcasecmp_PF"}},{"label":" strcasestr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcasestr(const char \\*s1, const char \\*s2)  \nThe strcasestr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. This is like strstr(), except that it ignores case of alphabetic symbols in searching for the substring. (Glibc, GNU extension.)  \n\\\\return The strcasestr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"40fd1dd8strcasestr","filterText":"strcasestr","insertText":"strcasestr","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcasestr"}},{"label":" strcasestr_P(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcasestr_P(const char \\*s1, const char \\*s2)  \nThis funtion is similar to strcasestr() except that \\\\p s2 is pointer to a string in program space."},"sortText":"40fd1dd8strcasestr_P","filterText":"strcasestr_P","insertText":"strcasestr_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcasestr_P"}},{"label":" strcat(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcat(char \\*dest, const char \\*src)  \n\\\\brief Concatenate two strings.  \nThe strcat() function appends the src string to the dest string overwriting the '\\\\\\\\0' character at the end of dest, and then adds a terminating '\\\\\\\\0' character. The strings may not overlap, and the dest string must have enough space for the result.  \n\\\\returns The strcat() function returns a pointer to the resulting string dest."},"sortText":"40fd1dd8strcat","filterText":"strcat","insertText":"strcat","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcat"}},{"label":" strcat_P(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_P(char \\*dest, const char \\*src)  \nThe strcat_P() function is similar to strcat() except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strcat() function returns a pointer to the resulting string  \n\\\\e dest."},"sortText":"40fd1dd8strcat_P","filterText":"strcat_P","insertText":"strcat_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcat_P"}},{"label":" strcat_PF(char *dest, uint_farptr_t src)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Concatenates two strings  \nThe strcat_PF() function is similar to strcat() except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the string to be appended in Flash  \n\\\\returns The strcat_PF() function returns a pointer to the resulting string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns"},"sortText":"40fd1dd8strcat_PF","filterText":"strcat_PF","insertText":"strcat_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcat_PF"}},{"label":" strchr_P(const char *, int val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchr_P(const char \\*s, int val)  \n\\\\brief Locate character in program space string.  \nThe strchr_P() function locates the first occurrence of \\\\p val (converted to a char) in the string pointed to by \\\\p s in program space. The terminating null character is considered to be part of the string.  \nThe strchr_P() function is similar to strchr() except that \\\\p s is pointer to a string in program space.  \n\\\\returns The strchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"40fd1dd8strchr_P","filterText":"strchr_P","insertText":"strchr_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strchr_P"}},{"label":" strchrnul(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchrnul(const char \\*s, int c)  \nThe strchrnul() function is like strchr() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"sortText":"40fd1dd8strchrnul","filterText":"strchrnul","insertText":"strchrnul","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strchrnul"}},{"label":" strchrnul_P(const char *, int val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchrnul_P(const char \\*s, int c)  \nThe strchrnul_P() function is like strchr_P() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul_P() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"sortText":"40fd1dd8strchrnul_P","filterText":"strchrnul_P","insertText":"strchrnul_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strchrnul_P"}},{"label":" strcmp_P(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_P(const char \\*s1, const char \\*s2)  \nThe strcmp_P() function is similar to strcmp() except that \\\\p s2 is pointer to a string in program space.  \n\\\\returns The strcmp_P() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"40fd1dd8strcmp_P","filterText":"strcmp_P","insertText":"strcmp_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcmp_P"}},{"label":" strcmp_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compares two strings  \nThe strcmp_PF() function is similar to strcmp() except that \\\\e s2 is a far pointer to a string in program space.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcmp_PF() function returns an integer less than, equal to,  \nor greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strcmp_PF","filterText":"strcmp_PF","insertText":"strcmp_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcmp_PF"}},{"label":" strcoll(const char *s1, const char *s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"libstdc++ compatibility, dummy declarations"},"sortText":"40fd1dd8strcoll","filterText":"strcoll","insertText":"strcoll","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcoll"}},{"label":" strcpy_PF(char *dest, uint_farptr_t src)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Duplicate a string  \nThe strcpy_PF() function is similar to strcpy() except that \\\\e src is a far pointer to a string in program space.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\returns The strcpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the funcion returns."},"sortText":"40fd1dd8strcpy_PF","filterText":"strcpy_PF","insertText":"strcpy_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcpy_PF"}},{"label":" strcspn(const char *s, const char *reject)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strcspn(const char \\*s, const char \\*reject)  \nThe strcspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject.  \n\\\\return The strcspn() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"sortText":"40fd1dd8strcspn","filterText":"strcspn","insertText":"strcspn","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcspn"}},{"label":" strcspn_P(const char *s, const char *reject)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strcspn_P(const char \\*s, const char \\*reject)  \nThe strcspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject. This function is similar to strcspn() except that \\\\p reject is a pointer to a string in program space.  \n\\\\return The strcspn_P() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"sortText":"40fd1dd8strcspn_P","filterText":"strcspn_P","insertText":"strcspn_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strcspn_P"}},{"label":" strdup(const char *s1)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strdup(const char \\*s1)  \n\\\\brief Duplicate a string.  \nThe strdup() function allocates memory and copies into it the string addressed by s1, including the terminating null character.  \n\\\\warning The strdup() function calls malloc() to allocate the memory for the duplicated string! The user is responsible for freeing the memory by calling free().  \n\\\\returns The strdup() function returns a pointer to the resulting string dest. If malloc() cannot allocate enough storage for the string, strdup() will return NULL.  \n\\\\warning Be sure to check the return value of the strdup() function to make sure that the function has succeeded in allocating the memory!"},"sortText":"40fd1dd8strdup","filterText":"strdup","insertText":"strdup","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strdup"}},{"label":" strerror(int errnum)","kind":3,"detail":"char *","sortText":"40fd1dd8strerror","filterText":"strerror","insertText":"strerror","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strerror"}},{"label":" strlcat(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcat(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz \u003c=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval \u003e= siz, truncation occurred."},"sortText":"40fd1dd8strlcat","filterText":"strlcat","insertText":"strlcat","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strlcat"}},{"label":" strlcat_P(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nThe strlcat_P() function is similar to strlcat(), except that the \\\\p src string must be located in program space (flash).  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz \u003c=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat_P() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval \u003e= siz, truncation occurred."},"sortText":"40fd1dd8strlcat_P","filterText":"strlcat_P","insertText":"strlcat_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strlcat_P"}},{"label":" strlcat_PF(char *dst, uint_farptr_t src, size_t siz)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strlcat_PF() function is similar to strlcat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \nAppends src to string dst of size \\\\e n (unlike strncat(), \\\\e n is the full size of \\\\e dst, not space left). At most \\\\e n-1 characters will be copied. Always NULL terminates (unless \\\\e n \u003c= strlen(\\\\e dst)).  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The total number of bytes allocated to the destination string  \n\\\\returns The strlcat_PF() function returns strlen(\\\\e src) + MIN(\\\\e n,  \nstrlen(initial \\\\e dst)). If retval \u003e= \\\\e n, truncation occurred. The contents of RAMPZ SFR are undefined when the funcion returns."},"sortText":"40fd1dd8strlcat_PF","filterText":"strlcat_PF","insertText":"strlcat_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strlcat_PF"}},{"label":" strlcpy(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcpy(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \n\\\\returns The strlcpy() function returns strlen(src). If retval \u003e= siz,  \ntruncation occurred."},"sortText":"40fd1dd8strlcpy","filterText":"strlcpy","insertText":"strlcpy","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strlcpy"}},{"label":" strlcpy_P(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \nThe strlcpy_P() function is similar to strlcpy() except that the  \n\\\\p src is pointer to a string in memory space.  \n\\\\returns The strlcpy_P() function returns strlen(src). If retval \u003e= siz, truncation occurred."},"sortText":"40fd1dd8strlcpy_P","filterText":"strlcpy_P","insertText":"strlcpy_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strlcpy_P"}},{"label":" strlcpy_PF(char *dst, uint_farptr_t src, size_t siz)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_PF(char \\*dst, uint_farptr_t src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy src to string dst of size siz. At most siz-1 characters will be copied. Always NULL terminates (unless siz == 0).  \n\\\\returns The strlcpy_PF() function returns strlen(src). If retval \u003e= siz,  \ntruncation occurred. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strlcpy_PF","filterText":"strlcpy_PF","insertText":"strlcpy_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strlcpy_PF"}},{"label":" strlen_PF(uint_farptr_t src)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlen_PF(uint_farptr_t s)  \n\\\\brief Obtain the length of a string  \nThe strlen_PF() function is similar to strlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in flash  \n\\\\returns The strlen_PF() function returns the number of characters in  \n\\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strlen_PF","filterText":"strlen_PF","insertText":"strlen_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strlen_PF"}},{"label":" strlwr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strlwr(char \\*s)  \n\\\\brief Convert a string to lower case.  \nThe strlwr() function will convert a string to lower case. Only the upper case alphabetic characters [A .. Z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strlwr() function returns a pointer to the converted string."},"sortText":"40fd1dd8strlwr","filterText":"strlwr","insertText":"strlwr","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strlwr"}},{"label":" strncasecmp(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncasecmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings ignoring case.  \nThe strncasecmp() function is similar to strcasecmp(), except it only compares the first \\\\p len characters of \\\\p s1.  \n\\\\returns The strncasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 (or the first \\\\p len bytes thereof) is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strncasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2,  \nthen \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"40fd1dd8strncasecmp","filterText":"strncasecmp","insertText":"strncasecmp","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strncasecmp"}},{"label":" strncasecmp_P(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncasecmp_P(const char \\*s1, const char \\*s2, size_t n)  \n\\\\brief Compare two strings ignoring case.  \nThe strncasecmp_P() function is similar to strcasecmp_P(), except it only compares the first \\\\p n characters of \\\\p s1.  \n\\\\param s1 A pointer to a string in the devices SRAM.  \n\\\\param s2 A pointer to a string in the devices Flash.  \n\\\\param n The maximum number of bytes to compare.  \n\\\\returns The strncasecmp_P() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 (or the first \\\\p n bytes thereof) is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strncasecmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2,  \nthen \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"40fd1dd8strncasecmp_P","filterText":"strncasecmp_P","insertText":"strncasecmp_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strncasecmp_P"}},{"label":" strncasecmp_PF(const char *s1, uint_farptr_t s2, size_t n)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncasecmp_PF(const char \\*s1, uint_farptr_t s2, size_t n)  \n\\\\brief Compare two strings ignoring case  \nThe strncasecmp_PF() function is similar to strcasecmp_PF(), except it only compares the first \\\\e n characters of \\\\e s1 and the string in flash is addressed using a far pointer.  \n\\\\param s1 A pointer to a string in SRAM  \n\\\\param s2 A far pointer to a string in Flash  \n\\\\param n The maximum number of bytes to compare  \n\\\\returns The strncasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 (or the first \\\\e n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strncasecmp_PF","filterText":"strncasecmp_PF","insertText":"strncasecmp_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strncasecmp_PF"}},{"label":" strncat(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strncat(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Concatenate two strings.  \nThe strncat() function is similar to strcat(), except that only the first n characters of src are appended to dest.  \n\\\\returns The strncat() function returns a pointer to the resulting string dest."},"sortText":"40fd1dd8strncat","filterText":"strncat","insertText":"strncat","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strncat"}},{"label":" strncat_P(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncat_P(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Concatenate two strings.  \nThe strncat_P() function is similar to strncat(), except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strncat_P() function returns a pointer to the resulting string dest."},"sortText":"40fd1dd8strncat_P","filterText":"strncat_P","insertText":"strncat_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strncat_P"}},{"label":" strncat_PF(char *dest, uint_farptr_t src, size_t len)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strncat_PF() function is similar to strncat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to append  \n\\\\returns The strncat_PF() function returns a pointer to the resulting string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strncat_PF","filterText":"strncat_PF","insertText":"strncat_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strncat_PF"}},{"label":" strncmp_P(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncmp_P(const char \\*s1, const char \\*s2, size_t n)  \nThe strncmp_P() function is similar to strcmp_P() except it only compares the first (at most) n characters of s1 and s2.  \n\\\\returns The strncmp_P() function returns an integer less than, equal to,  \nor greater than zero if s1 (or the first n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than s2."},"sortText":"40fd1dd8strncmp_P","filterText":"strncmp_P","insertText":"strncmp_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strncmp_P"}},{"label":" strncmp_PF(const char *s1, uint_farptr_t s2, size_t n)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncmp_PF(const char \\*s1, uint_farptr_t s2, size_t n)  \n\\\\brief Compare two strings with limited length  \nThe strncmp_PF() function is similar to strcmp_PF() except it only compares the first (at most) \\\\e n characters of \\\\e s1 and \\\\e s2.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\param n The maximum number of bytes to compare  \n\\\\returns The strncmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 (or the first \\\\e n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strncmp_PF","filterText":"strncmp_PF","insertText":"strncmp_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strncmp_PF"}},{"label":" strncpy_P(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_P(char \\*dest, const char \\*src, size_t n)  \nThe strncpy_P() function is similar to strcpy_P() except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy_P() function returns a pointer to the destination string dest."},"sortText":"40fd1dd8strncpy_P","filterText":"strncpy_P","insertText":"strncpy_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strncpy_P"}},{"label":" strncpy_PF(char *dest, uint_farptr_t src, size_t len)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Duplicate a string until a limited length  \nThe strncpy_PF() function is similar to strcpy_PF() except that not more than \\\\e n bytes of \\\\e src are copied. Thus, if there is no null byte among the first \\\\e n bytes of \\\\e src, the result will not be null-terminated.  \nIn the case where the length of \\\\e src is less than that of \\\\e n, the remainder of \\\\e dst will be padded with nulls.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to copy  \n\\\\returns The strncpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strncpy_PF","filterText":"strncpy_PF","insertText":"strncpy_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strncpy_PF"}},{"label":" strnlen(const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strnlen(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen function returns the number of characters in the string pointed to by src, not including the terminating '\\\\\\\\0' character, but at most len. In doing this, strnlen looks only at the first len characters at src and never beyond src+len.  \n\\\\returns The strnlen function returns strlen(src), if that is less than len, or len if there is no '\\\\\\\\0' character among the first len characters pointed to by src."},"sortText":"40fd1dd8strnlen","filterText":"strnlen","insertText":"strnlen","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strnlen"}},{"label":" strnlen_P(const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_P(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen_P() function is similar to strnlen(), except that \\\\c src is a pointer to a string in program space.  \n\\\\returns The strnlen_P function returns strlen_P(src), if that is less than  \n\\\\c len, or \\\\c len if there is no '\\\\\\\\0' character among the first \\\\c len characters pointed to by \\\\c src."},"sortText":"40fd1dd8strnlen_P","filterText":"strnlen_P","insertText":"strnlen_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strnlen_P"}},{"label":" strnlen_PF(uint_farptr_t src, size_t len)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_PF(uint_farptr_t s, size_t len)  \n\\\\brief Determine the length of a fixed-size string  \nThe strnlen_PF() function is similar to strnlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in Flash  \n\\\\param len The maximum number of length to return  \n\\\\returns The strnlen_PF function returns strlen_P(\\\\e s), if that is less than \\\\e len, or \\\\e len if there is no '\\\\\\\\0' character among the first \\\\e len characters pointed to by \\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strnlen_PF","filterText":"strnlen_PF","insertText":"strnlen_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strnlen_PF"}},{"label":" strpbrk(const char *s, const char *accept)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strpbrk(const char \\*s, const char \\*accept)  \nThe strpbrk() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the string \\\\p accept.  \n\\\\return The strpbrk() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will be \\\\c NULL."},"sortText":"40fd1dd8strpbrk","filterText":"strpbrk","insertText":"strpbrk","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strpbrk"}},{"label":" strpbrk_P(const char *s, const char *accept)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strpbrk_P(const char \\*s, const char \\*accept)  \nThe strpbrk_P() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the flash string \\\\p accept. This function is similar to strpbrk() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strpbrk_P() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will  \n\\\\c NULL."},"sortText":"40fd1dd8strpbrk_P","filterText":"strpbrk_P","insertText":"strpbrk_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strpbrk_P"}},{"label":" strrchr_P(const char *, int val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strrchr_P(const char \\*s, int val)  \n\\\\brief Locate character in string.  \nThe strrchr_P() function returns a pointer to the last occurrence of the character \\\\p val in the flash string \\\\p s.  \n\\\\return The strrchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"40fd1dd8strrchr_P","filterText":"strrchr_P","insertText":"strrchr_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strrchr_P"}},{"label":" strrev(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrev(char \\*s)  \n\\\\brief Reverse a string.  \nThe strrev() function reverses the order of the string.  \n\\\\returns The strrev() function returns a pointer to the beginning of the reversed string."},"sortText":"40fd1dd8strrev","filterText":"strrev","insertText":"strrev","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strrev"}},{"label":" strsep(char **, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strsep(char \\*\\*sp, const char \\*delim)  \n\\\\brief Parse a string into tokens.  \nThe strsep() function locates, in the string referenced by \\\\p \\*sp,  \nthe first occurrence of any character in the string \\\\p delim (or the terminating '\\\\\\\\0' character) and replaces it with a '\\\\\\\\0'. The location of the next character after the delimiter character (or \\\\c NULL, if the end of the string was reached) is stored in \\\\p \\*sp. An  \n\\`\\`empty'' field, i.e. one caused by two adjacent delimiter characters, can be detected by comparing the location referenced by the pointer returned in \\\\p \\*sp to '\\\\\\\\0'.  \n\\\\return The strsep() function returns a pointer to the original value of \\\\p \\*sp. If \\\\p \\*sp is initially \\\\c NULL, strsep() returns  \n\\\\c NULL."},"sortText":"40fd1dd8strsep","filterText":"strsep","insertText":"strsep","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strsep"}},{"label":" strsep_P(char **sp, const char *delim)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strsep_P(char \\*\\*sp, const char \\*delim)  \n\\\\brief Parse a string into tokens.  \nThe strsep_P() function locates, in the string referenced by \\\\p \\*sp,  \nthe first occurrence of any character in the string \\\\p delim (or the terminating '\\\\\\\\0' character) and replaces it with a '\\\\\\\\0'. The location of the next character after the delimiter character (or \\\\c NULL, if the end of the string was reached) is stored in \\\\p \\*sp. An  \n\\`\\`empty'' field, i.e. one caused by two adjacent delimiter characters, can be detected by comparing the location referenced by the pointer returned in \\\\p \\*sp to '\\\\\\\\0'. This function is similar to strsep() except that \\\\p delim is a pointer to a string in program space.  \n\\\\return The strsep_P() function returns a pointer to the original value of \\\\p \\*sp. If \\\\p \\*sp is initially \\\\c NULL, strsep_P() returns  \n\\\\c NULL."},"sortText":"40fd1dd8strsep_P","filterText":"strsep_P","insertText":"strsep_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strsep_P"}},{"label":" strspn(const char *s, const char *accept)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strspn(const char \\*s, const char \\*accept)  \nThe strspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept.  \n\\\\return The strspn() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"sortText":"40fd1dd8strspn","filterText":"strspn","insertText":"strspn","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strspn"}},{"label":" strspn_P(const char *s, const char *accept)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strspn_P(const char \\*s, const char \\*accept)  \nThe strspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept. This function is similar to strspn() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strspn_P() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"sortText":"40fd1dd8strspn_P","filterText":"strspn_P","insertText":"strspn_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strspn_P"}},{"label":" strstr_P(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strstr_P(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr_P() function finds the first occurrence of the substring  \n\\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared. The strstr_P() function is similar to strstr() except that  \n\\\\p s2 is pointer to a string in program space.  \n\\\\returns The strstr_P() function returns a pointer to the beginning of the substring, or NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"40fd1dd8strstr_P","filterText":"strstr_P","insertText":"strstr_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strstr_P"}},{"label":" strstr_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strstr_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Locate a substring.  \nThe strstr_PF() function finds the first occurrence of the substring \\\\c s2 in the string \\\\c s1. The terminating '\\\\\\\\0' characters are not compared.  \nThe strstr_PF() function is similar to strstr() except that \\\\c s2 is a far pointer to a string in program space.  \n\\\\returns The strstr_PF() function returns a pointer to the beginning of the substring, or NULL if the substring is not found.  \nIf \\\\c s2 points to a string of zero length, the function returns \\\\c s1. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strstr_PF","filterText":"strstr_PF","insertText":"strstr_PF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strstr_PF"}},{"label":" strtok(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strtok(char \\*s, const char \\*delim)  \n\\\\brief Parses the string s into tokens.  \nstrtok parses the string s into tokens. The first call to strtok should have s as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok. The delimiter string delim may be different for each call.  \n\\\\returns The strtok() function returns a pointer to the next token or NULL when no more tokens are found.  \n\\\\note strtok() is NOT reentrant. For a reentrant version of this function see \\\\c strtok_r()."},"sortText":"40fd1dd8strtok","filterText":"strtok","insertText":"strtok","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strtok"}},{"label":" strtok_P(char *s, const char *delim)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strtok_P(char \\*s, const char * delim)  \n\\\\brief Parses the string into tokens.  \nstrtok_P() parses the string \\\\p s into tokens. The first call to strtok_P() should have \\\\p s as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_P().  \nThe delimiter string \\\\p delim may be different for each call.  \nThe strtok_P() function is similar to strtok() except that \\\\p delim is pointer to a string in program space.  \n\\\\returns The strtok_P() function returns a pointer to the next token or NULL when no more tokens are found.  \n\\\\note strtok_P() is NOT reentrant. For a reentrant version of this function see strtok_rP()."},"sortText":"40fd1dd8strtok_P","filterText":"strtok_P","insertText":"strtok_P","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strtok_P"}},{"label":" strtok_r(char *, const char *, char **)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strtok_r(char \\*string, const char \\*delim, char \\*\\*last)  \n\\\\brief Parses string into tokens.  \nstrtok_r parses string into tokens. The first call to strtok_r should have string as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_r. The delimiter string  \n\\\\p delim may be different for each call. \\\\p last is a user allocated char\\* pointer. It must be the same while parsing the same string. strtok_r is a reentrant version of strtok().  \n\\\\returns The strtok_r() function returns a pointer to the next token or NULL when no more tokens are found."},"sortText":"40fd1dd8strtok_r","filterText":"strtok_r","insertText":"strtok_r","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strtok_r"}},{"label":" strtok_rP(char *s, const char *delim, char **last)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strtok_rP (char \\*string, const char \\*delim, char \\*\\*last)  \n\\\\brief Parses string into tokens.  \nThe strtok_rP() function parses \\\\p string into tokens. The first call to strtok_rP() should have string as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_rP().  \nThe delimiter string \\\\p delim may be different for each call. \\\\p last is a user allocated char\\* pointer. It must be the same while parsing the same string. strtok_rP() is a reentrant version of strtok_P().  \nThe strtok_rP() function is similar to strtok_r() except that \\\\p delim is pointer to a string in program space.  \n\\\\returns The strtok_rP() function returns a pointer to the next token or NULL when no more tokens are found."},"sortText":"40fd1dd8strtok_rP","filterText":"strtok_rP","insertText":"strtok_rP","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strtok_rP"}},{"label":" strupr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strupr(char \\*s)  \n\\\\brief Convert a string to upper case.  \nThe strupr() function will convert a string to upper case. Only the lower case alphabetic characters [a .. z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strupr() function returns a pointer to the converted string. The pointer is the same as that passed in since the operation is perform in place."},"sortText":"40fd1dd8strupr","filterText":"strupr","insertText":"strupr","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":13}},"newText":"strupr"}}]}}Content-Length: 38

{"jsonrpc":"2.0","id":101,"result":[]}
<<<
Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":47},"contentChanges":[{"range":{"start":{"line":145,"character":13},"end":{"line":145,"character":13}},"rangeLength":0,"text":"t"}]}}Content-Length: 295

{"jsonrpc":"2.0","id":102,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":101}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":102}}Content-Length: 295

{"jsonrpc":"2.0","id":103,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":48},"contentChanges":[{"range":{"start":{"line":145,"character":14},"end":{"line":145,"character":14}},"rangeLength":0,"text":"o"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":103}}Content-Length: 295

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":104}}Content-Length: 295

{"jsonrpc":"2.0","id":105,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":49},"contentChanges":[{"range":{"start":{"line":145,"character":15},"end":{"line":145,"character":15}},"rangeLength":0,"text":"p"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":105}}Content-Length: 295

{"jsonrpc":"2.0","id":106,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":106}}Content-Length: 295

{"jsonrpc":"2.0","id":107,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3790

{"jsonrpc":"2.0","id":102,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3790

{"jsonrpc":"2.0","id":103,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3790

{"jsonrpc":"2.0","id":104,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3790

{"jsonrpc":"2.0","id":105,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3790

{"jsonrpc":"2.0","id":106,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3790

{"jsonrpc":"2.0","id":107,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}
<<<
Content-Length: 358

{"jsonrpc":"2.0","id":108,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":145,"character":16},"context":{"triggerKind":3}}}Content-Length: 400

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":145,"character":16},"end":{"line":145,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 310

{"jsonrpc":"2.0","id":108,"result":{"isIncomplete":false,"items":[{"label":" stop()","kind":3,"detail":"void","sortText":"3ffedfe4stop","filterText":"stop","insertText":"stop","insertTextFormat":1,"textEdit":{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":16}},"newText":"stop"}}]}}Content-Length: 38

{"jsonrpc":"2.0","id":109,"result":[]}
<<<
Content-Length: 4852

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":49},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            back();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}Content-Length: 337

{"jsonrpc":"2.0","id":110,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":145,"character":14}}}
>>>
Content-Length: 394

{"jsonrpc":"2.0","id":110,"result":[{"range":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}},"kind":1},{"range":{"start":{"line":113,"character":2},"end":{"line":113,"character":6}},"kind":1},{"range":{"start":{"line":127,"character":8},"end":{"line":127,"character":12}},"kind":1},{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":16}},"kind":1}]}Content-Length: 119

{"jsonrpc":"2.0","id":"19","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"19","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 400

{"jsonrpc":"2.0","id":111,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":111,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":112,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":145,"character":13}}}
>>>
Content-Length: 317

{"jsonrpc":"2.0","id":112,"result":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","range":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}}]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":113,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":148,"character":15}}}
>>>
Content-Length: 240

{"jsonrpc":"2.0","id":113,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/wiring.c","range":{"start":{"line":105,"character":5},"end":{"line":105,"character":10}}}]}
<<<
Content-Length: 12898

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/wiring.c","languageId":"c","version":1,"text":"/*\n  wiring.c - Partial implementation of the Wiring API for the ATmega8.\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#include \"wiring_private.h\"\n\n// the prescaler is set so that timer0 ticks every 64 clock cycles, and the\n// the overflow handler is called every 256 ticks.\n#define MICROSECONDS_PER_TIMER0_OVERFLOW (clockCyclesToMicroseconds(64 * 256))\n\n// the whole number of milliseconds per timer0 overflow\n#define MILLIS_INC (MICROSECONDS_PER_TIMER0_OVERFLOW / 1000)\n\n// the fractional number of milliseconds per timer0 overflow. we shift right\n// by three to fit these numbers into a byte. (for the clock speeds we care\n// about - 8 and 16 MHz - this doesn't lose precision.)\n#define FRACT_INC ((MICROSECONDS_PER_TIMER0_OVERFLOW % 1000) >> 3)\n#define FRACT_MAX (1000 >> 3)\n\nvolatile unsigned long timer0_overflow_count = 0;\nvolatile unsigned long timer0_millis = 0;\nstatic unsigned char timer0_fract = 0;\n\n#if defined(TIM0_OVF_vect)\nISR(TIM0_OVF_vect)\n#else\nISR(TIMER0_OVF_vect)\n#endif\n{\n\t// copy these to local variables so they can be stored in registers\n\t// (volatile variables must be read from memory on every access)\n\tunsigned long m = timer0_millis;\n\tunsigned char f = timer0_fract;\n\n\tm += MILLIS_INC;\n\tf += FRACT_INC;\n\tif (f >= FRACT_MAX) {\n\t\tf -= FRACT_MAX;\n\t\tm += 1;\n\t}\n\n\ttimer0_fract = f;\n\ttimer0_millis = m;\n\ttimer0_overflow_count++;\n}\n\nunsigned long millis()\n{\n\tunsigned long m;\n\tuint8_t oldSREG = SREG;\n\n\t// disable interrupts while we read timer0_millis or we might get an\n\t// inconsistent value (e.g. in the middle of a write to timer0_millis)\n\tcli();\n\tm = timer0_millis;\n\tSREG = oldSREG;\n\n\treturn m;\n}\n\nunsigned long micros() {\n\tunsigned long m;\n\tuint8_t oldSREG = SREG, t;\n\t\n\tcli();\n\tm = timer0_overflow_count;\n#if defined(TCNT0)\n\tt = TCNT0;\n#elif defined(TCNT0L)\n\tt = TCNT0L;\n#else\n\t#error TIMER 0 not defined\n#endif\n\n#ifdef TIFR0\n\tif ((TIFR0 & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#else\n\tif ((TIFR & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#endif\n\n\tSREG = oldSREG;\n\t\n\treturn ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());\n}\n\nvoid delay(unsigned long ms)\n{\n\tuint32_t start = micros();\n\n\twhile (ms > 0) {\n\t\tyield();\n\t\twhile ( ms > 0 && (micros() - start) >= 1000) {\n\t\t\tms--;\n\t\t\tstart += 1000;\n\t\t}\n\t}\n}\n\n/* Delay for the given number of microseconds.  Assumes a 1, 8, 12, 16, 20 or 24 MHz clock. */\nvoid delayMicroseconds(unsigned int us)\n{\n\t// call = 4 cycles + 2 to 4 cycles to init us(2 for constant delay, 4 for variable)\n\n\t// calling avrlib's delay_us() function with low values (e.g. 1 or\n\t// 2 microseconds) gives delays longer than desired.\n\t//delay_us(us);\n#if F_CPU >= 24000000L\n\t// for the 24 MHz clock for the adventurous ones trying to overclock\n\n\t// zero delay fix\n\tif (!us) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/6 of a microsecond (4 cycles)\n\t// per iteration, so execute it six times for each microsecond of\n\t// delay requested.\n\tus *= 6; // x6 us, = 7 cycles\n\n\t// account for the time taken in the preceding commands.\n\t// we just burned 22 (24) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can subtract 5\n\tus -= 5; //=2 cycles\n\n#elif F_CPU >= 20000000L\n\t// for the 20 MHz clock on rare Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 18 (20) cycles, which is 1us\n\t__asm__ __volatile__ (\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\"); //just waiting 4 cycles\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/5 of a microsecond (4 cycles)\n\t// per iteration, so execute it five times for each microsecond of\n\t// delay requested.\n\tus = (us << 2) + us; // x5 us, = 7 cycles\n\n\t// account for the time taken in the preceding commands.\n\t// we just burned 26 (28) cycles above, remove 7, (7*4=28)\n\t// us is at least 10 so we can subtract 7\n\tus -= 7; // 2 cycles\n\n#elif F_CPU >= 16000000L\n\t// for the 16 MHz clock on most Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/4 of a microsecond (4 cycles)\n\t// per iteration, so execute it four times for each microsecond of\n\t// delay requested.\n\tus <<= 2; // x4 us, = 4 cycles\n\n\t// account for the time taken in the preceding commands.\n\t// we just burned 19 (21) cycles above, remove 5, (5*4=20)\n\t// us is at least 8 so we can subtract 5\n\tus -= 5; // = 2 cycles,\n\n#elif F_CPU >= 12000000L\n\t// for the 12 MHz clock if somebody is working with USB\n\n\t// for a 1 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1.5us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/3 of a microsecond (4 cycles)\n\t// per iteration, so execute it three times for each microsecond of\n\t// delay requested.\n\tus = (us << 1) + us; // x3 us, = 5 cycles\n\n\t// account for the time taken in the preceding commands.\n\t// we just burned 20 (22) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can subtract 5\n\tus -= 5; //2 cycles\n\n#elif F_CPU >= 8000000L\n\t// for the 8 MHz internal clock\n\n\t// for a 1 and 2 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 2us\n\tif (us <= 2) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/2 of a microsecond (4 cycles)\n\t// per iteration, so execute it twice for each microsecond of\n\t// delay requested.\n\tus <<= 1; //x2 us, = 2 cycles\n\n\t// account for the time taken in the preceding commands.\n\t// we just burned 17 (19) cycles above, remove 4, (4*4=16)\n\t// us is at least 6 so we can subtract 4\n\tus -= 4; // = 2 cycles\n\n#else\n\t// for the 1 MHz internal clock (default settings for common Atmega microcontrollers)\n\n\t// the overhead of the function calls is 14 (16) cycles\n\tif (us <= 16) return; //= 3 cycles, (4 when true)\n\tif (us <= 25) return; //= 3 cycles, (4 when true), (must be at least 25 if we want to subtract 22)\n\n\t// compensate for the time taken by the preceding and next commands (about 22 cycles)\n\tus -= 22; // = 2 cycles\n\t// the following loop takes 4 microseconds (4 cycles)\n\t// per iteration, so execute it us/4 times\n\t// us is at least 4, divided by 4 gives us 1 (no zero delay bug)\n\tus >>= 2; // us div 4, = 4 cycles\n\t\n\n#endif\n\n\t// busy wait\n\t__asm__ __volatile__ (\n\t\t\"1: sbiw %0,1\" \"\\n\\t\" // 2 cycles\n\t\t\"brne 1b\" : \"=w\" (us) : \"0\" (us) // 2 cycles\n\t);\n\t// return = 4 cycles\n}\n\nvoid init()\n{\n\t// this needs to be called before setup() or some functions won't\n\t// work there\n\tsei();\n\t\n\t// on the ATmega168, timer 0 is also used for fast hardware pwm\n\t// (using phase-correct PWM would mean that timer 0 overflowed half as often\n\t// resulting in different millis() behavior on the ATmega8 and ATmega168)\n#if defined(TCCR0A) && defined(WGM01)\n\tsbi(TCCR0A, WGM01);\n\tsbi(TCCR0A, WGM00);\n#endif\n\n\t// set timer 0 prescale factor to 64\n#if defined(__AVR_ATmega128__)\n\t// CPU specific: different values for the ATmega128\n\tsbi(TCCR0, CS02);\n#elif defined(TCCR0) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard atmega8\n\tsbi(TCCR0, CS01);\n\tsbi(TCCR0, CS00);\n#elif defined(TCCR0B) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard 168/328/1280/2560\n\tsbi(TCCR0B, CS01);\n\tsbi(TCCR0B, CS00);\n#elif defined(TCCR0A) && defined(CS01) && defined(CS00)\n\t// this combination is for the __AVR_ATmega645__ series\n\tsbi(TCCR0A, CS01);\n\tsbi(TCCR0A, CS00);\n#else\n\t#error Timer 0 prescale factor 64 not set correctly\n#endif\n\n\t// enable timer 0 overflow interrupt\n#if defined(TIMSK) && defined(TOIE0)\n\tsbi(TIMSK, TOIE0);\n#elif defined(TIMSK0) && defined(TOIE0)\n\tsbi(TIMSK0, TOIE0);\n#else\n\t#error\tTimer 0 overflow interrupt not set correctly\n#endif\n\n\t// timers 1 and 2 are used for phase-correct hardware pwm\n\t// this is better for motors as it ensures an even waveform\n\t// note, however, that fast pwm mode can achieve a frequency of up\n\t// 8 MHz (with a 16 MHz clock) at 50% duty cycle\n\n#if defined(TCCR1B) && defined(CS11) && defined(CS10)\n\tTCCR1B = 0;\n\n\t// set timer 1 prescale factor to 64\n\tsbi(TCCR1B, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1B, CS10);\n#endif\n#elif defined(TCCR1) && defined(CS11) && defined(CS10)\n\tsbi(TCCR1, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1, CS10);\n#endif\n#endif\n\t// put timer 1 in 8-bit phase correct pwm mode\n#if defined(TCCR1A) && defined(WGM10)\n\tsbi(TCCR1A, WGM10);\n#endif\n\n\t// set timer 2 prescale factor to 64\n#if defined(TCCR2) && defined(CS22)\n\tsbi(TCCR2, CS22);\n#elif defined(TCCR2B) && defined(CS22)\n\tsbi(TCCR2B, CS22);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n\t// configure timer 2 for phase correct pwm (8-bit)\n#if defined(TCCR2) && defined(WGM20)\n\tsbi(TCCR2, WGM20);\n#elif defined(TCCR2A) && defined(WGM20)\n\tsbi(TCCR2A, WGM20);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n#if defined(TCCR3B) && defined(CS31) && defined(WGM30)\n\tsbi(TCCR3B, CS31);\t\t// set timer 3 prescale factor to 64\n\tsbi(TCCR3B, CS30);\n\tsbi(TCCR3A, WGM30);\t\t// put timer 3 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(TCCR4A) && defined(TCCR4B) && defined(TCCR4D) /* beginning of timer4 block for 32U4 and similar */\n\tsbi(TCCR4B, CS42);\t\t// set timer4 prescale factor to 64\n\tsbi(TCCR4B, CS41);\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4D, WGM40);\t\t// put timer 4 in phase- and frequency-correct PWM mode\t\n\tsbi(TCCR4A, PWM4A);\t\t// enable PWM mode for comparator OCR4A\n\tsbi(TCCR4C, PWM4D);\t\t// enable PWM mode for comparator OCR4D\n#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */\n#if defined(TCCR4B) && defined(CS41) && defined(WGM40)\n\tsbi(TCCR4B, CS41);\t\t// set timer 4 prescale factor to 64\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4A, WGM40);\t\t// put timer 4 in 8-bit phase correct pwm mode\n#endif\n#endif /* end timer4 block for ATMEGA1280/2560 and similar */\t\n\n#if defined(TCCR5B) && defined(CS51) && defined(WGM50)\n\tsbi(TCCR5B, CS51);\t\t// set timer 5 prescale factor to 64\n\tsbi(TCCR5B, CS50);\n\tsbi(TCCR5A, WGM50);\t\t// put timer 5 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(ADCSRA)\n\t// set a2d prescaler so we are inside the desired 50-200 KHz range.\n\t#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 4000000 // 4 MHz / 32 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 2000000 // 2 MHz / 16 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 1000000 // 1 MHz / 8 = 125 KHz\n\t\tcbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#else // 128 kHz / 2 = 64 KHz -> This is the closest you can get, the prescaler is 2\n\t\tcbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#endif\n\t// enable a2d conversions\n\tsbi(ADCSRA, ADEN);\n#endif\n\n\t// the bootloader connects pins 0 and 1 to the USART; disconnect them\n\t// here so they can be used as normal digital i/o; they will be\n\t// reconnected in Serial.begin()\n#if defined(UCSRB)\n\tUCSRB = 0;\n#elif defined(UCSR0B)\n\tUCSR0B = 0;\n#endif\n}\n"}}}Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/wiring.c"}}}Content-Length: 330

{"jsonrpc":"2.0","id":114,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":150,"character":19}}}
>>>
Content-Length: 318

{"jsonrpc":"2.0","id":114,"result":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","range":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":115,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":151,"character":16}}}
>>>
Content-Length: 317

{"jsonrpc":"2.0","id":115,"result":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","range":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}}]}
<<<
Content-Length: 325

{"jsonrpc":"2.0","id":116,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":151,"character":16}}}
>>>
Content-Length: 234

{"jsonrpc":"2.0","id":116,"result":{"contents":{"kind":"markdown","value":"### function `back`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid back()\n```"},"range":{"start":{"line":151,"character":12},"end":{"line":151,"character":16}}}}
<<<
Content-Length: 325

{"jsonrpc":"2.0","id":117,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":151,"character":13}}}
>>>
Content-Length: 234

{"jsonrpc":"2.0","id":117,"result":{"contents":{"kind":"markdown","value":"### function `back`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid back()\n```"},"range":{"start":{"line":151,"character":12},"end":{"line":151,"character":16}}}}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":118,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":151,"character":13}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":117}}
>>>
Content-Length: 215

{"jsonrpc":"2.0","id":118,"result":[{"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}},"kind":1},{"range":{"start":{"line":151,"character":12},"end":{"line":151,"character":16}},"kind":1}]}
<<<
Content-Length: 400

{"jsonrpc":"2.0","id":119,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":151,"character":13},"end":{"line":151,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":119,"result":[]}
<<<
Content-Length: 325

{"jsonrpc":"2.0","id":120,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":151,"character":13}}}
>>>
Content-Length: 234

{"jsonrpc":"2.0","id":120,"result":{"contents":{"kind":"markdown","value":"### function `back`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid back()\n```"},"range":{"start":{"line":151,"character":12},"end":{"line":151,"character":16}}}}Content-Length: 119

{"jsonrpc":"2.0","id":"20","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"20","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 400

{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":151,"character":12},"end":{"line":151,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":121,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":122,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":151,"character":14}}}
>>>
Content-Length: 317

{"jsonrpc":"2.0","id":122,"result":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","range":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}}]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":123,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":150,"character":16}}}
>>>
Content-Length: 318

{"jsonrpc":"2.0","id":123,"result":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","range":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"21","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"21","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 425

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":50},"contentChanges":[{"range":{"start":{"line":151,"character":12},"end":{"line":151,"character":16}},"rangeLength":4,"text":"stop"}]}}Content-Length: 295

{"jsonrpc":"2.0","id":124,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":124}}Content-Length: 295

{"jsonrpc":"2.0","id":125,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3790

{"jsonrpc":"2.0","id":124,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3790

{"jsonrpc":"2.0","id":125,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}
<<<
Content-Length: 400

{"jsonrpc":"2.0","id":126,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":151,"character":16},"end":{"line":151,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":126,"result":[]}
<<<
Content-Length: 325

{"jsonrpc":"2.0","id":127,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":150,"character":31}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":127,"result":null}
<<<
Content-Length: 400

{"jsonrpc":"2.0","id":128,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":151,"character":19},"end":{"line":151,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":128,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"22","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"22","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 4852

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":50},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 325

{"jsonrpc":"2.0","id":129,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":150,"character":35}}}
>>>
Content-Length: 267

{"jsonrpc":"2.0","id":129,"result":{"contents":{"kind":"markdown","value":"### variable `leftDistance`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\nint leftDistance = 0\n```"},"range":{"start":{"line":150,"character":32},"end":{"line":150,"character":44}}}}Content-Length: 119

{"jsonrpc":"2.0","id":"23","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"23","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 325

{"jsonrpc":"2.0","id":130,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":148,"character":22}}}
>>>
Content-Length: 289

{"jsonrpc":"2.0","id":130,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\nâ†’ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":148,"character":22},"end":{"line":148,"character":23}}}}
<<<
Content-Length: 325

{"jsonrpc":"2.0","id":131,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":148,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":131,"result":null}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":132,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":170,"character":5},"end":{"line":170,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":132,"result":[]}
<<<
Content-Length: 400

{"jsonrpc":"2.0","id":133,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":163,"character":20},"end":{"line":164,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":133,"result":[]}
<<<
Content-Length: 400

{"jsonrpc":"2.0","id":134,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":161,"character":18},"end":{"line":161,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":134,"result":[]}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"24","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"24","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"25","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"25","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 325

{"jsonrpc":"2.0","id":135,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":103,"character":45}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":135,"result":null}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":136,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":81,"character":54}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":136,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":137,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":81,"character":54},"end":{"line":81,"character":54}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":137,"result":[]}
<<<
Content-Length: 4852

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":50},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}Content-Length: 396

{"jsonrpc":"2.0","id":138,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":175,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":138,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"26","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"26","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"27","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"27","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 4852

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":50},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}Content-Length: 396

{"jsonrpc":"2.0","id":139,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":83,"character":1},"end":{"line":83,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":139,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"28","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"28","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 60

{"jsonrpc":"2.0","id":140,"method":"shutdown","params":null}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":140,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3414

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":18700,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"g:\\11.ZhiYi\\5.Tutorial\\1.tutorial\\ZYC0043ï¼‰Four-way tracking and obstacle avoidance following car kit v2.0 tutorial\\ZYC0043\\4_Arduino_Code\\HC-SR04","rootUri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04","name":"HC-SR04"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.1"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4870

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","languageId":"cpp","version":1,"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}}Content-Length: 293

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3788

{"jsonrpc":"2.0","id":1,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 293

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":2},"contentChanges":[{"range":{"start":{"line":83,"character":1},"end":{"line":84,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 293

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3788

{"jsonrpc":"2.0","id":2,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":87,"character":6},"end":{"line":87,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":116,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":118,"character":0},"end":{"line":174,"character":1}},"selectionRange":{"start":{"line":118,"character":5},"end":{"line":118,"character":9}}}]}Content-Length: 3787

{"jsonrpc":"2.0","id":3,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":99,"character":1}},"selectionRange":{"start":{"line":86,"character":6},"end":{"line":86,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":101,"character":0},"end":{"line":115,"character":1}},"selectionRange":{"start":{"line":101,"character":5},"end":{"line":101,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":117,"character":0},"end":{"line":173,"character":1}},"selectionRange":{"start":{"line":117,"character":5},"end":{"line":117,"character":9}}}]}
<<<
Content-Length: 394

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":83,"character":1},"end":{"line":83,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":4,"result":[]}
<<<
Content-Length: 4847

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":2},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 293

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":3},"contentChanges":[{"range":{"start":{"line":83,"character":1},"end":{"line":84,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 293

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3787

{"jsonrpc":"2.0","id":5,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":99,"character":1}},"selectionRange":{"start":{"line":86,"character":6},"end":{"line":86,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":101,"character":0},"end":{"line":115,"character":1}},"selectionRange":{"start":{"line":101,"character":5},"end":{"line":101,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":117,"character":0},"end":{"line":173,"character":1}},"selectionRange":{"start":{"line":117,"character":5},"end":{"line":117,"character":9}}}]}Content-Length: 3787

{"jsonrpc":"2.0","id":6,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 394

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":83,"character":1},"end":{"line":83,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":7,"result":[]}
<<<
Content-Length: 4843

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":3},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":89,"character":12}}}
>>>
Content-Length: 318

{"jsonrpc":"2.0","id":8,"result":{"contents":{"kind":"markdown","value":"### function `digitalWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t val`\n\n---\n```cpp\nvoid digitalWrite(uint8_t pin, uint8_t val)\n```"},"range":{"start":{"line":89,"character":4},"end":{"line":89,"character":16}}}}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":81,"character":32}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":9,"result":null}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":93,"character":28},"end":{"line":93,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":10,"result":[]}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":81,"character":52}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":11,"result":null}
<<<
Content-Length: 321

{"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":6,"character":0}}}
>>>
Content-Length: 207

{"jsonrpc":"2.0","id":12,"result":{"contents":{"kind":"markdown","value":"### class `Servo`  \n\n---\n```cpp\nclass Servo {}\n```"},"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":5}}}}
<<<
Content-Length: 321

{"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":5,"character":0}}}
>>>
Content-Length: 170

{"jsonrpc":"2.0","id":13,"result":{"contents":{"kind":"markdown","value":"### `Servo.h`  \n\n---\n```\nD:\\Program Files\\Arduino\\libraries\\Servo\\src\\Servo.h\n```"}}}
<<<
Content-Length: 321

{"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":8,"character":1}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":14,"result":null}
<<<
Content-Length: 321

{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":8,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":15,"result":null}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":12,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":16,"result":null}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":12,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":17,"result":null}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":12,"character":0},"end":{"line":16,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":18,"result":[]}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":12,"character":0},"end":{"line":17,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":19,"result":[]}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":20,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":6,"character":43}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":20,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":21,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":28,"character":32}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":21,"result":null}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":12,"character":0},"end":{"line":20,"character":45}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":22,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":47}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":23,"result":null}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":28,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":24,"result":null}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":28,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":25,"result":null}
<<<
Content-Length: 334

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":28,"character":1}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":26,"result":[]}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":28,"character":1},"end":{"line":28,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":27,"result":[]}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":28,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":28,"result":null}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":29,"result":[]}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":30,"result":[]}
<<<
Content-Length: 328

{"jsonrpc":"2.0","id":31,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":38,"character":12}}}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":31,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Print.cpp","range":{"start":{"line":137,"character":14},"end":{"line":137,"character":21}}}]}
<<<
Content-Length: 5970

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Print.cpp","languageId":"cpp","version":1,"text":"/*\n Print.cpp - Base class that provides print() and println()\n Copyright (c) 2008 David A. Mellis.  All right reserved.\n \n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n \n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n \n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n \n Modified 23 November 2006 by David A. Mellis\n Modified 03 August 2015 by Chuck Todd\n */\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include \"Arduino.h\"\n\n#include \"Print.h\"\n\n// Public Methods //////////////////////////////////////////////////////////////\n\n/* default implementation: may be overridden */\nsize_t Print::write(const uint8_t *buffer, size_t size)\n{\n  size_t n = 0;\n  while (size--) {\n    if (write(*buffer++)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const __FlashStringHelper *ifsh)\n{\n  PGM_P p = reinterpret_cast<PGM_P>(ifsh);\n  size_t n = 0;\n  while (1) {\n    unsigned char c = pgm_read_byte(p++);\n    if (c == 0) break;\n    if (write(c)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const String &s)\n{\n  return write(s.c_str(), s.length());\n}\n\nsize_t Print::print(const char str[])\n{\n  return write(str);\n}\n\nsize_t Print::print(char c)\n{\n  return write(c);\n}\n\nsize_t Print::print(unsigned char b, int base)\n{\n  return print((unsigned long) b, base);\n}\n\nsize_t Print::print(int n, int base)\n{\n  return print((long) n, base);\n}\n\nsize_t Print::print(unsigned int n, int base)\n{\n  return print((unsigned long) n, base);\n}\n\nsize_t Print::print(long n, int base)\n{\n  if (base == 0) {\n    return write(n);\n  } else if (base == 10) {\n    if (n < 0) {\n      int t = print('-');\n      n = -n;\n      return printNumber(n, 10) + t;\n    }\n    return printNumber(n, 10);\n  } else {\n    return printNumber(n, base);\n  }\n}\n\nsize_t Print::print(unsigned long n, int base)\n{\n  if (base == 0) return write(n);\n  else return printNumber(n, base);\n}\n\nsize_t Print::print(double n, int digits)\n{\n  return printFloat(n, digits);\n}\n\nsize_t Print::println(const __FlashStringHelper *ifsh)\n{\n  size_t n = print(ifsh);\n  n += println();\n  return n;\n}\n\nsize_t Print::print(const Printable& x)\n{\n  return x.printTo(*this);\n}\n\nsize_t Print::println(void)\n{\n  return write(\"\\r\\n\");\n}\n\nsize_t Print::println(const String &s)\n{\n  size_t n = print(s);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const char c[])\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(char c)\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned char b, int base)\n{\n  size_t n = print(b, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(double num, int digits)\n{\n  size_t n = print(num, digits);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const Printable& x)\n{\n  size_t n = print(x);\n  n += println();\n  return n;\n}\n\n// Private Methods /////////////////////////////////////////////////////////////\n\nsize_t Print::printNumber(unsigned long n, uint8_t base)\n{\n  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.\n  char *str = &buf[sizeof(buf) - 1];\n\n  *str = '\\0';\n\n  // prevent crash if called with base == 1\n  if (base < 2) base = 10;\n\n  do {\n    char c = n % base;\n    n /= base;\n\n    *--str = c < 10 ? c + '0' : c + 'A' - 10;\n  } while(n);\n\n  return write(str);\n}\n\nsize_t Print::printFloat(double number, uint8_t digits) \n{ \n  size_t n = 0;\n  \n  if (isnan(number)) return print(\"nan\");\n  if (isinf(number)) return print(\"inf\");\n  if (number > 4294967040.0) return print (\"ovf\");  // constant determined empirically\n  if (number <-4294967040.0) return print (\"ovf\");  // constant determined empirically\n  \n  // Handle negative numbers\n  if (number < 0.0)\n  {\n     n += print('-');\n     number = -number;\n  }\n\n  // Round correctly so that print(1.999, 2) prints as \"2.00\"\n  double rounding = 0.5;\n  for (uint8_t i=0; i<digits; ++i)\n    rounding /= 10.0;\n  \n  number += rounding;\n\n  // Extract the integer part of the number and print it\n  unsigned long int_part = (unsigned long)number;\n  double remainder = number - (double)int_part;\n  n += print(int_part);\n\n  // Print the decimal point, but only if there are digits beyond\n  if (digits > 0) {\n    n += print('.'); \n  }\n\n  // Extract digits from the remainder one at a time\n  while (digits-- > 0)\n  {\n    remainder *= 10.0;\n    unsigned int toPrint = (unsigned int)(remainder);\n    n += print(toPrint);\n    remainder -= toPrint; \n  } \n  \n  return n;\n}\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Print.cpp"}}}Content-Length: 328

{"jsonrpc":"2.0","id":32,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":22,"character":23}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":32,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/variants/standard/pins_arduino.h","range":{"start":{"line":69,"character":21},"end":{"line":69,"character":23}}}]}
<<<
Content-Length: 7025

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/variants/standard/pins_arduino.h","languageId":"cpp","version":1,"text":"/*\n  pins_arduino.h - Pin definition functions for Arduino\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2007 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#ifndef Pins_Arduino_h\n#define Pins_Arduino_h\n\n#include <avr/pgmspace.h>\n\n#define NUM_DIGITAL_PINS            20\n#define NUM_ANALOG_INPUTS           6\n#define analogInputToDigitalPin(p)  ((p < 6) ? (p) + 14 : -1)\n\n#if defined(__AVR_ATmega8__)\n#define digitalPinHasPWM(p)         ((p) == 9 || (p) == 10 || (p) == 11)\n#else\n#define digitalPinHasPWM(p)         ((p) == 3 || (p) == 5 || (p) == 6 || (p) == 9 || (p) == 10 || (p) == 11)\n#endif\n\n#define PIN_SPI_SS    (10)\n#define PIN_SPI_MOSI  (11)\n#define PIN_SPI_MISO  (12)\n#define PIN_SPI_SCK   (13)\n\nstatic const uint8_t SS   = PIN_SPI_SS;\nstatic const uint8_t MOSI = PIN_SPI_MOSI;\nstatic const uint8_t MISO = PIN_SPI_MISO;\nstatic const uint8_t SCK  = PIN_SPI_SCK;\n\n#define PIN_WIRE_SDA        (18)\n#define PIN_WIRE_SCL        (19)\n\nstatic const uint8_t SDA = PIN_WIRE_SDA;\nstatic const uint8_t SCL = PIN_WIRE_SCL;\n\n#define LED_BUILTIN 13\n\n#define PIN_A0   (14)\n#define PIN_A1   (15)\n#define PIN_A2   (16)\n#define PIN_A3   (17)\n#define PIN_A4   (18)\n#define PIN_A5   (19)\n#define PIN_A6   (20)\n#define PIN_A7   (21)\n\nstatic const uint8_t A0 = PIN_A0;\nstatic const uint8_t A1 = PIN_A1;\nstatic const uint8_t A2 = PIN_A2;\nstatic const uint8_t A3 = PIN_A3;\nstatic const uint8_t A4 = PIN_A4;\nstatic const uint8_t A5 = PIN_A5;\nstatic const uint8_t A6 = PIN_A6;\nstatic const uint8_t A7 = PIN_A7;\n\n#define digitalPinToPCICR(p)    (((p) >= 0 && (p) <= 21) ? (&PCICR) : ((uint8_t *)0))\n#define digitalPinToPCICRbit(p) (((p) <= 7) ? 2 : (((p) <= 13) ? 0 : 1))\n#define digitalPinToPCMSK(p)    (((p) <= 7) ? (&PCMSK2) : (((p) <= 13) ? (&PCMSK0) : (((p) <= 21) ? (&PCMSK1) : ((uint8_t *)0))))\n#define digitalPinToPCMSKbit(p) (((p) <= 7) ? (p) : (((p) <= 13) ? ((p) - 8) : ((p) - 14)))\n\n#define digitalPinToInterrupt(p)  ((p) == 2 ? 0 : ((p) == 3 ? 1 : NOT_AN_INTERRUPT))\n\n#ifdef ARDUINO_MAIN\n\n// On the Arduino board, digital pins are also used\n// for the analog output (software PWM).  Analog input\n// pins are a separate set.\n\n// ATMEL ATMEGA8 & 168 / ARDUINO\n//\n//                  +-\\/-+\n//            PC6  1|    |28  PC5 (AI 5)\n//      (D 0) PD0  2|    |27  PC4 (AI 4)\n//      (D 1) PD1  3|    |26  PC3 (AI 3)\n//      (D 2) PD2  4|    |25  PC2 (AI 2)\n// PWM+ (D 3) PD3  5|    |24  PC1 (AI 1)\n//      (D 4) PD4  6|    |23  PC0 (AI 0)\n//            VCC  7|    |22  GND\n//            GND  8|    |21  AREF\n//            PB6  9|    |20  AVCC\n//            PB7 10|    |19  PB5 (D 13)\n// PWM+ (D 5) PD5 11|    |18  PB4 (D 12)\n// PWM+ (D 6) PD6 12|    |17  PB3 (D 11) PWM\n//      (D 7) PD7 13|    |16  PB2 (D 10) PWM\n//      (D 8) PB0 14|    |15  PB1 (D 9) PWM\n//                  +----+\n//\n// (PWM+ indicates the additional PWM pins on the ATmega168.)\n\n// ATMEL ATMEGA1280 / ARDUINO\n//\n// 0-7 PE0-PE7   works\n// 8-13 PB0-PB5  works\n// 14-21 PA0-PA7 works \n// 22-29 PH0-PH7 works\n// 30-35 PG5-PG0 works\n// 36-43 PC7-PC0 works\n// 44-51 PJ7-PJ0 works\n// 52-59 PL7-PL0 works\n// 60-67 PD7-PD0 works\n// A0-A7 PF0-PF7\n// A8-A15 PK0-PK7\n\n\n// these arrays map port names (e.g. port B) to the\n// appropriate addresses for various functions (e.g. reading\n// and writing)\nconst uint16_t PROGMEM port_to_mode_PGM[] = {\n\tNOT_A_PORT,\n\tNOT_A_PORT,\n\t(uint16_t) &DDRB,\n\t(uint16_t) &DDRC,\n\t(uint16_t) &DDRD,\n};\n\nconst uint16_t PROGMEM port_to_output_PGM[] = {\n\tNOT_A_PORT,\n\tNOT_A_PORT,\n\t(uint16_t) &PORTB,\n\t(uint16_t) &PORTC,\n\t(uint16_t) &PORTD,\n};\n\nconst uint16_t PROGMEM port_to_input_PGM[] = {\n\tNOT_A_PORT,\n\tNOT_A_PORT,\n\t(uint16_t) &PINB,\n\t(uint16_t) &PINC,\n\t(uint16_t) &PIND,\n};\n\nconst uint8_t PROGMEM digital_pin_to_port_PGM[] = {\n\tPD, /* 0 */\n\tPD,\n\tPD,\n\tPD,\n\tPD,\n\tPD,\n\tPD,\n\tPD,\n\tPB, /* 8 */\n\tPB,\n\tPB,\n\tPB,\n\tPB,\n\tPB,\n\tPC, /* 14 */\n\tPC,\n\tPC,\n\tPC,\n\tPC,\n\tPC,\n};\n\nconst uint8_t PROGMEM digital_pin_to_bit_mask_PGM[] = {\n\t_BV(0), /* 0, port D */\n\t_BV(1),\n\t_BV(2),\n\t_BV(3),\n\t_BV(4),\n\t_BV(5),\n\t_BV(6),\n\t_BV(7),\n\t_BV(0), /* 8, port B */\n\t_BV(1),\n\t_BV(2),\n\t_BV(3),\n\t_BV(4),\n\t_BV(5),\n\t_BV(0), /* 14, port C */\n\t_BV(1),\n\t_BV(2),\n\t_BV(3),\n\t_BV(4),\n\t_BV(5),\n};\n\nconst uint8_t PROGMEM digital_pin_to_timer_PGM[] = {\n\tNOT_ON_TIMER, /* 0 - port D */\n\tNOT_ON_TIMER,\n\tNOT_ON_TIMER,\n\t// on the ATmega168, digital pin 3 has hardware pwm\n#if defined(__AVR_ATmega8__)\n\tNOT_ON_TIMER,\n#else\n\tTIMER2B,\n#endif\n\tNOT_ON_TIMER,\n\t// on the ATmega168, digital pins 5 and 6 have hardware pwm\n#if defined(__AVR_ATmega8__)\n\tNOT_ON_TIMER,\n\tNOT_ON_TIMER,\n#else\n\tTIMER0B,\n\tTIMER0A,\n#endif\n\tNOT_ON_TIMER,\n\tNOT_ON_TIMER, /* 8 - port B */\n\tTIMER1A,\n\tTIMER1B,\n#if defined(__AVR_ATmega8__)\n\tTIMER2,\n#else\n\tTIMER2A,\n#endif\n\tNOT_ON_TIMER,\n\tNOT_ON_TIMER,\n\tNOT_ON_TIMER,\n\tNOT_ON_TIMER, /* 14 - port C */\n\tNOT_ON_TIMER,\n\tNOT_ON_TIMER,\n\tNOT_ON_TIMER,\n\tNOT_ON_TIMER,\n};\n\n#endif\n\n// These serial port names are intended to allow libraries and architecture-neutral\n// sketches to automatically default to the correct port name for a particular type\n// of use.  For example, a GPS module would normally connect to SERIAL_PORT_HARDWARE_OPEN,\n// the first hardware serial port whose RX/TX pins are not dedicated to another use.\n//\n// SERIAL_PORT_MONITOR        Port which normally prints to the Arduino Serial Monitor\n//\n// SERIAL_PORT_USBVIRTUAL     Port which is USB virtual serial\n//\n// SERIAL_PORT_LINUXBRIDGE    Port which connects to a Linux system via Bridge library\n//\n// SERIAL_PORT_HARDWARE       Hardware serial port, physical RX & TX pins.\n//\n// SERIAL_PORT_HARDWARE_OPEN  Hardware serial ports which are open for use.  Their RX & TX\n//                            pins are NOT connected to anything by default.\n#define SERIAL_PORT_MONITOR   Serial\n#define SERIAL_PORT_HARDWARE  Serial\n\n#endif\n"}}}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/variants/standard/pins_arduino.h"}}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"8","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"8","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":33,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":112,"character":31}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":33,"result":null}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":78,"character":0},"end":{"line":114,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":34,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":94,"character":37}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":35,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":36,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":129,"character":14}}}
>>>
Content-Length: 267

{"jsonrpc":"2.0","id":36,"result":{"contents":{"kind":"markdown","value":"### variable `rightDistance`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\nint rightDistance = 0\n```"},"range":{"start":{"line":129,"character":8},"end":{"line":129,"character":21}}}}
<<<
Content-Length: 399

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":105,"character":23},"end":{"line":105,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":37,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":38,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":100,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":38,"result":null}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":100,"character":1}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":39,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":100,"character":1},"end":{"line":100,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":40,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":41,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":100,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":41,"result":null}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":42,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":43,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":114,"character":1}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":43,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":44,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":114,"character":1}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":44,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":45,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":114,"character":1}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":45,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":46,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":114,"character":1}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":46,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":47,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":116,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":47,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":48,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":116,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":48,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":49,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":116,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":49,"result":null}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":116,"character":0}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":50,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":116,"character":0},"end":{"line":116,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":51,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":52,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":123,"character":7}}}
>>>
Content-Length: 269

{"jsonrpc":"2.0","id":52,"result":{"contents":{"kind":"markdown","value":"### variable `middleDistance`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\nint middleDistance = 0\n```"},"range":{"start":{"line":123,"character":7},"end":{"line":123,"character":21}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":155,"character":15}}}
>>>
Content-Length: 395

{"jsonrpc":"2.0","id":53,"result":[{"range":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}},"kind":1},{"range":{"start":{"line":155,"character":12},"end":{"line":155,"character":19}},"kind":1},{"range":{"start":{"line":159,"character":8},"end":{"line":159,"character":15}},"kind":1},{"range":{"start":{"line":170,"character":8},"end":{"line":170,"character":15}},"kind":1}]}
<<<
Content-Length: 399

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":155,"character":12},"end":{"line":155,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":54,"result":[]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":55,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":155,"character":15}}}
>>>
Content-Length: 317

{"jsonrpc":"2.0","id":55,"result":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","range":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}}]}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":83,"character":1},"end":{"line":83,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":56,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":57,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":68,"character":17}}}
>>>
Content-Length: 208

{"jsonrpc":"2.0","id":57,"result":{"contents":{"kind":"markdown","value":"### macro `ENB`  \n\n---\n```cpp\n#define ENB 6\n```"},"range":{"start":{"line":68,"character":14},"end":{"line":68,"character":17}}}}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":50,"character":16}}}
>>>
Content-Length: 313

{"jsonrpc":"2.0","id":58,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":16}}}}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":59,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":41,"character":1}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":59,"result":null}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":60,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":41,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":60,"result":null}
<<<
Content-Length: 395

{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":41,"character":0},"end":{"line":83,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":61,"result":[]}
<<<
Content-Length: 327

{"jsonrpc":"2.0","id":62,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":41,"character":4}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":62,"result":[]}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":63,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":41,"character":4}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":63,"result":null}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":64,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":36,"character":25},"end":{"line":36,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":64,"result":[]}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":65,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":34,"character":20}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":65,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":66,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":34,"character":20},"end":{"line":34,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":66,"result":[]}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"9","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"9","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"10","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"10","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":67,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":44}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":67,"result":null}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":35,"character":26},"end":{"line":35,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":68,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":69,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":119,"character":45}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":69,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":70,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":119,"character":45}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":70,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":71,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":18}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":71,"result":null}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":72,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":18}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":72,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":73,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":73,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":74,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":74,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":75,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":18}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":75,"result":null}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":76,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":4},"contentChanges":[{"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":19}},"rangeLength":1,"text":"8"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":76}}Content-Length: 294

{"jsonrpc":"2.0","id":77,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3788

{"jsonrpc":"2.0","id":76,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3788

{"jsonrpc":"2.0","id":77,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":78,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":19},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":78,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":79,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":18}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":79,"result":null}
<<<
Content-Length: 4843

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":4},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 180//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"11","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"11","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"12","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"12","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"13","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"13","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":80,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":39}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":80,"result":null}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":81,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":160,"character":5},"end":{"line":160,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":81,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":82,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":159,"character":10}}}
>>>
Content-Length: 238

{"jsonrpc":"2.0","id":82,"result":{"contents":{"kind":"markdown","value":"### function `forward`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid forward()\n```"},"range":{"start":{"line":159,"character":8},"end":{"line":159,"character":15}}}}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":157,"character":5},"end":{"line":157,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":83,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":84,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":160,"character":5},"end":{"line":160,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":84,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":85,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":159,"character":10}}}
>>>
Content-Length: 238

{"jsonrpc":"2.0","id":85,"result":{"contents":{"kind":"markdown","value":"### function `forward`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid forward()\n```"},"range":{"start":{"line":159,"character":8},"end":{"line":159,"character":15}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":86,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":159,"character":11}}}
>>>
Content-Length: 395

{"jsonrpc":"2.0","id":86,"result":[{"range":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}},"kind":1},{"range":{"start":{"line":155,"character":12},"end":{"line":155,"character":19}},"kind":1},{"range":{"start":{"line":159,"character":8},"end":{"line":159,"character":15}},"kind":1},{"range":{"start":{"line":170,"character":8},"end":{"line":170,"character":15}},"kind":1}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":87,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":159,"character":8},"end":{"line":159,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":87,"result":[]}
<<<
Content-Length: 399

{"jsonrpc":"2.0","id":88,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":159,"character":18},"end":{"line":159,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":88,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":160,"character":5},"end":{"line":160,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":89,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":90,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":171,"character":5}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":90,"result":null}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":170,"character":0},"end":{"line":171,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":91,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":92,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":169,"character":0},"end":{"line":171,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":92,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":93,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 639

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":5},"contentChanges":[{"range":{"start":{"line":171,"character":4},"end":{"line":171,"character":4}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":170,"character":4},"end":{"line":170,"character":4}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":169,"character":4},"end":{"line":169,"character":4}},"rangeLength":0,"text":"// "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":93}}Content-Length: 294

{"jsonrpc":"2.0","id":94,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3788

{"jsonrpc":"2.0","id":93,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3788

{"jsonrpc":"2.0","id":94,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":95,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":169,"character":0},"end":{"line":171,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":95,"result":[]}
<<<
Content-Length: 4852

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":5},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 180//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"14","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"14","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"15","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"15","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"16","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"16","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":96,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":25}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":96,"result":{"contents":{"kind":"markdown","value":"### macro `carSpeed`  \n\n---\n```cpp\n#define carSpeed 180\n```"},"range":{"start":{"line":43,"character":19},"end":{"line":43,"character":27}}}}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":97,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":42,"character":24}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":97,"result":{"contents":{"kind":"markdown","value":"### macro `carSpeed`  \n\n---\n```cpp\n#define carSpeed 180\n```"},"range":{"start":{"line":42,"character":19},"end":{"line":42,"character":27}}}}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":98,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":50,"character":25},"end":{"line":50,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":98,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":99,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":38,"character":25}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":99,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":100,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":38,"character":24}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":100,"result":null}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":101,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":38,"character":25}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":101,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":102,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":102,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":103,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":41,"character":26}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":103,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":6},"contentChanges":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":104}}Content-Length: 295

{"jsonrpc":"2.0","id":105,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":104,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":105,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":105}}Content-Length: 295

{"jsonrpc":"2.0","id":106,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":7},"contentChanges":[{"range":{"start":{"line":38,"character":26},"end":{"line":38,"character":26}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":106}}Content-Length: 295

{"jsonrpc":"2.0","id":107,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":106,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":107,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":108,"result":[]}
<<<
Content-Length: 4854

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":7},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 180//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward  \");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 295

{"jsonrpc":"2.0","id":109,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":8},"contentChanges":[{"range":{"start":{"line":38,"character":26},"end":{"line":38,"character":27}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":109}}Content-Length: 295

{"jsonrpc":"2.0","id":110,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":109,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":110,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":110}}Content-Length: 295

{"jsonrpc":"2.0","id":111,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":9},"contentChanges":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":26}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":111}}Content-Length: 295

{"jsonrpc":"2.0","id":112,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":111,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":112,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":113,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":113,"result":[]}
<<<
Content-Length: 4852

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":9},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 180//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"17","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"17","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":114,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":10},"contentChanges":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"rangeLength":0,"text":"~"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":114}}Content-Length: 295

{"jsonrpc":"2.0","id":115,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":114,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 3789

{"jsonrpc":"2.0","id":115,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":116,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":38,"character":26},"end":{"line":38,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":116,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":117,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":11},"contentChanges":[{"range":{"start":{"line":38,"character":26},"end":{"line":38,"character":26}},"rangeLength":0,"text":"~"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":117}}Content-Length: 295

{"jsonrpc":"2.0","id":118,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":117,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":118,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":119,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":119,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":120,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":12},"contentChanges":[{"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":27}},"rangeLength":0,"text":"~"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":120}}Content-Length: 295

{"jsonrpc":"2.0","id":121,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":120,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"18","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3789

{"jsonrpc":"2.0","id":121,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"18","result":null}Content-Length: 398

{"jsonrpc":"2.0","id":122,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":38,"character":28},"end":{"line":38,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 38

{"jsonrpc":"2.0","id":122,"result":[]}
<<<
Content-Length: 4856

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":12},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 180//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward~~~\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 324

{"jsonrpc":"2.0","id":123,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":41,"character":25}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":123,"result":null}Content-Length: 119

{"jsonrpc":"2.0","id":"19","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"19","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"20","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"20","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"21","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"21","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":124,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":39,"character":1},"end":{"line":39,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":124,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":125,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":38,"character":31},"end":{"line":38,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":125,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":126,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":38,"character":28}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":126,"result":null}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":127,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":38,"character":26},"end":{"line":38,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":127,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":128,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":128,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":129,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":38,"character":25}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":129,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":130,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":13},"contentChanges":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":28}},"rangeLength":3,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":130}}Content-Length: 295

{"jsonrpc":"2.0","id":131,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":130,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":131,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":132,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":132,"result":[]}
<<<
Content-Length: 4853

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":13},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 180//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"22","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"22","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":133,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":35,"character":26},"end":{"line":35,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":133,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":134,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":34,"character":20}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":134,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":135,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":34,"character":20},"end":{"line":34,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":135,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":136,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":136,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":137,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":25},"end":{"line":33,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":137,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":138,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":138,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":139,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":23}}}
>>>
Content-Length: 221

{"jsonrpc":"2.0","id":139,"result":{"contents":{"kind":"markdown","value":"### macro `carSpeed`  \n\n---\n```cpp\n#define carSpeed 180\n```"},"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":27}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":140,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":23}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":140,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":141,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":141,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":142,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":20}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":142,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":143,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":19}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":143,"result":null}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":144,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":19}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":144,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":145,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":19},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":145,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":146,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":146,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":147,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":17},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":147,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":148,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":17}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":148,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":149,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":14},"contentChanges":[{"range":{"start":{"line":20,"character":17},"end":{"line":20,"character":19}},"rangeLength":2,"text":"2"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":149}}Content-Length: 295

{"jsonrpc":"2.0","id":150,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":149,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"23","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3789

{"jsonrpc":"2.0","id":150,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"23","result":null}Content-Length: 398

{"jsonrpc":"2.0","id":151,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 38

{"jsonrpc":"2.0","id":151,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":152,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":17}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":152,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":153,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":15},"contentChanges":[{"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":18}},"rangeLength":0,"text":"0"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":153}}Content-Length: 295

{"jsonrpc":"2.0","id":154,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":153,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":154,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":155,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":19},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":155,"result":[]}
<<<
Content-Length: 4853

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":15},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 398

{"jsonrpc":"2.0","id":156,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":35,"character":26},"end":{"line":35,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":156,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"24","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"24","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"25","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"25","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"26","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"26","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":157,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":36,"character":25},"end":{"line":36,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":157,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":158,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":25}}}
>>>
Content-Length: 221

{"jsonrpc":"2.0","id":158,"result":{"contents":{"kind":"markdown","value":"### macro `carSpeed`  \n\n---\n```cpp\n#define carSpeed 200\n```"},"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":27}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":159,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":24}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":159,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":160,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":161,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":46}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":161,"result":null}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":162,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":36,"character":21}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":162,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":163,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":36,"character":20},"end":{"line":36,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":163,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":164,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":36,"character":24}}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":164,"result":{"contents":{"kind":"markdown","value":"### function `digitalWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t val`\n\n---\n```cpp\nvoid digitalWrite(uint8_t pin, uint8_t val)\n```"},"range":{"start":{"line":36,"character":24},"end":{"line":36,"character":25}}}}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":165,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":35,"character":22}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":165,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":39,"character":8},"end":{"line":39,"character":12}}}]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}Content-Length: 336

{"jsonrpc":"2.0","id":166,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":35,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":166,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":167,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":35,"character":20},"end":{"line":35,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":167,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"27","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"27","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":168,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":16},"contentChanges":[{"range":{"start":{"line":35,"character":20},"end":{"line":35,"character":24}},"rangeLength":4,"text":"LOW"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":168}}Content-Length: 295

{"jsonrpc":"2.0","id":169,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":168,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"28","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3789

{"jsonrpc":"2.0","id":169,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"28","result":null}Content-Length: 398

{"jsonrpc":"2.0","id":170,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":35,"character":23},"end":{"line":35,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 38

{"jsonrpc":"2.0","id":170,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":171,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":171,"result":{"contents":{"kind":"markdown","value":"### macro `HIGH`  \n\n---\n```cpp\n#define HIGH 0x1\n```"},"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":24}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":172,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":172,"result":[]}
<<<
Content-Length: 4852

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":16},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 398

{"jsonrpc":"2.0","id":173,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":173,"result":[]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":174,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":174,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":39,"character":8},"end":{"line":39,"character":12}}}]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}Content-Length: 329

{"jsonrpc":"2.0","id":175,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":35,"character":23}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":175,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":40,"character":8},"end":{"line":40,"character":11}}}]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}Content-Length: 329

{"jsonrpc":"2.0","id":176,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":38,"character":24}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":176,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":177,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":38,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":177,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":178,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":36,"character":22}}}
>>>
Content-Length: 211

{"jsonrpc":"2.0","id":178,"result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"start":{"line":36,"character":20},"end":{"line":36,"character":23}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":179,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":36,"character":22}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":178}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":179,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"29","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"29","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":180,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":36,"character":20},"end":{"line":36,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":180,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":181,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 423

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":17},"contentChanges":[{"range":{"start":{"line":36,"character":20},"end":{"line":36,"character":23}},"rangeLength":3,"text":"HIGH"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":181}}Content-Length: 295

{"jsonrpc":"2.0","id":182,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":181,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":182,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":183,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":36,"character":24}}}Content-Length: 398

{"jsonrpc":"2.0","id":184,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":36,"character":24},"end":{"line":36,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 239

{"jsonrpc":"2.0","id":183,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":39,"character":8},"end":{"line":39,"character":12}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":184,"result":[]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}Content-Length: 398

{"jsonrpc":"2.0","id":185,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":36,"character":26},"end":{"line":36,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":185,"result":[]}
<<<
Content-Length: 4853

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":17},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"30","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"30","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"31","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"31","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"32","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"32","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":186,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":48}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":186,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":187,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":49}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":187,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":188,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":51}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":188,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":189,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":36,"character":22}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":189,"result":{"contents":{"kind":"markdown","value":"### macro `HIGH`  \n\n---\n```cpp\n#define HIGH 0x1\n```"},"range":{"start":{"line":36,"character":20},"end":{"line":36,"character":24}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":190,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":36,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":190,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":191,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":36,"character":22},"end":{"line":36,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":191,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":192,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":36,"character":20},"end":{"line":36,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":192,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":193,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":35,"character":23}}}
>>>
Content-Length: 211

{"jsonrpc":"2.0","id":193,"result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"start":{"line":35,"character":20},"end":{"line":35,"character":23}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":194,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":35,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":194,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":195,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":35,"character":20},"end":{"line":35,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":195,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":196,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":35,"character":25},"end":{"line":35,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":196,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":197,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":18},"contentChanges":[{"range":{"start":{"line":36,"character":20},"end":{"line":36,"character":24}},"rangeLength":4,"text":"LOW"}]}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":197,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"33","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"33","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":198,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":36,"character":20},"end":{"line":36,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":198,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":199,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 423

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":19},"contentChanges":[{"range":{"start":{"line":35,"character":20},"end":{"line":35,"character":23}},"rangeLength":3,"text":"HIGH"}]}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":199,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":200,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":35,"character":20},"end":{"line":35,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":200,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":201,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":33,"character":22}}}
>>>
Content-Length: 211

{"jsonrpc":"2.0","id":201,"result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":23}}}}
<<<
Content-Length: 4853

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":19},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"34","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"34","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":202,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":34,"character":20}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":202,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":203,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":34,"character":20},"end":{"line":34,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":203,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":204,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":204,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":205,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":205,"result":[]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":206,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":206,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":39,"character":8},"end":{"line":39,"character":12}}}]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}Content-Length: 324

{"jsonrpc":"2.0","id":207,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":207,"result":{"contents":{"kind":"markdown","value":"### macro `HIGH`  \n\n---\n```cpp\n#define HIGH 0x1\n```"},"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":24}}}}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":208,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":33,"character":23}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":208,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":40,"character":8},"end":{"line":40,"character":11}}}]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}Content-Length: 324

{"jsonrpc":"2.0","id":209,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":33,"character":22}}}
>>>
Content-Length: 211

{"jsonrpc":"2.0","id":209,"result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":23}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":210,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":33,"character":23}}}
>>>
Content-Length: 1885

{"jsonrpc":"2.0","id":210,"result":[{"range":{"start":{"line":32,"character":2},"end":{"line":32,"character":14}},"kind":1},{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":14}},"kind":1},{"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":14}},"kind":1},{"range":{"start":{"line":36,"character":2},"end":{"line":36,"character":14}},"kind":1},{"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":14}},"kind":1},{"range":{"start":{"line":46,"character":2},"end":{"line":46,"character":14}},"kind":1},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":14}},"kind":1},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":14}},"kind":1},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":14}},"kind":1},{"range":{"start":{"line":58,"character":2},"end":{"line":58,"character":14}},"kind":1},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":14}},"kind":1},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":14}},"kind":1},{"range":{"start":{"line":70,"character":2},"end":{"line":70,"character":14}},"kind":1},{"range":{"start":{"line":71,"character":2},"end":{"line":71,"character":14}},"kind":1},{"range":{"start":{"line":73,"character":2},"end":{"line":73,"character":14}},"kind":1},{"range":{"start":{"line":74,"character":2},"end":{"line":74,"character":14}},"kind":1},{"range":{"start":{"line":80,"character":2},"end":{"line":80,"character":14}},"kind":1},{"range":{"start":{"line":81,"character":2},"end":{"line":81,"character":14}},"kind":1},{"range":{"start":{"line":89,"character":4},"end":{"line":89,"character":16}},"kind":1},{"range":{"start":{"line":91,"character":4},"end":{"line":91,"character":16}},"kind":1},{"range":{"start":{"line":93,"character":4},"end":{"line":93,"character":16}},"kind":1}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":211,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":211,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"35","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"35","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":212,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 423

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":20},"contentChanges":[{"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":23}},"rangeLength":3,"text":"HIGH"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":212}}Content-Length: 295

{"jsonrpc":"2.0","id":213,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":212,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"36","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3789

{"jsonrpc":"2.0","id":213,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":214,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":33,"character":22}}}Content-Length: 41

{"jsonrpc":"2.0","id":"36","result":null}Content-Length: 398

{"jsonrpc":"2.0","id":215,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":24},"end":{"line":33,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":214,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":39,"character":8},"end":{"line":39,"character":12}}}]}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 38

{"jsonrpc":"2.0","id":215,"result":[]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":216,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":36,"character":22}}}
>>>
Content-Length: 211

{"jsonrpc":"2.0","id":216,"result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"start":{"line":36,"character":20},"end":{"line":36,"character":23}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":217,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":36,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":217,"result":[]}
<<<
Content-Length: 4854

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":20},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 329

{"jsonrpc":"2.0","id":218,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":36,"character":22}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":218,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":40,"character":8},"end":{"line":40,"character":11}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":219,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":36,"character":20},"end":{"line":36,"character":23}},"context":{"diagnostics":[]}}}Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":219,"result":[]}
<<<
UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"37","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"37","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":220,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":220,"result":{"contents":{"kind":"markdown","value":"### macro `HIGH`  \n\n---\n```cpp\n#define HIGH 0x1\n```"},"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":24}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":221,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":221,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":222,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":222,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":223,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":21},"contentChanges":[{"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":24}},"rangeLength":4,"text":"LOW"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":223}}Content-Length: 295

{"jsonrpc":"2.0","id":224,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":223,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":224,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":225,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}Content-Length: 398

{"jsonrpc":"2.0","id":226,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":23},"end":{"line":32,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":225,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":40,"character":8},"end":{"line":40,"character":11}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":226,"result":[]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}Content-Length: 398

{"jsonrpc":"2.0","id":227,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":26},"end":{"line":33,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":227,"result":[]}
<<<
Content-Length: 4853

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":21},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7  \r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 324

{"jsonrpc":"2.0","id":228,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":42,"character":35}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":228,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":229,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":42,"character":33}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":229,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":230,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":33}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":230,"result":null}Content-Length: 119

{"jsonrpc":"2.0","id":"38","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"38","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"39","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"39","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":231,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":33}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":231,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":232,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":32}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":232,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":233,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":22,"character":25}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":233,"result":null}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":234,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":15,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":234,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":235,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":15,"character":13},"end":{"line":15,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":235,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":236,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":16,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":236,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":237,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":237,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":238,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":14,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":238,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":239,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":239,"result":[]}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":240,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":13,"character":3}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":240,"result":null}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":241,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":12,"character":8}}}
>>>
Content-Length: 208

{"jsonrpc":"2.0","id":241,"result":{"contents":{"kind":"markdown","value":"### macro `ENA`  \n\n---\n```cpp\n#define ENA 5\n```"},"range":{"start":{"line":12,"character":8},"end":{"line":12,"character":11}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":242,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":12,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":242,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":243,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":12,"character":13},"end":{"line":12,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":243,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":244,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":13,"character":12}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":244,"result":null}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":245,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":14,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":245,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":246,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":246,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":247,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":22,"character":25}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":247,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":248,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":22,"character":25},"end":{"line":22,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":248,"result":[]}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":249,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":13,"character":9}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":249,"result":[]}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":250,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":250,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":251,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":14,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":251,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":252,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":252,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":253,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":33}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":253,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":254,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":33}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":254,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":255,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":33}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":255,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":256,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":33}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":256,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":257,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":33}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":257,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":258,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":33}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":258,"result":null}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":259,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":15,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":259,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":260,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":15,"character":13},"end":{"line":15,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":260,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":261,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":16,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":261,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":262,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":262,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":263,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":16,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":263,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":264,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":264,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":265,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":22},"contentChanges":[{"range":{"start":{"line":17,"character":14},"end":{"line":17,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":265}}Content-Length: 295

{"jsonrpc":"2.0","id":266,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":265,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":266,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 4852

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":22},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7 \r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 295

{"jsonrpc":"2.0","id":267,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":23},"contentChanges":[{"range":{"start":{"line":17,"character":13},"end":{"line":17,"character":14}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":267}}Content-Length: 295

{"jsonrpc":"2.0","id":268,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":267,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":268,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":269,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":17,"character":13},"end":{"line":17,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":269,"result":[]}
<<<
Content-Length: 4851

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":23},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 4\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"40","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"40","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":270,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":14,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":270,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":271,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":271,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":272,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":13,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":272,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":273,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":13,"character":13},"end":{"line":13,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":273,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":274,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":17,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":274,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":275,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":17,"character":13},"end":{"line":17,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":275,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":276,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":16,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":276,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":277,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":277,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":278,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":15,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":278,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":279,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":15,"character":13},"end":{"line":15,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":279,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":280,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":14,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":280,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":281,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":281,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":282,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":13,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":282,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":283,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":13,"character":13},"end":{"line":13,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":283,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":284,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":14,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":284,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":285,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":285,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":286,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":24},"contentChanges":[{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":286}}Content-Length: 295

{"jsonrpc":"2.0","id":287,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":286,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"41","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3789

{"jsonrpc":"2.0","id":287,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"41","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 4850

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":24},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 \r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 295

{"jsonrpc":"2.0","id":288,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":25},"contentChanges":[{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":12}},"rangeLength":0,"text":"3"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":288}}Content-Length: 295

{"jsonrpc":"2.0","id":289,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":288,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":289,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":290,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":290,"result":[]}
<<<
Content-Length: 4851

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":25},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 2\r\n#define IN3 3\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 336

{"jsonrpc":"2.0","id":291,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":15,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":291,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":292,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":15,"character":13},"end":{"line":15,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":292,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"42","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"42","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":293,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":26},"contentChanges":[{"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":293}}Content-Length: 295

{"jsonrpc":"2.0","id":294,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":293,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":294,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":295,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":27},"contentChanges":[{"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":12}},"rangeLength":0,"text":"4"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":295}}Content-Length: 295

{"jsonrpc":"2.0","id":296,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":295,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":296,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":297,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":15,"character":13},"end":{"line":15,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":297,"result":[]}
<<<
Content-Length: 4851

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":27},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 3\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 336

{"jsonrpc":"2.0","id":298,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":16,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":298,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":299,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":299,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":300,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":28},"contentChanges":[{"range":{"start":{"line":16,"character":12},"end":{"line":16,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":300}}Content-Length: 295

{"jsonrpc":"2.0","id":301,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"43","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}Content-Length: 3789

{"jsonrpc":"2.0","id":300,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":301,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"43","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"44","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"44","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":302,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":29},"contentChanges":[{"range":{"start":{"line":16,"character":12},"end":{"line":16,"character":12}},"rangeLength":0,"text":"2"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":302}}Content-Length: 295

{"jsonrpc":"2.0","id":303,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":302,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":303,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":304,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 38

{"jsonrpc":"2.0","id":304,"result":[]}
<<<
Content-Length: 4851

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":29},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 336

{"jsonrpc":"2.0","id":305,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":21,"character":25}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":305,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":306,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":21,"character":25},"end":{"line":21,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":306,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"45","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"45","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":307,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":49,"character":26}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":307,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":308,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":33,"character":22}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":308,"result":{"contents":{"kind":"markdown","value":"### macro `HIGH`  \n\n---\n```cpp\n#define HIGH 0x1\n```"},"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":24}}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":309,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":35,"character":23}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":309,"result":{"contents":{"kind":"markdown","value":"### macro `HIGH`  \n\n---\n```cpp\n#define HIGH 0x1\n```"},"range":{"start":{"line":35,"character":20},"end":{"line":35,"character":24}}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":310,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 211

{"jsonrpc":"2.0","id":310,"result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":23}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":311,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":311,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":312,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":312,"result":[]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":313,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":313,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":40,"character":8},"end":{"line":40,"character":11}}}]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}Content-Length: 324

{"jsonrpc":"2.0","id":314,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 211

{"jsonrpc":"2.0","id":314,"result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":23}}}}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":315,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":33,"character":22}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":315,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":39,"character":8},"end":{"line":39,"character":12}}}]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}Content-Length: 324

{"jsonrpc":"2.0","id":316,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":33,"character":22}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":316,"result":{"contents":{"kind":"markdown","value":"### macro `HIGH`  \n\n---\n```cpp\n#define HIGH 0x1\n```"},"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":24}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":317,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":33,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":317,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":318,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":318,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"46","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"46","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":319,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":30},"contentChanges":[{"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":24}},"rangeLength":4,"text":"LOW"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":319}}Content-Length: 295

{"jsonrpc":"2.0","id":320,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":319,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"47","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3789

{"jsonrpc":"2.0","id":320,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"47","result":null}Content-Length: 398

{"jsonrpc":"2.0","id":321,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":23},"end":{"line":33,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 38

{"jsonrpc":"2.0","id":321,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":322,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":33,"character":22}}}
>>>
Content-Length: 211

{"jsonrpc":"2.0","id":322,"result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":23}}}}
<<<
Content-Length: 4850

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":30},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 324

{"jsonrpc":"2.0","id":323,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":35,"character":22}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":323,"result":{"contents":{"kind":"markdown","value":"### macro `HIGH`  \n\n---\n```cpp\n#define HIGH 0x1\n```"},"range":{"start":{"line":35,"character":20},"end":{"line":35,"character":24}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":324,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":35,"character":23}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":324,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":325,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":35,"character":20},"end":{"line":35,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":325,"result":[]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":326,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":35,"character":23}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":326,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":39,"character":8},"end":{"line":39,"character":12}}}]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":327,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":21}}}
>>>
Content-Length: 211

{"jsonrpc":"2.0","id":327,"result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":23}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":328,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":328,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":329,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":329,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"48","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"48","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":330,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 423

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":31},"contentChanges":[{"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":23}},"rangeLength":3,"text":"HIGH"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":330}}Content-Length: 295

{"jsonrpc":"2.0","id":331,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":330,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":331,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":332,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":22}}}Content-Length: 398

{"jsonrpc":"2.0","id":333,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":24},"end":{"line":32,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":332,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":39,"character":8},"end":{"line":39,"character":12}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":333,"result":[]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}Content-Length: 398

{"jsonrpc":"2.0","id":334,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":334,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 4851

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":31},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"49","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"49","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 4851

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":31},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 4851

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":31},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"50","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"50","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"51","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"51","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":335,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":25},"end":{"line":33,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":335,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":336,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":336,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":337,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":31,"character":23}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":337,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":338,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":31,"character":23},"end":{"line":31,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":338,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":339,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":34,"character":20}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":339,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":340,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":34,"character":20},"end":{"line":34,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":340,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":341,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":14,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":341,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":342,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":342,"result":[]}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":343,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":9,"character":26}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":343,"result":[]}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":344,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":344,"result":[]}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":345,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":8,"character":26}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":345,"result":[]}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":346,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":8,"character":26},"end":{"line":8,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":346,"result":[]}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":347,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":9,"character":26}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":347,"result":[]}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":348,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":348,"result":[]}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":349,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":8,"character":26}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":349,"result":[]}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":350,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":8,"character":26},"end":{"line":8,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":350,"result":[]}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"52","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"52","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"53","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"53","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":351,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":15,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":351,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":352,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":15,"character":13},"end":{"line":15,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":352,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":353,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":16,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":353,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":354,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":354,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":355,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":17,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":355,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":356,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":17,"character":13},"end":{"line":17,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":356,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":357,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":16,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":357,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":358,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":358,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":359,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":17,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":359,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":360,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":17,"character":13},"end":{"line":17,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":360,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":361,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":15,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":361,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":362,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":15,"character":13},"end":{"line":15,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":362,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":363,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":34,"character":20}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":363,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":364,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":34,"character":20},"end":{"line":34,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":364,"result":[]}
<<<
Content-Length: 4851

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":31},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 4851

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":31},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"54","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"54","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"55","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"55","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"56","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"56","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":365,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":41}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":365,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":366,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":38}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":366,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":367,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":35}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":367,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":368,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":36}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":368,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":369,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":36}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":369,"result":null}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":370,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":370,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":371,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":25},"end":{"line":33,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":371,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":372,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":34,"character":20}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":372,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":373,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":34,"character":20},"end":{"line":34,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":373,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":374,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":35,"character":26},"end":{"line":35,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":374,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":375,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":36,"character":25},"end":{"line":36,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":375,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":376,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":51}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":376,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":377,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":43,"character":51},"end":{"line":43,"character":51}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":377,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":378,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":42,"character":51}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":378,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":379,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":42,"character":51},"end":{"line":42,"character":51}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":379,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":380,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":51}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":380,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":381,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":43,"character":51},"end":{"line":43,"character":51}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":381,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":382,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":42,"character":51}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":382,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":383,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":42,"character":51},"end":{"line":42,"character":51}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":383,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":384,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":51}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":384,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":385,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":43,"character":51},"end":{"line":43,"character":51}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":385,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":386,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":42,"character":51}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":386,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":387,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":42,"character":51},"end":{"line":42,"character":51}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":387,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":388,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":51}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":388,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":389,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":43,"character":51},"end":{"line":43,"character":51}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":389,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","id":390,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":38,"character":28},"end":{"line":39,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":390,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":391,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":36,"character":25},"end":{"line":36,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":391,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":392,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":25},"end":{"line":33,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":392,"result":[]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":393,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":35}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":393,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":394,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":35}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":394,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":395,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":35}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":395,"result":null}
<<<
Content-Length: 4851

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":31},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 329

{"jsonrpc":"2.0","id":396,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":32}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":396,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":397,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":32}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":397,"result":null}Content-Length: 119

{"jsonrpc":"2.0","id":"57","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"57","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"58","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"58","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":398,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":28,"character":28}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":398,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":399,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":28,"character":27}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":399,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":400,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":28}}}
>>>
Content-Length: 496

{"jsonrpc":"2.0","id":400,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\nRight now, PWM output only works on the pins with hardware support. These are defined in the appropriate pins\\_\\*.c file. For the rest of the pins, we default to digital output.  \n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":29,"character":28},"end":{"line":29,"character":29}}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":401,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":29}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":401,"result":null}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":402,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":31,"character":23}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":402,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":403,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":31,"character":23},"end":{"line":31,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":403,"result":[]}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-3D044E97123B9716468C17A446CF6283"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"59","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"59","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":404,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":42,"character":48}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":404,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":405,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":42,"character":48}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":405,"result":null}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"60","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"60","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":406,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":45,"character":18}}}
>>>
Content-Length: 209

{"jsonrpc":"2.0","id":406,"result":{"contents":{"kind":"markdown","value":"### macro `IN1`  \n\n---\n```cpp\n#define IN1 3\n```"},"range":{"start":{"line":45,"character":15},"end":{"line":45,"character":18}}}}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":407,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":25},"end":{"line":33,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":407,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":408,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":408,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":409,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":25},"end":{"line":33,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":409,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":410,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":410,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":411,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":25},"end":{"line":33,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":411,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":412,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":412,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":413,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":25},"end":{"line":33,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":413,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":414,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":414,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":415,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":25},"end":{"line":34,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":415,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":416,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":33,"character":25},"end":{"line":33,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":416,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":417,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":42}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":417,"result":null}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":418,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":38,"character":28},"end":{"line":38,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":418,"result":[]}
<<<
Content-Length: 4851

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":31},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"61","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"61","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"62","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"62","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":419,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":25}}}
>>>
Content-Length: 221

{"jsonrpc":"2.0","id":419,"result":{"contents":{"kind":"markdown","value":"### macro `carSpeed`  \n\n---\n```cpp\n#define carSpeed 200\n```"},"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":27}}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":420,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":42,"character":33}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":420,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":421,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":28}}}
>>>
Content-Length: 496

{"jsonrpc":"2.0","id":421,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\nRight now, PWM output only works on the pins with hardware support. These are defined in the appropriate pins\\_\\*.c file. For the rest of the pins, we default to digital output.  \n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":43,"character":28},"end":{"line":43,"character":29}}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":422,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":43,"character":27}}}
>>>
Content-Length: 221

{"jsonrpc":"2.0","id":422,"result":{"contents":{"kind":"markdown","value":"### macro `carSpeed`  \n\n---\n```cpp\n#define carSpeed 200\n```"},"range":{"start":{"line":43,"character":19},"end":{"line":43,"character":27}}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":423,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":46,"character":24}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":423,"result":{"contents":{"kind":"markdown","value":"### macro `HIGH`  \n\n---\n```cpp\n#define HIGH 0x1\n```"},"range":{"start":{"line":46,"character":20},"end":{"line":46,"character":24}}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":424,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":38,"character":25}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":424,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":425,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":36,"character":25}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":425,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":426,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":29}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":426,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":427,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":25,"character":14}}}
>>>
Content-Length: 243

{"jsonrpc":"2.0","id":427,"result":{"contents":{"kind":"markdown","value":"### variable `SensorRight`  \n\n---\nType: `int`  \n\n---\n```cpp\nint SensorRight\n```"},"range":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":428,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":32,"character":24}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":428,"result":{"contents":{"kind":"markdown","value":"### macro `HIGH`  \n\n---\n```cpp\n#define HIGH 0x1\n```"},"range":{"start":{"line":32,"character":20},"end":{"line":32,"character":24}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":429,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":32}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":429,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":430,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":29,"character":32},"end":{"line":29,"character":32}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":430,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":431,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":23}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":431,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":432,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":432,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":433,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":32},"contentChanges":[{"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":27}},"rangeLength":8,"text":"1"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":433}}Content-Length: 295

{"jsonrpc":"2.0","id":434,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":433,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":434,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":434}}Content-Length: 295

{"jsonrpc":"2.0","id":435,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":33},"contentChanges":[{"range":{"start":{"line":29,"character":20},"end":{"line":29,"character":20}},"rangeLength":0,"text":"3"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":435}}Content-Length: 295

{"jsonrpc":"2.0","id":436,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":435,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":436,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":437,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":29,"character":21},"end":{"line":29,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":437,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":438,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":34},"contentChanges":[{"range":{"start":{"line":29,"character":21},"end":{"line":29,"character":21}},"rangeLength":0,"text":"0"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":438}}Content-Length: 295

{"jsonrpc":"2.0","id":439,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":438,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":439,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":440,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":440,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":441,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":22}}}
>>>
Content-Length: 221

{"jsonrpc":"2.0","id":441,"result":{"contents":{"kind":"markdown","value":"### macro `carSpeed`  \n\n---\n```cpp\n#define carSpeed 200\n```"},"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":27}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":442,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":23}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":442,"result":[]}
<<<
Content-Length: 4846

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":34},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, 130);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 398

{"jsonrpc":"2.0","id":443,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":443,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":444,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":35},"contentChanges":[{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":27}},"rangeLength":8,"text":"1"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":444}}Content-Length: 295

{"jsonrpc":"2.0","id":445,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":444,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":445,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":446,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":30,"character":20},"end":{"line":30,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":446,"result":[]}
<<<
Content-Length: 4839

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":35},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, 130);//Set the speed of ENA\r\n  analogWrite(ENB, 1);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}Content-Length: 295

{"jsonrpc":"2.0","id":447,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":36},"contentChanges":[{"range":{"start":{"line":30,"character":20},"end":{"line":30,"character":20}},"rangeLength":0,"text":"3"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":447}}Content-Length: 295

{"jsonrpc":"2.0","id":448,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":447,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":448,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":449,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":449,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":450,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":22}}}
>>>
Content-Length: 496

{"jsonrpc":"2.0","id":450,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\nRight now, PWM output only works on the pins with hardware support. These are defined in the appropriate pins\\_\\*.c file. For the rest of the pins, we default to digital output.  \n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":30,"character":22},"end":{"line":30,"character":23}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":451,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":37},"contentChanges":[{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":21}},"rangeLength":0,"text":"0"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":451}}Content-Length: 295

{"jsonrpc":"2.0","id":452,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":451,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":452,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":453,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":30,"character":22},"end":{"line":30,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":453,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":454,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":31,"character":23}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":454,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":455,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":31,"character":23},"end":{"line":31,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":455,"result":[]}
<<<
Content-Length: 4841

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":37},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, 130);//Set the speed of ENA\r\n  analogWrite(ENB, 130);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"63","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"63","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"64","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"64","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":456,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":34,"character":20}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":456,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":457,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":34,"character":20},"end":{"line":34,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":457,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":458,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":38},"contentChanges":[{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":22}},"rangeLength":3,"text":"carSpeed"}]}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":458,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":459,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":459,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":460,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":39},"contentChanges":[{"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":22}},"rangeLength":3,"text":"carSpeed"}]}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":460,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":461,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":461,"result":[]}
<<<
Content-Length: 4851

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":39},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    // else{\r\n    //     forward();\r\n    // }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"65","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"65","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":462,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":30,"character":30}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":462,"result":null}
<<<
Content-Length: 325

{"jsonrpc":"2.0","id":463,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":121,"character":45}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":463,"result":null}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":464,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":170,"character":0},"end":{"line":171,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":464,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":465,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":169,"character":0},"end":{"line":171,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":465,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":466,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 631

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":40},"contentChanges":[{"range":{"start":{"line":171,"character":4},"end":{"line":171,"character":7}},"rangeLength":3,"text":""},{"range":{"start":{"line":170,"character":4},"end":{"line":170,"character":7}},"rangeLength":3,"text":""},{"range":{"start":{"line":169,"character":4},"end":{"line":169,"character":7}},"rangeLength":3,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":466}}Content-Length: 295

{"jsonrpc":"2.0","id":467,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":466,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"66","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3789

{"jsonrpc":"2.0","id":467,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"66","result":null}Content-Length: 398

{"jsonrpc":"2.0","id":468,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":169,"character":0},"end":{"line":171,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 38

{"jsonrpc":"2.0","id":468,"result":[]}
<<<
Content-Length: 4842

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":40},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"67","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"67","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 4842

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":40},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"68","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"68","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"69","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"69","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":469,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":169,"character":9},"end":{"line":169,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":469,"result":[]}
<<<
Content-Length: 400

{"jsonrpc":"2.0","id":470,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":170,"character":18},"end":{"line":170,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":470,"result":[]}
<<<
Content-Length: 4842

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":40},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 200//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"70","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"70","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"71","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"71","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":471,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":19}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":471,"result":null}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":472,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":18}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":472,"result":null}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":473,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":19}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":473,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":474,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":474,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":475,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":17},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":475,"result":[]}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":476,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":21,"character":18}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":476,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":477,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":41},"contentChanges":[{"range":{"start":{"line":20,"character":17},"end":{"line":20,"character":19}},"rangeLength":2,"text":"1"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":477}}Content-Length: 295

{"jsonrpc":"2.0","id":478,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":477,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":478,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":479,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":479,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":480,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":42},"contentChanges":[{"range":{"start":{"line":20,"character":18},"end":{"line":20,"character":18}},"rangeLength":0,"text":"3"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":480}}Content-Length: 295

{"jsonrpc":"2.0","id":481,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":480,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":481,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":482,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":19},"end":{"line":20,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":482,"result":[]}
<<<
Content-Length: 4842

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":42},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"72","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"72","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 4842

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":42},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 160\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"73","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"73","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":483,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":44}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":483,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":484,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":44},"end":{"line":20,"character":44}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":484,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":485,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":43},"end":{"line":20,"character":44}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":"74","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 38

{"jsonrpc":"2.0","id":485,"result":[]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"74","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":486,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":43}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":486,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":487,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":43},"contentChanges":[{"range":{"start":{"line":20,"character":43},"end":{"line":20,"character":44}},"rangeLength":1,"text":"3"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":487}}Content-Length: 295

{"jsonrpc":"2.0","id":488,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"}}}
>>>
Content-Length: 3789

{"jsonrpc":"2.0","id":487,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}Content-Length: 3789

{"jsonrpc":"2.0","id":488,"result":[{"name":"myservo","detail":"Servo","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":6},"end":{"line":6,"character":13}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":13}},"selectionRange":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}}},{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":13}},"selectionRange":{"start":{"line":9,"character":4},"end":{"line":9,"character":8}}},{"name":"Sensor1","detail":"int","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":16}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"Sensor2","detail":"int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":16}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"SensorLeft","detail":"int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":14}}},{"name":"SensorRight","detail":"int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":15}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":17}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":39}},"selectionRange":{"start":{"line":26,"character":23},"end":{"line":26,"character":35}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":59}},"selectionRange":{"start":{"line":26,"character":41},"end":{"line":26,"character":55}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":64,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":66,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":66,"character":5},"end":{"line":66,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":85,"character":6},"end":{"line":85,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":116,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":116,"character":5},"end":{"line":116,"character":9}}}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":489,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":44},"end":{"line":20,"character":44}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":489,"result":[]}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":490,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":20,"character":45}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":490,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":491,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":20,"character":45},"end":{"line":20,"character":45}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":491,"result":[]}
<<<
Content-Length: 4842

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":43},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 130\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"75","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"75","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":492,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":40}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":492,"result":[]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":493,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":40}}}Content-Length: 398

{"jsonrpc":"2.0","id":494,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":29,"character":40},"end":{"line":29,"character":40}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":493,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":494,"result":[]}
<<<
Content-Length: 4842

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":43},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 130\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}Content-Length: 324

{"jsonrpc":"2.0","id":495,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":29,"character":41}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":495,"result":null}Content-Length: 119

{"jsonrpc":"2.0","id":"76","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"76","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"77","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"77","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":496,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":49,"character":14}}}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":496,"result":{"contents":{"kind":"markdown","value":"### function `digitalWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t val`\n\n---\n```cpp\nvoid digitalWrite(uint8_t pin, uint8_t val)\n```"},"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":14}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":497,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"position":{"line":49,"character":14}}}
>>>
Content-Length: 1885

{"jsonrpc":"2.0","id":497,"result":[{"range":{"start":{"line":32,"character":2},"end":{"line":32,"character":14}},"kind":1},{"range":{"start":{"line":33,"character":2},"end":{"line":33,"character":14}},"kind":1},{"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":14}},"kind":1},{"range":{"start":{"line":36,"character":2},"end":{"line":36,"character":14}},"kind":1},{"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":14}},"kind":1},{"range":{"start":{"line":46,"character":2},"end":{"line":46,"character":14}},"kind":1},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":14}},"kind":1},{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":14}},"kind":1},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":14}},"kind":1},{"range":{"start":{"line":58,"character":2},"end":{"line":58,"character":14}},"kind":1},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":14}},"kind":1},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":14}},"kind":1},{"range":{"start":{"line":70,"character":2},"end":{"line":70,"character":14}},"kind":1},{"range":{"start":{"line":71,"character":2},"end":{"line":71,"character":14}},"kind":1},{"range":{"start":{"line":73,"character":2},"end":{"line":73,"character":14}},"kind":1},{"range":{"start":{"line":74,"character":2},"end":{"line":74,"character":14}},"kind":1},{"range":{"start":{"line":80,"character":2},"end":{"line":80,"character":14}},"kind":1},{"range":{"start":{"line":81,"character":2},"end":{"line":81,"character":14}},"kind":1},{"range":{"start":{"line":89,"character":4},"end":{"line":89,"character":16}},"kind":1},{"range":{"start":{"line":91,"character":4},"end":{"line":91,"character":16}},"kind":1},{"range":{"start":{"line":93,"character":4},"end":{"line":93,"character":16}},"kind":1}]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":498,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":49,"character":14},"end":{"line":49,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":498,"result":[]}
<<<
Content-Length: 398

{"jsonrpc":"2.0","id":499,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":45,"character":25},"end":{"line":45,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":499,"result":[]}
<<<
Content-Length: 396

{"jsonrpc":"2.0","id":500,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino"},"range":{"start":{"line":39,"character":1},"end":{"line":39,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":500,"result":[]}
<<<
Content-Length: 4842

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0043%EF%BC%89Four-way%20tracking%20and%20obstacle%20avoidance%20following%20car%20kit%20v2.0%20tutorial/ZYC0043/4_Arduino_Code/HC-SR04/HC-SR04.ino","version":43},"text":"/*************************************\r\n *     TIME:2021.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <Servo.h>  //servo library\r\nServo myservo;      // create servo object to control servo\r\n\r\nint Echo = 13;//Pin to D13\r\nint Trig = 12;//Pin to D12\r\n\r\n\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n\r\n\r\n#define carSpeed 130//Set the carSpeed to 130\r\nint Sensor1 = A2;//pin A2\r\nint Sensor2 = A5;//pin A5\r\n\r\nint SensorLeft;\r\nint SensorRight;\r\nint rightDistance = 0, leftDistance = 0, middleDistance = 0;\r\n\r\nvoid forward(){//forward function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n    //The right forward\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n  //The left forward\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back() {//back function\r\n  analogWrite(ENA, carSpeed);//Set the speed of ENA\r\n  analogWrite(ENB, carSpeed);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n  Serial.println(\"Back\");\r\n}\r\n\r\nvoid left() {//left function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n   //The right forward\r\n  digitalWrite(IN1, LOW);\r\n  digitalWrite(IN2, HIGH);\r\n  //The left back\r\n  digitalWrite(IN3, HIGH);\r\n  digitalWrite(IN4, LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right() {//right function\r\n  analogWrite(ENA, 200);//Set the speed of ENA\r\n  analogWrite(ENB, 200);//Set the speed of ENB\r\n  //The rihgt back\r\n  digitalWrite(IN1, HIGH);\r\n  digitalWrite(IN2, LOW);\r\n   //The left forward\r\n  digitalWrite(IN3, LOW);\r\n  digitalWrite(IN4, HIGH);\r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    float distance;\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n    //Serial.print(\"Distance = \");\r\n    //Serial.println(distance);//The serial output distance is converted into cm\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  myservo.write(100);  //setservo position according to scaled value\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n    SensorLeft  =  digitalRead(A2);//The sensor on the left\r\n    SensorRight =  digitalRead(A5);//The sensor on the Right\r\n    \r\n    middleDistance = GetDistance();//getDistance();\r\n    \r\n    if(middleDistance <= 18) \r\n    {\r\n        stop();\r\n        delay(500);\r\n        myservo.write(10);\r\n        delay(500);\r\n        rightDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n        myservo.write(180);\r\n        delay(500);\r\n        leftDistance = GetDistance();//getDistance();\r\n\r\n        delay(500);\r\n        myservo.write(100);\r\n        delay(500);\r\n     \r\n        if(rightDistance > leftDistance){\r\n            stop();\r\n            delay(300);\r\n            right(); \r\n            delay(300);\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            stop();\r\n            delay(300);\r\n            left(); \r\n            delay(300);\r\n        }\r\n        else{\r\n            forward();\r\n        }\r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n    if(!SensorLeft){\r\n      right(); \r\n      delay(300);\r\n    }\r\n    else if(!SensorRight){\r\n      left();\r\n      delay(300); \r\n    }\r\n    else{\r\n        forward();\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"78","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"78","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"79","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"79","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 60

{"jsonrpc":"2.0","id":501,"method":"shutdown","params":null}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":501,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3313

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":22992,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"g:\\11.ZhiYi\\5.Tutorial\\1.tutorial\\ZYC0041)four way tracking car  tutorial\\ZYC0041\\4_Arduino_Code\\3_Obstacle_avoidance","rootUri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance","name":"3_Obstacle_avoidance"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.1"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 2877

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","languageId":"cpp","version":80,"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  myservo.attach(A0,700,2400);  // attach servo on pin 3 to servo object\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else{\r\n      forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}}Content-Length: 367

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":98,"character":21},"end":{"line":98,"character":21}},"context":{"diagnostics":[]}}}Content-Length: 264

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-A9CAAD3847D5F9574E389B1BC813F91F"}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 264

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 365

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":82,"character":2},"end":{"line":82,"character":2}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 2511

{"jsonrpc":"2.0","id":2,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":94,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":96,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":96,"character":5},"end":{"line":96,"character":9}}}]}Content-Length: 2511

{"jsonrpc":"2.0","id":3,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":94,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":96,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":96,"character":5},"end":{"line":96,"character":9}}}]}Content-Length: 36

{"jsonrpc":"2.0","id":4,"result":[]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 293

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":74,"character":26}}}
>>>
Content-Length: 211

{"jsonrpc":"2.0","id":5,"result":{"contents":{"kind":"markdown","value":"### macro `HIGH`  \n\n---\n```cpp\n#define HIGH 0x1\n```"},"range":{"start":{"line":74,"character":23},"end":{"line":74,"character":27}}}}
<<<
Content-Length: 293

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":63,"character":26}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
<<<
Content-Length: 293

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":85,"character":23}}}
>>>
Content-Length: 311

{"jsonrpc":"2.0","id":7,"result":{"contents":{"kind":"markdown","value":"### function `pinMode`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t mode`\n\n---\n```cpp\nvoid pinMode(uint8_t pin, uint8_t mode)\n```"},"range":{"start":{"line":85,"character":23},"end":{"line":85,"character":24}}}}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":82,"character":72}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 366

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":82,"character":0},"end":{"line":82,"character":72}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":9,"result":[]}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 390

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":81},"contentChanges":[{"range":{"start":{"line":82,"character":0},"end":{"line":82,"character":72}},"rangeLength":72,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 265

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":10,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":94,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":96,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":96,"character":5},"end":{"line":96,"character":9}}}]}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 2512

{"jsonrpc":"2.0","id":11,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":94,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":96,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":96,"character":5},"end":{"line":96,"character":9}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 389

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":82},"contentChanges":[{"range":{"start":{"line":81,"character":14},"end":{"line":82,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}Content-Length: 265

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":12,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":94,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":96,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":96,"character":5},"end":{"line":96,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":13,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":81,"character":14},"end":{"line":81,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":14,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 2782

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":82},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else{\r\n      forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":108,"character":27}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":15,"result":null}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-A9CAAD3847D5F9574E389B1BC813F91F"}}Content-Length: 295

{"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":108,"character":27}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":16,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":108,"character":27}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":17,"result":null}Content-Length: 118

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 306

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":2}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":18,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":0},"end":{"line":105,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":19,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":20,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":21,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":106,"character":7}}}
>>>
Content-Length: 238

{"jsonrpc":"2.0","id":21,"result":{"contents":{"kind":"markdown","value":"### function `forward`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid forward()\n```"},"range":{"start":{"line":106,"character":6},"end":{"line":106,"character":13}}}}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":22,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":7}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":22,"result":null}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":6}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":23,"result":null}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":4}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":24,"result":null}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":5}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":25,"result":null}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":26,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":6}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":26,"result":null}
<<<
Content-Length: 306

{"jsonrpc":"2.0","id":27,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":6}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":27,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":28,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":29,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":1}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":29,"result":null}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":30,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":83},"contentChanges":[{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":6}},"rangeLength":4,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":30}}Content-Length: 265

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":84},"contentChanges":[{"range":{"start":{"line":105,"character":3},"end":{"line":105,"character":3}},"rangeLength":0,"text":"l"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}Content-Length: 265

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":85},"contentChanges":[{"range":{"start":{"line":105,"character":4},"end":{"line":105,"character":4}},"rangeLength":0,"text":"s"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":32}}Content-Length: 265

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":86},"contentChanges":[{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":5}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":33}}Content-Length: 265

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":30,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":31,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":32,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":33,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":34,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":6},"end":{"line":105,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":35,"result":[]}
<<<
Content-Length: 2782

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":86},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else{\r\n      forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 265

{"jsonrpc":"2.0","id":36,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":87},"contentChanges":[{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":6}},"rangeLength":4,"text":"if"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":36}}Content-Length: 265

{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":36,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":37,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 327

{"jsonrpc":"2.0","id":38,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":4},"context":{"triggerKind":1}}}
>>>
Content-Length: 2690

{"jsonrpc":"2.0","id":38,"result":{"isIncomplete":true,"items":[{"label":" if (condition) {statements}","kind":15,"sortText":"4029a1f8if","filterText":"if","insertText":"if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":4}},"newText":"if (${1:condition}) {\n${0:statements}\n}"}},{"label":" int_farptr_t","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\ingroup avr_inttypes signed integer type that can hold a pointer \u003e 64 KB"},"sortText":"4102140cint_farptr_t","filterText":"int_farptr_t","insertText":"int_farptr_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":4}},"newText":"int_farptr_t"}},{"label":" int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 16 bits."},"sortText":"41250290int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":4}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 32 bits."},"sortText":"41250290int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":4}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"41250290int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":4}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 8 bits."},"sortText":"41250290int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":4}},"newText":"int_fast8_t"}},{"label":" else if (condition) {statements}","kind":15,"sortText":"415f397aelse if","filterText":"else if","insertText":"else if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":4}},"newText":"else if (${1:condition}) {\n${0:statements}\n}"}}]}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":4},"end":{"line":105,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":39,"result":[]}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":88},"contentChanges":[{"range":{"start":{"line":105,"character":4},"end":{"line":105,"character":4}},"rangeLength":0,"text":"("}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}Content-Length: 265

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":40,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":41,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 373

{"jsonrpc":"2.0","id":42,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":5},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 92

{"jsonrpc":"2.0","id":42,"result":{"signatures":[],"activeSignature":0,"activeParameter":0}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":43,"result":[]}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":44,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":89},"contentChanges":[{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":5}},"rangeLength":0,"text":")"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":44}}Content-Length: 265

{"jsonrpc":"2.0","id":45,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":44,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":45,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":46,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":6},"end":{"line":105,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":46,"result":[]}
<<<
Content-Length: 2782

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":89},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(){\r\n      forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 368

{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":47,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"8","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"8","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":90},"contentChanges":[{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":5}},"rangeLength":0,"text":"c"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":48}}Content-Length: 265

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":48,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":49,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 327

{"jsonrpc":"2.0","id":50,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":6},"context":{"triggerKind":1}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":49}}Content-Length: 265

{"jsonrpc":"2.0","id":51,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":91},"contentChanges":[{"range":{"start":{"line":105,"character":6},"end":{"line":105,"character":6}},"rangeLength":0,"text":"m"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":51}}Content-Length: 265

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 18788

{"jsonrpc":"2.0","id":50,"result":{"isIncomplete":true,"items":[{"label":" cm","kind":6,"detail":"float","sortText":"403e7d17cm","filterText":"cm","insertText":"cm","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"cm"}},{"label":" CHANGE","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4088ba22CHANGE","filterText":"CHANGE","insertText":"CHANGE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CHANGE"}},{"label":" clockCyclesPerMicrosecond()","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4088ba22clockCyclesPerMicrosecond","filterText":"clockCyclesPerMicrosecond","insertText":"clockCyclesPerMicrosecond()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"clockCyclesPerMicrosecond()"}},{"label":" clockCyclesToMicroseconds(a)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4088ba22clockCyclesToMicroseconds","filterText":"clockCyclesToMicroseconds","insertText":"clockCyclesToMicroseconds(${1:a})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"clockCyclesToMicroseconds(${1:a})"}},{"label":" constrain(amt, low, high)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4088ba22constrain","filterText":"constrain","insertText":"constrain(${1:amt}, ${2:low}, ${3:high})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"constrain(${1:amt}, ${2:low}, ${3:high})"}},{"label":" carSpeed","kind":1,"sortText":"4093c359carSpeed","filterText":"carSpeed","insertText":"carSpeed","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"carSpeed"}},{"label":" char","kind":14,"sortText":"40a6e6d7char","filterText":"char","insertText":"char","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"char"}},{"label":" char16_t","kind":14,"sortText":"40a6e6d7char16_t","filterText":"char16_t","insertText":"char16_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"char16_t"}},{"label":" char32_t","kind":14,"sortText":"40a6e6d7char32_t","filterText":"char32_t","insertText":"char32_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"char32_t"}},{"label":" class","kind":14,"sortText":"40a6e6d7class","filterText":"class","insertText":"class","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"class"}},{"label":" const","kind":14,"sortText":"40a6e6d7const","filterText":"const","insertText":"const","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"const"}},{"label":" const_cast\u003ctype\u003e(expression)","kind":15,"sortText":"40a6e6d7const_cast","filterText":"const_cast","insertText":"const_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"const_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" constexpr","kind":14,"sortText":"40a6e6d7constexpr","filterText":"constexpr","insertText":"constexpr","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"constexpr"}},{"label":" cbrtf","kind":1,"sortText":"40af1a71cbrtf","filterText":"cbrtf","insertText":"cbrtf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"cbrtf"}},{"label":" ceilf","kind":1,"sortText":"40af1a71ceilf","filterText":"ceilf","insertText":"ceilf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"ceilf"}},{"label":" cli()","kind":1,"sortText":"40af1a71cli","filterText":"cli","insertText":"cli()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"cli()"}},{"label":" copysignf","kind":1,"sortText":"40af1a71copysignf","filterText":"copysignf","insertText":"copysignf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"copysignf"}},{"label":" cosf","kind":1,"sortText":"40af1a71cosf","filterText":"cosf","insertText":"cosf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"cosf"}},{"label":" coshf","kind":1,"sortText":"40af1a71coshf","filterText":"coshf","insertText":"coshf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"coshf"}},{"label":" CAL0","kind":1,"sortText":"40bfe344CAL0","filterText":"CAL0","insertText":"CAL0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CAL0"}},{"label":" CAL1","kind":1,"sortText":"40bfe344CAL1","filterText":"CAL1","insertText":"CAL1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CAL1"}},{"label":" CAL2","kind":1,"sortText":"40bfe344CAL2","filterText":"CAL2","insertText":"CAL2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CAL2"}},{"label":" CAL3","kind":1,"sortText":"40bfe344CAL3","filterText":"CAL3","insertText":"CAL3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CAL3"}},{"label":" CAL4","kind":1,"sortText":"40bfe344CAL4","filterText":"CAL4","insertText":"CAL4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CAL4"}},{"label":" CAL5","kind":1,"sortText":"40bfe344CAL5","filterText":"CAL5","insertText":"CAL5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CAL5"}},{"label":" CAL6","kind":1,"sortText":"40bfe344CAL6","filterText":"CAL6","insertText":"CAL6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CAL6"}},{"label":" CAL7","kind":1,"sortText":"40bfe344CAL7","filterText":"CAL7","insertText":"CAL7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CAL7"}},{"label":" CLKPCE","kind":1,"sortText":"40bfe344CLKPCE","filterText":"CLKPCE","insertText":"CLKPCE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CLKPCE"}},{"label":" CLKPR","kind":1,"sortText":"40bfe344CLKPR","filterText":"CLKPR","insertText":"CLKPR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CLKPR"}},{"label":" CLKPS0","kind":1,"sortText":"40bfe344CLKPS0","filterText":"CLKPS0","insertText":"CLKPS0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CLKPS0"}},{"label":" CLKPS1","kind":1,"sortText":"40bfe344CLKPS1","filterText":"CLKPS1","insertText":"CLKPS1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CLKPS1"}},{"label":" CLKPS2","kind":1,"sortText":"40bfe344CLKPS2","filterText":"CLKPS2","insertText":"CLKPS2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CLKPS2"}},{"label":" CLKPS3","kind":1,"sortText":"40bfe344CLKPS3","filterText":"CLKPS3","insertText":"CLKPS3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CLKPS3"}},{"label":" COM0A0","kind":1,"sortText":"40bfe344COM0A0","filterText":"COM0A0","insertText":"COM0A0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"COM0A0"}},{"label":" COM0A1","kind":1,"sortText":"40bfe344COM0A1","filterText":"COM0A1","insertText":"COM0A1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"COM0A1"}},{"label":" COM0B0","kind":1,"sortText":"40bfe344COM0B0","filterText":"COM0B0","insertText":"COM0B0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"COM0B0"}},{"label":" COM0B1","kind":1,"sortText":"40bfe344COM0B1","filterText":"COM0B1","insertText":"COM0B1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"COM0B1"}},{"label":" COM1A0","kind":1,"sortText":"40bfe344COM1A0","filterText":"COM1A0","insertText":"COM1A0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"COM1A0"}},{"label":" COM1A1","kind":1,"sortText":"40bfe344COM1A1","filterText":"COM1A1","insertText":"COM1A1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"COM1A1"}},{"label":" COM1B0","kind":1,"sortText":"40bfe344COM1B0","filterText":"COM1B0","insertText":"COM1B0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"COM1B0"}},{"label":" COM1B1","kind":1,"sortText":"40bfe344COM1B1","filterText":"COM1B1","insertText":"COM1B1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"COM1B1"}},{"label":" COM2A0","kind":1,"sortText":"40bfe344COM2A0","filterText":"COM2A0","insertText":"COM2A0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"COM2A0"}},{"label":" COM2A1","kind":1,"sortText":"40bfe344COM2A1","filterText":"COM2A1","insertText":"COM2A1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"COM2A1"}},{"label":" COM2B0","kind":1,"sortText":"40bfe344COM2B0","filterText":"COM2B0","insertText":"COM2B0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"COM2B0"}},{"label":" COM2B1","kind":1,"sortText":"40bfe344COM2B1","filterText":"COM2B1","insertText":"COM2B1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"COM2B1"}},{"label":" CPHA","kind":1,"sortText":"40bfe344CPHA","filterText":"CPHA","insertText":"CPHA","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CPHA"}},{"label":" CPOL","kind":1,"sortText":"40bfe344CPOL","filterText":"CPOL","insertText":"CPOL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CPOL"}},{"label":" CS00","kind":1,"sortText":"40bfe344CS00","filterText":"CS00","insertText":"CS00","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CS00"}},{"label":" CS01","kind":1,"sortText":"40bfe344CS01","filterText":"CS01","insertText":"CS01","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CS01"}},{"label":" CS02","kind":1,"sortText":"40bfe344CS02","filterText":"CS02","insertText":"CS02","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CS02"}},{"label":" CS10","kind":1,"sortText":"40bfe344CS10","filterText":"CS10","insertText":"CS10","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CS10"}},{"label":" CS11","kind":1,"sortText":"40bfe344CS11","filterText":"CS11","insertText":"CS11","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CS11"}},{"label":" CS12","kind":1,"sortText":"40bfe344CS12","filterText":"CS12","insertText":"CS12","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CS12"}},{"label":" CS20","kind":1,"sortText":"40bfe344CS20","filterText":"CS20","insertText":"CS20","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CS20"}},{"label":" CS21","kind":1,"sortText":"40bfe344CS21","filterText":"CS21","insertText":"CS21","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CS21"}},{"label":" CS22","kind":1,"sortText":"40bfe344CS22","filterText":"CS22","insertText":"CS22","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"CS22"}},{"label":" clearerror(s)","kind":1,"sortText":"40c3a40fclearerror","filterText":"clearerror","insertText":"clearerror(${1:s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"clearerror(${1:s})"}},{"label":" calloc(size_t nele, size_t size)","kind":3,"detail":"void *","documentation":{"kind":"markdown","value":"Allocate \\\\c nele elements of \\\\c size each. Identical to calling  \n\\\\c malloc() using \\\u003ctt\u003enele * size\\\u003c/tt\u003e as argument, except the allocated memory will be cleared to zero."},"sortText":"411adc9dcalloc","filterText":"calloc","insertText":"calloc(${1:size_t nele}, ${2:size_t size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"calloc(${1:size_t nele}, ${2:size_t size})"}},{"label":" cbrt(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The cbrt() function returns the cube root of \\\\a \\_\\_x."},"sortText":"411adc9dcbrt","filterText":"cbrt","insertText":"cbrt(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"cbrt(${1:double x})"}},{"label":" ceil(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The ceil() function returns the smallest integral value greater than or equal to \\\\a \\_\\_x, expressed as a floating-point number."},"sortText":"411adc9dceil","filterText":"ceil","insertText":"ceil(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"ceil(${1:double x})"}},{"label":" copysign(double x, double y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The copysign() function returns \\\\a \\_\\_x but with the sign of \\\\a \\_\\_y.  \nThey work even if \\\\a \\_\\_x or \\\\a \\_\\_y are NaN or zero."},"sortText":"411adc9dcopysign","filterText":"copysign","insertText":"copysign(${1:double x}, ${2:double y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"copysign(${1:double x}, ${2:double y})"}},{"label":" cos(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The cos() function returns the cosine of \\\\a \\_\\_x, measured in radians."},"sortText":"411adc9dcos","filterText":"cos","insertText":"cos(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"cos(${1:double x})"}},{"label":" cosh(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The cosh() function returns the hyperbolic cosine of \\\\a \\_\\_x."},"sortText":"411adc9dcosh","filterText":"cosh","insertText":"cosh(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"cosh(${1:double x})"}},{"label":" clearerr(FILE *stream)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the error and end-of-file flags of \\\\c stream."},"sortText":"413a45adclearerr","filterText":"clearerr","insertText":"clearerr(${1:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"clearerr(${1:FILE *stream})"}},{"label":"â€¢countPulseASM(volatile uint8_t *port, uint8_t bit, uint8_t stateMask, unsigned long maxloops)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"sortText":"4156fd3bcountPulseASM","filterText":"countPulseASM","insertText":"countPulseASM(${1:volatile uint8_t *port}, ${2:uint8_t bit}, ${3:uint8_t stateMask}, ${4:unsigned long maxloops})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"countPulseASM(${1:volatile uint8_t *port}, ${2:uint8_t bit}, ${3:uint8_t stateMask}, ${4:unsigned long maxloops})"}},{"label":" dynamic_cast\u003ctype\u003e(expression)","kind":15,"sortText":"80000000dynamic_cast","filterText":"dynamic_cast","insertText":"dynamic_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"dynamic_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" reinterpret_cast\u003ctype\u003e(expression)","kind":15,"sortText":"80000000reinterpret_cast","filterText":"reinterpret_cast","insertText":"reinterpret_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"reinterpret_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"80000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}}]}}Content-Length: 2512

{"jsonrpc":"2.0","id":51,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":52,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 327

{"jsonrpc":"2.0","id":53,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":7},"context":{"triggerKind":3}}}
>>>
Content-Length: 296

{"jsonrpc":"2.0","id":53,"result":{"isIncomplete":false,"items":[{"label":" cm","kind":6,"detail":"float","sortText":"3fbe7d17cm","filterText":"cm","insertText":"cm","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":7}},"newText":"cm"}}]}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":54,"result":[]}
<<<
Content-Length: 2784

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":91},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm){\r\n      forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 265

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":92},"contentChanges":[{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":7}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":55}}Content-Length: 265

{"jsonrpc":"2.0","id":56,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":55,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 113

{"jsonrpc":"2.0","id":"9","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 2512

{"jsonrpc":"2.0","id":56,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"9","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":57,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":8},"end":{"line":105,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":57,"result":[]}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":58,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":93},"contentChanges":[{"range":{"start":{"line":105,"character":8},"end":{"line":105,"character":8}},"rangeLength":0,"text":">"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":58}}Content-Length: 265

{"jsonrpc":"2.0","id":59,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 350

{"jsonrpc":"2.0","id":60,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":9},"context":{"triggerKind":2,"triggerCharacter":">"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":58,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":59,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 70

{"jsonrpc":"2.0","id":60,"result":{"isIncomplete":false,"items":null}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":9},"end":{"line":105,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":61,"result":[]}
<<<
Content-Length: 2786

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":93},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >){\r\n      forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 265

{"jsonrpc":"2.0","id":62,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":94},"contentChanges":[{"range":{"start":{"line":105,"character":9},"end":{"line":105,"character":9}},"rangeLength":0,"text":"1"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":62}}Content-Length: 265

{"jsonrpc":"2.0","id":63,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":62,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":63,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 370

{"jsonrpc":"2.0","id":64,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":10},"end":{"line":105,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":64,"result":[]}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":65,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":95},"contentChanges":[{"range":{"start":{"line":105,"character":10},"end":{"line":105,"character":10}},"rangeLength":0,"text":"8"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":65}}Content-Length: 265

{"jsonrpc":"2.0","id":66,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":65,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":66,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 370

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":11},"end":{"line":105,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":67,"result":[]}
<<<
Content-Length: 2788

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":95},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n      forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 307

{"jsonrpc":"2.0","id":68,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":106,"character":11}}}
>>>
Content-Length: 214

{"jsonrpc":"2.0","id":68,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":106,"character":6},"end":{"line":106,"character":13}},"kind":1}]}
<<<
Content-Length: 370

{"jsonrpc":"2.0","id":69,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":106,"character":11},"end":{"line":106,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":69,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":70,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":107,"character":3},"end":{"line":107,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":70,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"10","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"10","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"11","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"11","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":71,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 396

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":96},"contentChanges":[{"range":{"start":{"line":107,"character":3},"end":{"line":107,"character":3}},"rangeLength":0,"text":"\r\n  "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":71}}Content-Length: 265

{"jsonrpc":"2.0","id":72,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":71,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":72,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":73,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":97},"contentChanges":[{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":2}},"rangeLength":0,"text":"i"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":73}}Content-Length: 265

{"jsonrpc":"2.0","id":74,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":73,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":74,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 327

{"jsonrpc":"2.0","id":75,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":108,"character":3},"context":{"triggerKind":1}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":74}}Content-Length: 265

{"jsonrpc":"2.0","id":76,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":98},"contentChanges":[{"range":{"start":{"line":108,"character":3},"end":{"line":108,"character":3}},"rangeLength":0,"text":"f"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":76}}Content-Length: 265

{"jsonrpc":"2.0","id":77,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 26340

{"jsonrpc":"2.0","id":75,"result":{"isIncomplete":true,"items":[{"label":" IN1","kind":1,"sortText":"40426111IN1","filterText":"IN1","insertText":"IN1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"IN1"}},{"label":" IN2","kind":1,"sortText":"40426111IN2","filterText":"IN2","insertText":"IN2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"IN2"}},{"label":" IN3","kind":1,"sortText":"40426111IN3","filterText":"IN3","insertText":"IN3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"IN3"}},{"label":" IN4","kind":1,"sortText":"40426111IN4","filterText":"IN4","insertText":"IN4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"IN4"}},{"label":" INPUT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eINPUT","filterText":"INPUT","insertText":"INPUT","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INPUT"}},{"label":" INPUT_PULLUP","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eINPUT_PULLUP","filterText":"INPUT_PULLUP","insertText":"INPUT_PULLUP","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INPUT_PULLUP"}},{"label":" INTERLEAVE","kind":1,"sortText":"4070a89eINTERLEAVE","filterText":"INTERLEAVE","insertText":"INTERLEAVE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INTERLEAVE"}},{"label":" INTERNAL","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eINTERNAL","filterText":"INTERNAL","insertText":"INTERNAL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INTERNAL"}},{"label":" interrupts()","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89einterrupts","filterText":"interrupts","insertText":"interrupts()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"interrupts()"}},{"label":" INFINITY","kind":1,"sortText":"40821470INFINITY","filterText":"INFINITY","insertText":"INFINITY","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INFINITY"}},{"label":" ISR(vector, ...)","kind":1,"sortText":"40821470ISR","filterText":"ISR","insertText":"ISR(${1:vector, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ISR(${1:vector, ...})"}},{"label":" isfinitef","kind":1,"sortText":"40821470isfinitef","filterText":"isfinitef","insertText":"isfinitef","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"isfinitef"}},{"label":" isinff","kind":1,"sortText":"40821470isinff","filterText":"isinff","insertText":"isinff","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"isinff"}},{"label":" isnanf","kind":1,"sortText":"40821470isnanf","filterText":"isnanf","insertText":"isnanf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"isnanf"}},{"label":" ICES1","kind":1,"sortText":"409f9b1fICES1","filterText":"ICES1","insertText":"ICES1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICES1"}},{"label":" ICF1","kind":1,"sortText":"409f9b1fICF1","filterText":"ICF1","insertText":"ICF1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICF1"}},{"label":" ICIE1","kind":1,"sortText":"409f9b1fICIE1","filterText":"ICIE1","insertText":"ICIE1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICIE1"}},{"label":" ICNC1","kind":1,"sortText":"409f9b1fICNC1","filterText":"ICNC1","insertText":"ICNC1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICNC1"}},{"label":" ICR1","kind":1,"sortText":"409f9b1fICR1","filterText":"ICR1","insertText":"ICR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1"}},{"label":" ICR1H","kind":1,"sortText":"409f9b1fICR1H","filterText":"ICR1H","insertText":"ICR1H","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1H"}},{"label":" ICR1H0","kind":1,"sortText":"409f9b1fICR1H0","filterText":"ICR1H0","insertText":"ICR1H0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1H0"}},{"label":" ICR1H1","kind":1,"sortText":"409f9b1fICR1H1","filterText":"ICR1H1","insertText":"ICR1H1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1H1"}},{"label":" ICR1H2","kind":1,"sortText":"409f9b1fICR1H2","filterText":"ICR1H2","insertText":"ICR1H2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1H2"}},{"label":" ICR1H3","kind":1,"sortText":"409f9b1fICR1H3","filterText":"ICR1H3","insertText":"ICR1H3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1H3"}},{"label":" ICR1H4","kind":1,"sortText":"409f9b1fICR1H4","filterText":"ICR1H4","insertText":"ICR1H4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1H4"}},{"label":" ICR1H5","kind":1,"sortText":"409f9b1fICR1H5","filterText":"ICR1H5","insertText":"ICR1H5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1H5"}},{"label":" ICR1H6","kind":1,"sortText":"409f9b1fICR1H6","filterText":"ICR1H6","insertText":"ICR1H6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1H6"}},{"label":" ICR1H7","kind":1,"sortText":"409f9b1fICR1H7","filterText":"ICR1H7","insertText":"ICR1H7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1H7"}},{"label":" ICR1L","kind":1,"sortText":"409f9b1fICR1L","filterText":"ICR1L","insertText":"ICR1L","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1L"}},{"label":" ICR1L0","kind":1,"sortText":"409f9b1fICR1L0","filterText":"ICR1L0","insertText":"ICR1L0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1L0"}},{"label":" ICR1L1","kind":1,"sortText":"409f9b1fICR1L1","filterText":"ICR1L1","insertText":"ICR1L1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1L1"}},{"label":" ICR1L2","kind":1,"sortText":"409f9b1fICR1L2","filterText":"ICR1L2","insertText":"ICR1L2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1L2"}},{"label":" ICR1L3","kind":1,"sortText":"409f9b1fICR1L3","filterText":"ICR1L3","insertText":"ICR1L3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1L3"}},{"label":" ICR1L4","kind":1,"sortText":"409f9b1fICR1L4","filterText":"ICR1L4","insertText":"ICR1L4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1L4"}},{"label":" ICR1L5","kind":1,"sortText":"409f9b1fICR1L5","filterText":"ICR1L5","insertText":"ICR1L5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1L5"}},{"label":" ICR1L6","kind":1,"sortText":"409f9b1fICR1L6","filterText":"ICR1L6","insertText":"ICR1L6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1L6"}},{"label":" ICR1L7","kind":1,"sortText":"409f9b1fICR1L7","filterText":"ICR1L7","insertText":"ICR1L7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ICR1L7"}},{"label":" INT0","kind":1,"sortText":"409f9b1fINT0","filterText":"INT0","insertText":"INT0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT0"}},{"label":" INT0_vect","kind":1,"sortText":"409f9b1fINT0_vect","filterText":"INT0_vect","insertText":"INT0_vect","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT0_vect"}},{"label":" INT0_vect_num","kind":1,"sortText":"409f9b1fINT0_vect_num","filterText":"INT0_vect_num","insertText":"INT0_vect_num","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT0_vect_num"}},{"label":" INT1","kind":1,"sortText":"409f9b1fINT1","filterText":"INT1","insertText":"INT1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT1"}},{"label":" INT1_vect","kind":1,"sortText":"409f9b1fINT1_vect","filterText":"INT1_vect","insertText":"INT1_vect","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT1_vect"}},{"label":" INT1_vect_num","kind":1,"sortText":"409f9b1fINT1_vect_num","filterText":"INT1_vect_num","insertText":"INT1_vect_num","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT1_vect_num"}},{"label":" INTF0","kind":1,"sortText":"409f9b1fINTF0","filterText":"INTF0","insertText":"INTF0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INTF0"}},{"label":" INTF1","kind":1,"sortText":"409f9b1fINTF1","filterText":"INTF1","insertText":"INTF1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INTF1"}},{"label":" ISC00","kind":1,"sortText":"409f9b1fISC00","filterText":"ISC00","insertText":"ISC00","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ISC00"}},{"label":" ISC01","kind":1,"sortText":"409f9b1fISC01","filterText":"ISC01","insertText":"ISC01","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ISC01"}},{"label":" ISC10","kind":1,"sortText":"409f9b1fISC10","filterText":"ISC10","insertText":"ISC10","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ISC10"}},{"label":" ISC11","kind":1,"sortText":"409f9b1fISC11","filterText":"ISC11","insertText":"ISC11","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"ISC11"}},{"label":" IVCE","kind":1,"sortText":"409f9b1fIVCE","filterText":"IVCE","insertText":"IVCE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"IVCE"}},{"label":" IVSEL","kind":1,"sortText":"409f9b1fIVSEL","filterText":"IVSEL","insertText":"IVSEL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"IVSEL"}},{"label":" INT16_C(value)","kind":1,"sortText":"40a80791INT16_C","filterText":"INT16_C","insertText":"INT16_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT16_C(${1:value})"}},{"label":" INT16_MAX","kind":1,"sortText":"40a80791INT16_MAX","filterText":"INT16_MAX","insertText":"INT16_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT16_MAX"}},{"label":" INT16_MIN","kind":1,"sortText":"40a80791INT16_MIN","filterText":"INT16_MIN","insertText":"INT16_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT16_MIN"}},{"label":" INT32_C(value)","kind":1,"sortText":"40a80791INT32_C","filterText":"INT32_C","insertText":"INT32_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT32_C(${1:value})"}},{"label":" INT32_MAX","kind":1,"sortText":"40a80791INT32_MAX","filterText":"INT32_MAX","insertText":"INT32_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT32_MAX"}},{"label":" INT32_MIN","kind":1,"sortText":"40a80791INT32_MIN","filterText":"INT32_MIN","insertText":"INT32_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT32_MIN"}},{"label":" INT64_C(value)","kind":1,"sortText":"40a80791INT64_C","filterText":"INT64_C","insertText":"INT64_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT64_C(${1:value})"}},{"label":" INT64_MAX","kind":1,"sortText":"40a80791INT64_MAX","filterText":"INT64_MAX","insertText":"INT64_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT64_MAX"}},{"label":" INT64_MIN","kind":1,"sortText":"40a80791INT64_MIN","filterText":"INT64_MIN","insertText":"INT64_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT64_MIN"}},{"label":" INT8_C(value)","kind":1,"sortText":"40a80791INT8_C","filterText":"INT8_C","insertText":"INT8_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT8_C(${1:value})"}},{"label":" INT8_MAX","kind":1,"sortText":"40a80791INT8_MAX","filterText":"INT8_MAX","insertText":"INT8_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT8_MAX"}},{"label":" INT8_MIN","kind":1,"sortText":"40a80791INT8_MIN","filterText":"INT8_MIN","insertText":"INT8_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT8_MIN"}},{"label":" INTMAX_C(value)","kind":1,"sortText":"40a80791INTMAX_C","filterText":"INTMAX_C","insertText":"INTMAX_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INTMAX_C(${1:value})"}},{"label":" INTMAX_MAX","kind":1,"sortText":"40a80791INTMAX_MAX","filterText":"INTMAX_MAX","insertText":"INTMAX_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INTMAX_MAX"}},{"label":" INTMAX_MIN","kind":1,"sortText":"40a80791INTMAX_MIN","filterText":"INTMAX_MIN","insertText":"INTMAX_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INTMAX_MIN"}},{"label":" INTPTR_MAX","kind":1,"sortText":"40a80791INTPTR_MAX","filterText":"INTPTR_MAX","insertText":"INTPTR_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INTPTR_MAX"}},{"label":" INTPTR_MIN","kind":1,"sortText":"40a80791INTPTR_MIN","filterText":"INTPTR_MIN","insertText":"INTPTR_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INTPTR_MIN"}},{"label":" INT_FAST16_MAX","kind":1,"sortText":"40a80791INT_FAST16_MAX","filterText":"INT_FAST16_MAX","insertText":"INT_FAST16_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_FAST16_MAX"}},{"label":" INT_FAST16_MIN","kind":1,"sortText":"40a80791INT_FAST16_MIN","filterText":"INT_FAST16_MIN","insertText":"INT_FAST16_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_FAST16_MIN"}},{"label":" INT_FAST32_MAX","kind":1,"sortText":"40a80791INT_FAST32_MAX","filterText":"INT_FAST32_MAX","insertText":"INT_FAST32_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_FAST32_MAX"}},{"label":" INT_FAST32_MIN","kind":1,"sortText":"40a80791INT_FAST32_MIN","filterText":"INT_FAST32_MIN","insertText":"INT_FAST32_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_FAST32_MIN"}},{"label":" INT_FAST64_MAX","kind":1,"sortText":"40a80791INT_FAST64_MAX","filterText":"INT_FAST64_MAX","insertText":"INT_FAST64_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_FAST64_MAX"}},{"label":" INT_FAST64_MIN","kind":1,"sortText":"40a80791INT_FAST64_MIN","filterText":"INT_FAST64_MIN","insertText":"INT_FAST64_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_FAST64_MIN"}},{"label":" INT_FAST8_MAX","kind":1,"sortText":"40a80791INT_FAST8_MAX","filterText":"INT_FAST8_MAX","insertText":"INT_FAST8_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_FAST8_MAX"}},{"label":" INT_FAST8_MIN","kind":1,"sortText":"40a80791INT_FAST8_MIN","filterText":"INT_FAST8_MIN","insertText":"INT_FAST8_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_FAST8_MIN"}},{"label":" INT_LEAST16_MAX","kind":1,"sortText":"40a80791INT_LEAST16_MAX","filterText":"INT_LEAST16_MAX","insertText":"INT_LEAST16_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_LEAST16_MAX"}},{"label":" INT_LEAST16_MIN","kind":1,"sortText":"40a80791INT_LEAST16_MIN","filterText":"INT_LEAST16_MIN","insertText":"INT_LEAST16_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_LEAST16_MIN"}},{"label":" INT_LEAST32_MAX","kind":1,"sortText":"40a80791INT_LEAST32_MAX","filterText":"INT_LEAST32_MAX","insertText":"INT_LEAST32_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_LEAST32_MAX"}},{"label":" INT_LEAST32_MIN","kind":1,"sortText":"40a80791INT_LEAST32_MIN","filterText":"INT_LEAST32_MIN","insertText":"INT_LEAST32_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_LEAST32_MIN"}},{"label":" INT_LEAST64_MAX","kind":1,"sortText":"40a80791INT_LEAST64_MAX","filterText":"INT_LEAST64_MAX","insertText":"INT_LEAST64_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_LEAST64_MAX"}},{"label":" INT_LEAST64_MIN","kind":1,"sortText":"40a80791INT_LEAST64_MIN","filterText":"INT_LEAST64_MIN","insertText":"INT_LEAST64_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_LEAST64_MIN"}},{"label":" INT_LEAST8_MAX","kind":1,"sortText":"40a80791INT_LEAST8_MAX","filterText":"INT_LEAST8_MAX","insertText":"INT_LEAST8_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_LEAST8_MAX"}},{"label":" INT_LEAST8_MIN","kind":1,"sortText":"40a80791INT_LEAST8_MIN","filterText":"INT_LEAST8_MIN","insertText":"INT_LEAST8_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"INT_LEAST8_MIN"}},{"label":" if (condition) {statements}","kind":15,"sortText":"40a9a1f8if","filterText":"if","insertText":"if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"if (${1:condition}) {\n${0:statements}\n}"}},{"label":" int","kind":14,"sortText":"40a9a1f8int","filterText":"int","insertText":"int","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"int"}},{"label":"â€¢IPAddress","kind":7,"documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"sortText":"40b226caIPAddress","filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"IPAddress"}},{"label":" initVariant()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40bcd469initVariant","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"initVariant()"}},{"label":" init()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40e6127finit","filterText":"init","insertText":"init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"init()"}},{"label":" int16_t","kind":8,"sortText":"40ee01b5int16_t","filterText":"int16_t","insertText":"int16_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"int16_t"}},{"label":" int32_t","kind":8,"sortText":"40ee01b5int32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"int32_t"}},{"label":" int64_t","kind":8,"sortText":"40ee01b5int64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"int64_t"}},{"label":" int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 16 bits."},"sortText":"40ee01b5int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 32 bits."},"sortText":"40ee01b5int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"40ee01b5int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 8 bits."},"sortText":"40ee01b5int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"int_fast8_t"}},{"label":" int_least16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 16 bits."},"sortText":"40ee01b5int_least16_t","filterText":"int_least16_t","insertText":"int_least16_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"int_least16_t"}},{"label":" int_least32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 32 bits."},"sortText":"40ee01b5int_least32_t","filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"int_least32_t"}},{"label":" int_least64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"40ee01b5int_least64_t","filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"int_least64_t"}},{"label":" int_least8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 8 bits."},"sortText":"40ee01b5int_least8_t","filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":3}},"newText":"int_least8_t"}}]}}Content-Length: 2512

{"jsonrpc":"2.0","id":76,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":77,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 327

{"jsonrpc":"2.0","id":78,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":108,"character":4},"context":{"triggerKind":3}}}
>>>
Content-Length: 2691

{"jsonrpc":"2.0","id":78,"result":{"isIncomplete":false,"items":[{"label":" if (condition) {statements}","kind":15,"sortText":"4029a1f8if","filterText":"if","insertText":"if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":4}},"newText":"if (${1:condition}) {\n${0:statements}\n}"}},{"label":" int_farptr_t","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\ingroup avr_inttypes signed integer type that can hold a pointer \u003e 64 KB"},"sortText":"4102140cint_farptr_t","filterText":"int_farptr_t","insertText":"int_farptr_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":4}},"newText":"int_farptr_t"}},{"label":" int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 16 bits."},"sortText":"41250290int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":4}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 32 bits."},"sortText":"41250290int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":4}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"41250290int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":4}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 8 bits."},"sortText":"41250290int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":4}},"newText":"int_fast8_t"}},{"label":" else if (condition) {statements}","kind":15,"sortText":"415f397aelse if","filterText":"else if","insertText":"else if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":4}},"newText":"else if (${1:condition}) {\n${0:statements}\n}"}}]}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":79,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":108,"character":4},"end":{"line":108,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":79,"result":[]}
<<<
Content-Length: 2796

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":98},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n      forward();\r\n  }\r\n  if\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 265

{"jsonrpc":"2.0","id":80,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":99},"contentChanges":[{"range":{"start":{"line":108,"character":4},"end":{"line":108,"character":4}},"rangeLength":0,"text":"()"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":80}}Content-Length: 265

{"jsonrpc":"2.0","id":81,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":80,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":81,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 373

{"jsonrpc":"2.0","id":82,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":108,"character":5},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 92

{"jsonrpc":"2.0","id":82,"result":{"signatures":[],"activeSignature":0,"activeParameter":0}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":83,"result":[]}
<<<
Content-Length: 2798

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":99},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n      forward();\r\n  }\r\n  if()\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"12","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"12","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":84,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":100},"contentChanges":[{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":5}},"rangeLength":0,"text":"c"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":84}}Content-Length: 265

{"jsonrpc":"2.0","id":85,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":84,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":85,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 327

{"jsonrpc":"2.0","id":86,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":108,"character":6},"context":{"triggerKind":1}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":85}}Content-Length: 265

{"jsonrpc":"2.0","id":87,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":101},"contentChanges":[{"range":{"start":{"line":108,"character":6},"end":{"line":108,"character":6}},"rangeLength":0,"text":"m"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":87}}Content-Length: 265

{"jsonrpc":"2.0","id":88,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 18788

{"jsonrpc":"2.0","id":86,"result":{"isIncomplete":true,"items":[{"label":" cm","kind":6,"detail":"float","sortText":"403e7d17cm","filterText":"cm","insertText":"cm","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"cm"}},{"label":" CHANGE","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4088ba22CHANGE","filterText":"CHANGE","insertText":"CHANGE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CHANGE"}},{"label":" clockCyclesPerMicrosecond()","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4088ba22clockCyclesPerMicrosecond","filterText":"clockCyclesPerMicrosecond","insertText":"clockCyclesPerMicrosecond()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"clockCyclesPerMicrosecond()"}},{"label":" clockCyclesToMicroseconds(a)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4088ba22clockCyclesToMicroseconds","filterText":"clockCyclesToMicroseconds","insertText":"clockCyclesToMicroseconds(${1:a})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"clockCyclesToMicroseconds(${1:a})"}},{"label":" constrain(amt, low, high)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4088ba22constrain","filterText":"constrain","insertText":"constrain(${1:amt}, ${2:low}, ${3:high})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"constrain(${1:amt}, ${2:low}, ${3:high})"}},{"label":" carSpeed","kind":1,"sortText":"4093c359carSpeed","filterText":"carSpeed","insertText":"carSpeed","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"carSpeed"}},{"label":" char","kind":14,"sortText":"40a6e6d7char","filterText":"char","insertText":"char","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"char"}},{"label":" char16_t","kind":14,"sortText":"40a6e6d7char16_t","filterText":"char16_t","insertText":"char16_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"char16_t"}},{"label":" char32_t","kind":14,"sortText":"40a6e6d7char32_t","filterText":"char32_t","insertText":"char32_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"char32_t"}},{"label":" class","kind":14,"sortText":"40a6e6d7class","filterText":"class","insertText":"class","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"class"}},{"label":" const","kind":14,"sortText":"40a6e6d7const","filterText":"const","insertText":"const","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"const"}},{"label":" const_cast\u003ctype\u003e(expression)","kind":15,"sortText":"40a6e6d7const_cast","filterText":"const_cast","insertText":"const_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"const_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" constexpr","kind":14,"sortText":"40a6e6d7constexpr","filterText":"constexpr","insertText":"constexpr","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"constexpr"}},{"label":" cbrtf","kind":1,"sortText":"40af1a71cbrtf","filterText":"cbrtf","insertText":"cbrtf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"cbrtf"}},{"label":" ceilf","kind":1,"sortText":"40af1a71ceilf","filterText":"ceilf","insertText":"ceilf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"ceilf"}},{"label":" cli()","kind":1,"sortText":"40af1a71cli","filterText":"cli","insertText":"cli()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"cli()"}},{"label":" copysignf","kind":1,"sortText":"40af1a71copysignf","filterText":"copysignf","insertText":"copysignf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"copysignf"}},{"label":" cosf","kind":1,"sortText":"40af1a71cosf","filterText":"cosf","insertText":"cosf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"cosf"}},{"label":" coshf","kind":1,"sortText":"40af1a71coshf","filterText":"coshf","insertText":"coshf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"coshf"}},{"label":" CAL0","kind":1,"sortText":"40bfe344CAL0","filterText":"CAL0","insertText":"CAL0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CAL0"}},{"label":" CAL1","kind":1,"sortText":"40bfe344CAL1","filterText":"CAL1","insertText":"CAL1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CAL1"}},{"label":" CAL2","kind":1,"sortText":"40bfe344CAL2","filterText":"CAL2","insertText":"CAL2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CAL2"}},{"label":" CAL3","kind":1,"sortText":"40bfe344CAL3","filterText":"CAL3","insertText":"CAL3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CAL3"}},{"label":" CAL4","kind":1,"sortText":"40bfe344CAL4","filterText":"CAL4","insertText":"CAL4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CAL4"}},{"label":" CAL5","kind":1,"sortText":"40bfe344CAL5","filterText":"CAL5","insertText":"CAL5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CAL5"}},{"label":" CAL6","kind":1,"sortText":"40bfe344CAL6","filterText":"CAL6","insertText":"CAL6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CAL6"}},{"label":" CAL7","kind":1,"sortText":"40bfe344CAL7","filterText":"CAL7","insertText":"CAL7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CAL7"}},{"label":" CLKPCE","kind":1,"sortText":"40bfe344CLKPCE","filterText":"CLKPCE","insertText":"CLKPCE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CLKPCE"}},{"label":" CLKPR","kind":1,"sortText":"40bfe344CLKPR","filterText":"CLKPR","insertText":"CLKPR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CLKPR"}},{"label":" CLKPS0","kind":1,"sortText":"40bfe344CLKPS0","filterText":"CLKPS0","insertText":"CLKPS0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CLKPS0"}},{"label":" CLKPS1","kind":1,"sortText":"40bfe344CLKPS1","filterText":"CLKPS1","insertText":"CLKPS1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CLKPS1"}},{"label":" CLKPS2","kind":1,"sortText":"40bfe344CLKPS2","filterText":"CLKPS2","insertText":"CLKPS2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CLKPS2"}},{"label":" CLKPS3","kind":1,"sortText":"40bfe344CLKPS3","filterText":"CLKPS3","insertText":"CLKPS3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CLKPS3"}},{"label":" COM0A0","kind":1,"sortText":"40bfe344COM0A0","filterText":"COM0A0","insertText":"COM0A0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"COM0A0"}},{"label":" COM0A1","kind":1,"sortText":"40bfe344COM0A1","filterText":"COM0A1","insertText":"COM0A1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"COM0A1"}},{"label":" COM0B0","kind":1,"sortText":"40bfe344COM0B0","filterText":"COM0B0","insertText":"COM0B0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"COM0B0"}},{"label":" COM0B1","kind":1,"sortText":"40bfe344COM0B1","filterText":"COM0B1","insertText":"COM0B1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"COM0B1"}},{"label":" COM1A0","kind":1,"sortText":"40bfe344COM1A0","filterText":"COM1A0","insertText":"COM1A0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"COM1A0"}},{"label":" COM1A1","kind":1,"sortText":"40bfe344COM1A1","filterText":"COM1A1","insertText":"COM1A1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"COM1A1"}},{"label":" COM1B0","kind":1,"sortText":"40bfe344COM1B0","filterText":"COM1B0","insertText":"COM1B0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"COM1B0"}},{"label":" COM1B1","kind":1,"sortText":"40bfe344COM1B1","filterText":"COM1B1","insertText":"COM1B1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"COM1B1"}},{"label":" COM2A0","kind":1,"sortText":"40bfe344COM2A0","filterText":"COM2A0","insertText":"COM2A0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"COM2A0"}},{"label":" COM2A1","kind":1,"sortText":"40bfe344COM2A1","filterText":"COM2A1","insertText":"COM2A1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"COM2A1"}},{"label":" COM2B0","kind":1,"sortText":"40bfe344COM2B0","filterText":"COM2B0","insertText":"COM2B0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"COM2B0"}},{"label":" COM2B1","kind":1,"sortText":"40bfe344COM2B1","filterText":"COM2B1","insertText":"COM2B1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"COM2B1"}},{"label":" CPHA","kind":1,"sortText":"40bfe344CPHA","filterText":"CPHA","insertText":"CPHA","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CPHA"}},{"label":" CPOL","kind":1,"sortText":"40bfe344CPOL","filterText":"CPOL","insertText":"CPOL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CPOL"}},{"label":" CS00","kind":1,"sortText":"40bfe344CS00","filterText":"CS00","insertText":"CS00","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CS00"}},{"label":" CS01","kind":1,"sortText":"40bfe344CS01","filterText":"CS01","insertText":"CS01","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CS01"}},{"label":" CS02","kind":1,"sortText":"40bfe344CS02","filterText":"CS02","insertText":"CS02","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CS02"}},{"label":" CS10","kind":1,"sortText":"40bfe344CS10","filterText":"CS10","insertText":"CS10","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CS10"}},{"label":" CS11","kind":1,"sortText":"40bfe344CS11","filterText":"CS11","insertText":"CS11","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CS11"}},{"label":" CS12","kind":1,"sortText":"40bfe344CS12","filterText":"CS12","insertText":"CS12","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CS12"}},{"label":" CS20","kind":1,"sortText":"40bfe344CS20","filterText":"CS20","insertText":"CS20","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CS20"}},{"label":" CS21","kind":1,"sortText":"40bfe344CS21","filterText":"CS21","insertText":"CS21","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CS21"}},{"label":" CS22","kind":1,"sortText":"40bfe344CS22","filterText":"CS22","insertText":"CS22","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"CS22"}},{"label":" clearerror(s)","kind":1,"sortText":"40c3a40fclearerror","filterText":"clearerror","insertText":"clearerror(${1:s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"clearerror(${1:s})"}},{"label":" calloc(size_t nele, size_t size)","kind":3,"detail":"void *","documentation":{"kind":"markdown","value":"Allocate \\\\c nele elements of \\\\c size each. Identical to calling  \n\\\\c malloc() using \\\u003ctt\u003enele * size\\\u003c/tt\u003e as argument, except the allocated memory will be cleared to zero."},"sortText":"411adc9dcalloc","filterText":"calloc","insertText":"calloc(${1:size_t nele}, ${2:size_t size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"calloc(${1:size_t nele}, ${2:size_t size})"}},{"label":" cbrt(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The cbrt() function returns the cube root of \\\\a \\_\\_x."},"sortText":"411adc9dcbrt","filterText":"cbrt","insertText":"cbrt(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"cbrt(${1:double x})"}},{"label":" ceil(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The ceil() function returns the smallest integral value greater than or equal to \\\\a \\_\\_x, expressed as a floating-point number."},"sortText":"411adc9dceil","filterText":"ceil","insertText":"ceil(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"ceil(${1:double x})"}},{"label":" copysign(double x, double y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The copysign() function returns \\\\a \\_\\_x but with the sign of \\\\a \\_\\_y.  \nThey work even if \\\\a \\_\\_x or \\\\a \\_\\_y are NaN or zero."},"sortText":"411adc9dcopysign","filterText":"copysign","insertText":"copysign(${1:double x}, ${2:double y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"copysign(${1:double x}, ${2:double y})"}},{"label":" cos(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The cos() function returns the cosine of \\\\a \\_\\_x, measured in radians."},"sortText":"411adc9dcos","filterText":"cos","insertText":"cos(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"cos(${1:double x})"}},{"label":" cosh(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The cosh() function returns the hyperbolic cosine of \\\\a \\_\\_x."},"sortText":"411adc9dcosh","filterText":"cosh","insertText":"cosh(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"cosh(${1:double x})"}},{"label":" clearerr(FILE *stream)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the error and end-of-file flags of \\\\c stream."},"sortText":"413a45adclearerr","filterText":"clearerr","insertText":"clearerr(${1:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"clearerr(${1:FILE *stream})"}},{"label":"â€¢countPulseASM(volatile uint8_t *port, uint8_t bit, uint8_t stateMask, unsigned long maxloops)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"sortText":"4156fd3bcountPulseASM","filterText":"countPulseASM","insertText":"countPulseASM(${1:volatile uint8_t *port}, ${2:uint8_t bit}, ${3:uint8_t stateMask}, ${4:unsigned long maxloops})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"countPulseASM(${1:volatile uint8_t *port}, ${2:uint8_t bit}, ${3:uint8_t stateMask}, ${4:unsigned long maxloops})"}},{"label":" dynamic_cast\u003ctype\u003e(expression)","kind":15,"sortText":"80000000dynamic_cast","filterText":"dynamic_cast","insertText":"dynamic_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"dynamic_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" reinterpret_cast\u003ctype\u003e(expression)","kind":15,"sortText":"80000000reinterpret_cast","filterText":"reinterpret_cast","insertText":"reinterpret_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"reinterpret_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"80000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":6}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}}]}}Content-Length: 2512

{"jsonrpc":"2.0","id":87,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":88,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 327

{"jsonrpc":"2.0","id":89,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":108,"character":7},"context":{"triggerKind":3}}}
>>>
Content-Length: 296

{"jsonrpc":"2.0","id":89,"result":{"isIncomplete":false,"items":[{"label":" cm","kind":6,"detail":"float","sortText":"3fbe7d17cm","filterText":"cm","insertText":"cm","insertTextFormat":1,"textEdit":{"range":{"start":{"line":108,"character":5},"end":{"line":108,"character":7}},"newText":"cm"}}]}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":90,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":108,"character":7},"end":{"line":108,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":90,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":91,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":102},"contentChanges":[{"range":{"start":{"line":108,"character":7},"end":{"line":108,"character":7}},"rangeLength":0,"text":"<"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":91}}Content-Length: 265

{"jsonrpc":"2.0","id":92,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 350

{"jsonrpc":"2.0","id":93,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":108,"character":8},"context":{"triggerKind":2,"triggerCharacter":"<"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":91,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"13","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 2512

{"jsonrpc":"2.0","id":92,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 70

{"jsonrpc":"2.0","id":93,"result":{"isIncomplete":false,"items":null}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"13","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":94,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":108,"character":8},"end":{"line":108,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":94,"result":[]}
<<<
Content-Length: 2802

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":102},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n      forward();\r\n  }\r\n  if(cm<)\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 306

{"jsonrpc":"2.0","id":95,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":108,"character":7}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":95,"result":[]}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":96,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":103},"contentChanges":[{"range":{"start":{"line":108,"character":7},"end":{"line":108,"character":7}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":96}}Content-Length: 265

{"jsonrpc":"2.0","id":97,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":96,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":97,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":98,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":108,"character":8},"end":{"line":108,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":98,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":99,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":108,"character":9},"end":{"line":108,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":99,"result":[]}
<<<
Content-Length: 2803

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":103},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n      forward();\r\n  }\r\n  if(cm <)\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 266

{"jsonrpc":"2.0","id":100,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":104},"contentChanges":[{"range":{"start":{"line":108,"character":9},"end":{"line":108,"character":9}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":100}}Content-Length: 266

{"jsonrpc":"2.0","id":101,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":100,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":101,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":102,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":108,"character":10},"end":{"line":108,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":102,"result":[]}
<<<
Content-Length: 2804

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":104},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n      forward();\r\n  }\r\n  if(cm < )\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 266

{"jsonrpc":"2.0","id":103,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":105},"contentChanges":[{"range":{"start":{"line":108,"character":10},"end":{"line":108,"character":10}},"rangeLength":0,"text":"3"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":103}}Content-Length: 266

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":103,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":104,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":108,"character":11},"end":{"line":108,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":105,"result":[]}
<<<
Content-Length: 2805

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":105},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n      forward();\r\n  }\r\n  if(cm < 3)\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 371

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":108,"character":12},"end":{"line":108,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":106,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":107,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":106},"contentChanges":[{"range":{"start":{"line":108,"character":12},"end":{"line":108,"character":12}},"rangeLength":0,"text":"{}"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":107}}Content-Length: 266

{"jsonrpc":"2.0","id":108,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"14","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}Content-Length: 2513

{"jsonrpc":"2.0","id":107,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":108,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"14","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":109,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 407

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":107},"contentChanges":[{"range":{"start":{"line":108,"character":13},"end":{"line":108,"character":13}},"rangeLength":0,"text":"\r\n    \r\n  "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":109}}Content-Length: 266

{"jsonrpc":"2.0","id":110,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":109,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":110,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 2821

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":107},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n      forward();\r\n  }\r\n  if(cm < 3){\r\n    \r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 266

{"jsonrpc":"2.0","id":111,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":108},"contentChanges":[{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":4}},"rangeLength":0,"text":"s"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":111}}Content-Length: 266

{"jsonrpc":"2.0","id":112,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":111,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":112,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 328

{"jsonrpc":"2.0","id":113,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":5},"context":{"triggerKind":1}}}
>>>
Content-Length: 29438

{"jsonrpc":"2.0","id":113,"result":{"isIncomplete":true,"items":[{"label":" setup()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"403c35b3setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"setup()"}},{"label":" std","kind":9,"sortText":"4062ed6bstd","filterText":"std","insertText":"std","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"std"}},{"label":" SERIAL","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eSERIAL","filterText":"SERIAL","insertText":"SERIAL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL"}},{"label":" SINGLE","kind":1,"sortText":"4070a89eSINGLE","filterText":"SINGLE","insertText":"SINGLE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SINGLE"}},{"label":" sq(x)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89esq","filterText":"sq","insertText":"sq(${1:x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sq(${1:x})"}},{"label":"â€¢Serial","kind":6,"detail":"HardwareSerial","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40744933Serial","filterText":"Serial","insertText":"Serial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"Serial"}},{"label":"â€¢String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"407566c2String","filterText":"String","insertText":"String","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"String"}},{"label":" stop()","kind":3,"detail":"void","sortText":"407edfe4stop","filterText":"stop","insertText":"stop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"stop()"}},{"label":"â€¢SERIAL_5E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5E1","filterText":"SERIAL_5E1","insertText":"SERIAL_5E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_5E1"}},{"label":"â€¢SERIAL_5E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5E2","filterText":"SERIAL_5E2","insertText":"SERIAL_5E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_5E2"}},{"label":"â€¢SERIAL_5N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5N1","filterText":"SERIAL_5N1","insertText":"SERIAL_5N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_5N1"}},{"label":"â€¢SERIAL_5N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5N2","filterText":"SERIAL_5N2","insertText":"SERIAL_5N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_5N2"}},{"label":"â€¢SERIAL_5O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5O1","filterText":"SERIAL_5O1","insertText":"SERIAL_5O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_5O1"}},{"label":"â€¢SERIAL_5O2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5O2","filterText":"SERIAL_5O2","insertText":"SERIAL_5O2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_5O2"}},{"label":"â€¢SERIAL_6E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6E1","filterText":"SERIAL_6E1","insertText":"SERIAL_6E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_6E1"}},{"label":"â€¢SERIAL_6E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6E2","filterText":"SERIAL_6E2","insertText":"SERIAL_6E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_6E2"}},{"label":"â€¢SERIAL_6N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6N1","filterText":"SERIAL_6N1","insertText":"SERIAL_6N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_6N1"}},{"label":"â€¢SERIAL_6N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6N2","filterText":"SERIAL_6N2","insertText":"SERIAL_6N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_6N2"}},{"label":"â€¢SERIAL_6O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6O1","filterText":"SERIAL_6O1","insertText":"SERIAL_6O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_6O1"}},{"label":"â€¢SERIAL_6O2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6O2","filterText":"SERIAL_6O2","insertText":"SERIAL_6O2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_6O2"}},{"label":"â€¢SERIAL_7E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7E1","filterText":"SERIAL_7E1","insertText":"SERIAL_7E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_7E1"}},{"label":"â€¢SERIAL_7E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7E2","filterText":"SERIAL_7E2","insertText":"SERIAL_7E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_7E2"}},{"label":"â€¢SERIAL_7N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7N1","filterText":"SERIAL_7N1","insertText":"SERIAL_7N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_7N1"}},{"label":"â€¢SERIAL_7N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7N2","filterText":"SERIAL_7N2","insertText":"SERIAL_7N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_7N2"}},{"label":"â€¢SERIAL_7O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7O1","filterText":"SERIAL_7O1","insertText":"SERIAL_7O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_7O1"}},{"label":"â€¢SERIAL_7O2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7O2","filterText":"SERIAL_7O2","insertText":"SERIAL_7O2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_7O2"}},{"label":"â€¢SERIAL_8E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8E1","filterText":"SERIAL_8E1","insertText":"SERIAL_8E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_8E1"}},{"label":"â€¢SERIAL_8E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8E2","filterText":"SERIAL_8E2","insertText":"SERIAL_8E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_8E2"}},{"label":"â€¢SERIAL_8N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8N1","filterText":"SERIAL_8N1","insertText":"SERIAL_8N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_8N1"}},{"label":"â€¢SERIAL_8N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8N2","filterText":"SERIAL_8N2","insertText":"SERIAL_8N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_8N2"}},{"label":"â€¢SERIAL_8O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8O1","filterText":"SERIAL_8O1","insertText":"SERIAL_8O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_8O1"}},{"label":"â€¢SERIAL_8O2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8O2","filterText":"SERIAL_8O2","insertText":"SERIAL_8O2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_8O2"}},{"label":"â€¢SERIAL_PORT_HARDWARE","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40821470SERIAL_PORT_HARDWARE","filterText":"SERIAL_PORT_HARDWARE","insertText":"SERIAL_PORT_HARDWARE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_PORT_HARDWARE"}},{"label":"â€¢SERIAL_PORT_MONITOR","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40821470SERIAL_PORT_MONITOR","filterText":"SERIAL_PORT_MONITOR","insertText":"SERIAL_PORT_MONITOR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_PORT_MONITOR"}},{"label":"â€¢SERIAL_RX_BUFFER_SIZE","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_RX_BUFFER_SIZE","filterText":"SERIAL_RX_BUFFER_SIZE","insertText":"SERIAL_RX_BUFFER_SIZE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_RX_BUFFER_SIZE"}},{"label":"â€¢SERIAL_TX_BUFFER_SIZE","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_TX_BUFFER_SIZE","filterText":"SERIAL_TX_BUFFER_SIZE","insertText":"SERIAL_TX_BUFFER_SIZE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_TX_BUFFER_SIZE"}},{"label":" signbitf","kind":1,"sortText":"40821470signbitf","filterText":"signbitf","insertText":"signbitf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"signbitf"}},{"label":" sinf","kind":1,"sortText":"40821470sinf","filterText":"sinf","insertText":"sinf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sinf"}},{"label":" sinhf","kind":1,"sortText":"40821470sinhf","filterText":"sinhf","insertText":"sinhf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sinhf"}},{"label":" squaref","kind":1,"sortText":"40821470squaref","filterText":"squaref","insertText":"squaref","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"squaref"}},{"label":"â€¢StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"40886615StringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"StringSumHelper"}},{"label":" SE","kind":1,"sortText":"409f9b1fSE","filterText":"SE","insertText":"SE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SE"}},{"label":" SELFPRGEN","kind":1,"sortText":"409f9b1fSELFPRGEN","filterText":"SELFPRGEN","insertText":"SELFPRGEN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SELFPRGEN"}},{"label":" SIGNATURE_0","kind":1,"sortText":"409f9b1fSIGNATURE_0","filterText":"SIGNATURE_0","insertText":"SIGNATURE_0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SIGNATURE_0"}},{"label":" SIGNATURE_1","kind":1,"sortText":"409f9b1fSIGNATURE_1","filterText":"SIGNATURE_1","insertText":"SIGNATURE_1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SIGNATURE_1"}},{"label":" SIGNATURE_2","kind":1,"sortText":"409f9b1fSIGNATURE_2","filterText":"SIGNATURE_2","insertText":"SIGNATURE_2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SIGNATURE_2"}},{"label":" SIGRD","kind":1,"sortText":"409f9b1fSIGRD","filterText":"SIGRD","insertText":"SIGRD","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SIGRD"}},{"label":" SLEEP_MODE_ADC","kind":1,"sortText":"409f9b1fSLEEP_MODE_ADC","filterText":"SLEEP_MODE_ADC","insertText":"SLEEP_MODE_ADC","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SLEEP_MODE_ADC"}},{"label":" SLEEP_MODE_EXT_STANDBY","kind":1,"sortText":"409f9b1fSLEEP_MODE_EXT_STANDBY","filterText":"SLEEP_MODE_EXT_STANDBY","insertText":"SLEEP_MODE_EXT_STANDBY","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SLEEP_MODE_EXT_STANDBY"}},{"label":" SLEEP_MODE_IDLE","kind":1,"sortText":"409f9b1fSLEEP_MODE_IDLE","filterText":"SLEEP_MODE_IDLE","insertText":"SLEEP_MODE_IDLE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SLEEP_MODE_IDLE"}},{"label":" SLEEP_MODE_PWR_DOWN","kind":1,"sortText":"409f9b1fSLEEP_MODE_PWR_DOWN","filterText":"SLEEP_MODE_PWR_DOWN","insertText":"SLEEP_MODE_PWR_DOWN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SLEEP_MODE_PWR_DOWN"}},{"label":" SLEEP_MODE_PWR_SAVE","kind":1,"sortText":"409f9b1fSLEEP_MODE_PWR_SAVE","filterText":"SLEEP_MODE_PWR_SAVE","insertText":"SLEEP_MODE_PWR_SAVE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SLEEP_MODE_PWR_SAVE"}},{"label":" SLEEP_MODE_STANDBY","kind":1,"sortText":"409f9b1fSLEEP_MODE_STANDBY","filterText":"SLEEP_MODE_STANDBY","insertText":"SLEEP_MODE_STANDBY","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SLEEP_MODE_STANDBY"}},{"label":" SM0","kind":1,"sortText":"409f9b1fSM0","filterText":"SM0","insertText":"SM0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SM0"}},{"label":" SM1","kind":1,"sortText":"409f9b1fSM1","filterText":"SM1","insertText":"SM1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SM1"}},{"label":" SM2","kind":1,"sortText":"409f9b1fSM2","filterText":"SM2","insertText":"SM2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SM2"}},{"label":" SMCR","kind":1,"sortText":"409f9b1fSMCR","filterText":"SMCR","insertText":"SMCR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SMCR"}},{"label":" SPCR","kind":1,"sortText":"409f9b1fSPCR","filterText":"SPCR","insertText":"SPCR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPCR"}},{"label":" SPDR","kind":1,"sortText":"409f9b1fSPDR","filterText":"SPDR","insertText":"SPDR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR"}},{"label":" SPDR0","kind":1,"sortText":"409f9b1fSPDR0","filterText":"SPDR0","insertText":"SPDR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR0"}},{"label":" SPDR1","kind":1,"sortText":"409f9b1fSPDR1","filterText":"SPDR1","insertText":"SPDR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR1"}},{"label":" SPDR2","kind":1,"sortText":"409f9b1fSPDR2","filterText":"SPDR2","insertText":"SPDR2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR2"}},{"label":" SPDR3","kind":1,"sortText":"409f9b1fSPDR3","filterText":"SPDR3","insertText":"SPDR3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR3"}},{"label":" SPDR4","kind":1,"sortText":"409f9b1fSPDR4","filterText":"SPDR4","insertText":"SPDR4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR4"}},{"label":" SPDR5","kind":1,"sortText":"409f9b1fSPDR5","filterText":"SPDR5","insertText":"SPDR5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR5"}},{"label":" SPDR6","kind":1,"sortText":"409f9b1fSPDR6","filterText":"SPDR6","insertText":"SPDR6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR6"}},{"label":" SPDR7","kind":1,"sortText":"409f9b1fSPDR7","filterText":"SPDR7","insertText":"SPDR7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR7"}},{"label":" SPE","kind":1,"sortText":"409f9b1fSPE","filterText":"SPE","insertText":"SPE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPE"}},{"label":" SPI2X","kind":1,"sortText":"409f9b1fSPI2X","filterText":"SPI2X","insertText":"SPI2X","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPI2X"}},{"label":" SPIE","kind":1,"sortText":"409f9b1fSPIE","filterText":"SPIE","insertText":"SPIE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPIE"}},{"label":" SPIF","kind":1,"sortText":"409f9b1fSPIF","filterText":"SPIF","insertText":"SPIF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPIF"}},{"label":" SPI_STC_vect","kind":1,"sortText":"409f9b1fSPI_STC_vect","filterText":"SPI_STC_vect","insertText":"SPI_STC_vect","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPI_STC_vect"}},{"label":" SPI_STC_vect_num","kind":1,"sortText":"409f9b1fSPI_STC_vect_num","filterText":"SPI_STC_vect_num","insertText":"SPI_STC_vect_num","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPI_STC_vect_num"}},{"label":" SPMCSR","kind":1,"sortText":"409f9b1fSPMCSR","filterText":"SPMCSR","insertText":"SPMCSR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPMCSR"}},{"label":" SPMEN","kind":1,"sortText":"409f9b1fSPMEN","filterText":"SPMEN","insertText":"SPMEN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPMEN"}},{"label":" SPMIE","kind":1,"sortText":"409f9b1fSPMIE","filterText":"SPMIE","insertText":"SPMIE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPMIE"}},{"label":" SPM_PAGESIZE","kind":1,"sortText":"409f9b1fSPM_PAGESIZE","filterText":"SPM_PAGESIZE","insertText":"SPM_PAGESIZE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPM_PAGESIZE"}},{"label":" SPM_READY_vect","kind":1,"sortText":"409f9b1fSPM_READY_vect","filterText":"SPM_READY_vect","insertText":"SPM_READY_vect","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPM_READY_vect"}},{"label":" SPM_READY_vect_num","kind":1,"sortText":"409f9b1fSPM_READY_vect_num","filterText":"SPM_READY_vect_num","insertText":"SPM_READY_vect_num","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPM_READY_vect_num"}},{"label":" SPR0","kind":1,"sortText":"409f9b1fSPR0","filterText":"SPR0","insertText":"SPR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPR0"}},{"label":" SPR1","kind":1,"sortText":"409f9b1fSPR1","filterText":"SPR1","insertText":"SPR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPR1"}},{"label":" SPSR","kind":1,"sortText":"409f9b1fSPSR","filterText":"SPSR","insertText":"SPSR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPSR"}},{"label":" stderr","kind":1,"sortText":"40a80791stderr","filterText":"stderr","insertText":"stderr","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"stderr"}},{"label":" short","kind":14,"sortText":"40a9a1f8short","filterText":"short","insertText":"short","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"40a9a1f8signed","filterText":"signed","insertText":"signed","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"40a9a1f8sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"40a9a1f8sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static","kind":14,"sortText":"40a9a1f8static","filterText":"static","insertText":"static","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"40a9a1f8static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"40a9a1f8static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"40a9a1f8struct","filterText":"struct","insertText":"struct","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"struct"}},{"label":" switch (condition) {cases}","kind":15,"sortText":"40a9a1f8switch","filterText":"switch","insertText":"switch (${1:condition}) {\n${0:cases}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"switch (${1:condition}) {\n${0:cases}\n}"}},{"label":"â€¢Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"sortText":"40b11469Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"Stream"}},{"label":"â€¢std::size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstddef\u003e`  \nThis is normally declared in various headers that we do not have available, so just define it here. We could also use ::size_t below, but then anyone including \\\u003cnew\u003e can no longer assume std::size_t is available."},"sortText":"40cc4228size_t","filterText":"size_t","insertText":"std::size_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"std::size_t"}},{"label":" signbit(double x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The signbit() function returns a nonzero value if the value of \\\\a \\_\\_x has its sign bit set. This is not the same as \\`\\\\a \\_\\_x \u003c 0.0',  \nbecause IEEE 754 floating point allows zero to be signed. The comparison \\`-0.0 \u003c 0.0' is false, but \\`signbit (-0.0)' will return a nonzero value."},"sortText":"40fd1dd8signbit","filterText":"signbit","insertText":"signbit(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"signbit(${1:double x})"}},{"label":" sin(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sin() function returns the sine of \\\\a \\_\\_x, measured in radians."},"sortText":"40fd1dd8sin","filterText":"sin","insertText":"sin(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sin(${1:double x})"}},{"label":" sinh(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sinh() function returns the hyperbolic sine of \\\\a \\_\\_x."},"sortText":"40fd1dd8sinh","filterText":"sinh","insertText":"sinh(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sinh(${1:double x})"}},{"label":" sqrt(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sqrt() function returns the non-negative square root of \\\\a \\_\\_x."},"sortText":"40fd1dd8sqrt","filterText":"sqrt","insertText":"sqrt(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sqrt(${1:double x})"}},{"label":" sqrtf(float)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"An alias for sqrt()."},"sortText":"40fd1dd8sqrtf","filterText":"sqrtf","insertText":"sqrtf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sqrtf(${1:float})"}},{"label":" square(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The function square() returns \\\u003cem\u003e\\_\\_x * \\_\\_x\\\u003c/em\u003e.  \n\\\\note This function does not belong to the C standard definition."},"sortText":"40fd1dd8square","filterText":"square","insertText":"square(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"square(${1:double x})"}}]}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":114,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":109,"character":5},"end":{"line":109,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":114,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":115,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":109},"contentChanges":[{"range":{"start":{"line":109,"character":5},"end":{"line":109,"character":5}},"rangeLength":0,"text":"o"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":115}}Content-Length: 266

{"jsonrpc":"2.0","id":116,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 328

{"jsonrpc":"2.0","id":117,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":6},"context":{"triggerKind":3}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":115,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":116,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 631

{"jsonrpc":"2.0","id":117,"result":{"isIncomplete":false,"items":[{"label":" shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"413f2c6bshiftOut","filterText":"shiftOut","insertText":"shiftOut(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder}, ${4:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"shiftOut(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder}, ${4:uint8_t val})"}}]}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":109,"character":6},"end":{"line":109,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":118,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"15","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"15","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 2823

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":109},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n      forward();\r\n  }\r\n  if(cm < 3){\r\n    so\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 266

{"jsonrpc":"2.0","id":119,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":110},"contentChanges":[{"range":{"start":{"line":109,"character":5},"end":{"line":109,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":119}}Content-Length: 266

{"jsonrpc":"2.0","id":120,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 328

{"jsonrpc":"2.0","id":121,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":5},"context":{"triggerKind":1}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":119,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":120,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 29438

{"jsonrpc":"2.0","id":121,"result":{"isIncomplete":true,"items":[{"label":" setup()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"403c35b3setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"setup()"}},{"label":" std","kind":9,"sortText":"4062ed6bstd","filterText":"std","insertText":"std","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"std"}},{"label":" SERIAL","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eSERIAL","filterText":"SERIAL","insertText":"SERIAL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL"}},{"label":" SINGLE","kind":1,"sortText":"4070a89eSINGLE","filterText":"SINGLE","insertText":"SINGLE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SINGLE"}},{"label":" sq(x)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89esq","filterText":"sq","insertText":"sq(${1:x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sq(${1:x})"}},{"label":"â€¢Serial","kind":6,"detail":"HardwareSerial","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40744933Serial","filterText":"Serial","insertText":"Serial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"Serial"}},{"label":"â€¢String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"407566c2String","filterText":"String","insertText":"String","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"String"}},{"label":" stop()","kind":3,"detail":"void","sortText":"407edfe4stop","filterText":"stop","insertText":"stop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"stop()"}},{"label":"â€¢SERIAL_5E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5E1","filterText":"SERIAL_5E1","insertText":"SERIAL_5E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_5E1"}},{"label":"â€¢SERIAL_5E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5E2","filterText":"SERIAL_5E2","insertText":"SERIAL_5E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_5E2"}},{"label":"â€¢SERIAL_5N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5N1","filterText":"SERIAL_5N1","insertText":"SERIAL_5N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_5N1"}},{"label":"â€¢SERIAL_5N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5N2","filterText":"SERIAL_5N2","insertText":"SERIAL_5N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_5N2"}},{"label":"â€¢SERIAL_5O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5O1","filterText":"SERIAL_5O1","insertText":"SERIAL_5O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_5O1"}},{"label":"â€¢SERIAL_5O2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_5O2","filterText":"SERIAL_5O2","insertText":"SERIAL_5O2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_5O2"}},{"label":"â€¢SERIAL_6E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6E1","filterText":"SERIAL_6E1","insertText":"SERIAL_6E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_6E1"}},{"label":"â€¢SERIAL_6E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6E2","filterText":"SERIAL_6E2","insertText":"SERIAL_6E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_6E2"}},{"label":"â€¢SERIAL_6N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6N1","filterText":"SERIAL_6N1","insertText":"SERIAL_6N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_6N1"}},{"label":"â€¢SERIAL_6N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6N2","filterText":"SERIAL_6N2","insertText":"SERIAL_6N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_6N2"}},{"label":"â€¢SERIAL_6O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6O1","filterText":"SERIAL_6O1","insertText":"SERIAL_6O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_6O1"}},{"label":"â€¢SERIAL_6O2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_6O2","filterText":"SERIAL_6O2","insertText":"SERIAL_6O2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_6O2"}},{"label":"â€¢SERIAL_7E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7E1","filterText":"SERIAL_7E1","insertText":"SERIAL_7E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_7E1"}},{"label":"â€¢SERIAL_7E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7E2","filterText":"SERIAL_7E2","insertText":"SERIAL_7E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_7E2"}},{"label":"â€¢SERIAL_7N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7N1","filterText":"SERIAL_7N1","insertText":"SERIAL_7N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_7N1"}},{"label":"â€¢SERIAL_7N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7N2","filterText":"SERIAL_7N2","insertText":"SERIAL_7N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_7N2"}},{"label":"â€¢SERIAL_7O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7O1","filterText":"SERIAL_7O1","insertText":"SERIAL_7O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_7O1"}},{"label":"â€¢SERIAL_7O2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_7O2","filterText":"SERIAL_7O2","insertText":"SERIAL_7O2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_7O2"}},{"label":"â€¢SERIAL_8E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8E1","filterText":"SERIAL_8E1","insertText":"SERIAL_8E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_8E1"}},{"label":"â€¢SERIAL_8E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8E2","filterText":"SERIAL_8E2","insertText":"SERIAL_8E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_8E2"}},{"label":"â€¢SERIAL_8N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8N1","filterText":"SERIAL_8N1","insertText":"SERIAL_8N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_8N1"}},{"label":"â€¢SERIAL_8N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8N2","filterText":"SERIAL_8N2","insertText":"SERIAL_8N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_8N2"}},{"label":"â€¢SERIAL_8O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8O1","filterText":"SERIAL_8O1","insertText":"SERIAL_8O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_8O1"}},{"label":"â€¢SERIAL_8O2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_8O2","filterText":"SERIAL_8O2","insertText":"SERIAL_8O2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_8O2"}},{"label":"â€¢SERIAL_PORT_HARDWARE","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40821470SERIAL_PORT_HARDWARE","filterText":"SERIAL_PORT_HARDWARE","insertText":"SERIAL_PORT_HARDWARE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_PORT_HARDWARE"}},{"label":"â€¢SERIAL_PORT_MONITOR","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40821470SERIAL_PORT_MONITOR","filterText":"SERIAL_PORT_MONITOR","insertText":"SERIAL_PORT_MONITOR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_PORT_MONITOR"}},{"label":"â€¢SERIAL_RX_BUFFER_SIZE","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_RX_BUFFER_SIZE","filterText":"SERIAL_RX_BUFFER_SIZE","insertText":"SERIAL_RX_BUFFER_SIZE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_RX_BUFFER_SIZE"}},{"label":"â€¢SERIAL_TX_BUFFER_SIZE","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40821470SERIAL_TX_BUFFER_SIZE","filterText":"SERIAL_TX_BUFFER_SIZE","insertText":"SERIAL_TX_BUFFER_SIZE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SERIAL_TX_BUFFER_SIZE"}},{"label":" signbitf","kind":1,"sortText":"40821470signbitf","filterText":"signbitf","insertText":"signbitf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"signbitf"}},{"label":" sinf","kind":1,"sortText":"40821470sinf","filterText":"sinf","insertText":"sinf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sinf"}},{"label":" sinhf","kind":1,"sortText":"40821470sinhf","filterText":"sinhf","insertText":"sinhf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sinhf"}},{"label":" squaref","kind":1,"sortText":"40821470squaref","filterText":"squaref","insertText":"squaref","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"squaref"}},{"label":"â€¢StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"40886615StringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"StringSumHelper"}},{"label":" SE","kind":1,"sortText":"409f9b1fSE","filterText":"SE","insertText":"SE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SE"}},{"label":" SELFPRGEN","kind":1,"sortText":"409f9b1fSELFPRGEN","filterText":"SELFPRGEN","insertText":"SELFPRGEN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SELFPRGEN"}},{"label":" SIGNATURE_0","kind":1,"sortText":"409f9b1fSIGNATURE_0","filterText":"SIGNATURE_0","insertText":"SIGNATURE_0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SIGNATURE_0"}},{"label":" SIGNATURE_1","kind":1,"sortText":"409f9b1fSIGNATURE_1","filterText":"SIGNATURE_1","insertText":"SIGNATURE_1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SIGNATURE_1"}},{"label":" SIGNATURE_2","kind":1,"sortText":"409f9b1fSIGNATURE_2","filterText":"SIGNATURE_2","insertText":"SIGNATURE_2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SIGNATURE_2"}},{"label":" SIGRD","kind":1,"sortText":"409f9b1fSIGRD","filterText":"SIGRD","insertText":"SIGRD","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SIGRD"}},{"label":" SLEEP_MODE_ADC","kind":1,"sortText":"409f9b1fSLEEP_MODE_ADC","filterText":"SLEEP_MODE_ADC","insertText":"SLEEP_MODE_ADC","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SLEEP_MODE_ADC"}},{"label":" SLEEP_MODE_EXT_STANDBY","kind":1,"sortText":"409f9b1fSLEEP_MODE_EXT_STANDBY","filterText":"SLEEP_MODE_EXT_STANDBY","insertText":"SLEEP_MODE_EXT_STANDBY","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SLEEP_MODE_EXT_STANDBY"}},{"label":" SLEEP_MODE_IDLE","kind":1,"sortText":"409f9b1fSLEEP_MODE_IDLE","filterText":"SLEEP_MODE_IDLE","insertText":"SLEEP_MODE_IDLE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SLEEP_MODE_IDLE"}},{"label":" SLEEP_MODE_PWR_DOWN","kind":1,"sortText":"409f9b1fSLEEP_MODE_PWR_DOWN","filterText":"SLEEP_MODE_PWR_DOWN","insertText":"SLEEP_MODE_PWR_DOWN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SLEEP_MODE_PWR_DOWN"}},{"label":" SLEEP_MODE_PWR_SAVE","kind":1,"sortText":"409f9b1fSLEEP_MODE_PWR_SAVE","filterText":"SLEEP_MODE_PWR_SAVE","insertText":"SLEEP_MODE_PWR_SAVE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SLEEP_MODE_PWR_SAVE"}},{"label":" SLEEP_MODE_STANDBY","kind":1,"sortText":"409f9b1fSLEEP_MODE_STANDBY","filterText":"SLEEP_MODE_STANDBY","insertText":"SLEEP_MODE_STANDBY","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SLEEP_MODE_STANDBY"}},{"label":" SM0","kind":1,"sortText":"409f9b1fSM0","filterText":"SM0","insertText":"SM0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SM0"}},{"label":" SM1","kind":1,"sortText":"409f9b1fSM1","filterText":"SM1","insertText":"SM1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SM1"}},{"label":" SM2","kind":1,"sortText":"409f9b1fSM2","filterText":"SM2","insertText":"SM2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SM2"}},{"label":" SMCR","kind":1,"sortText":"409f9b1fSMCR","filterText":"SMCR","insertText":"SMCR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SMCR"}},{"label":" SPCR","kind":1,"sortText":"409f9b1fSPCR","filterText":"SPCR","insertText":"SPCR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPCR"}},{"label":" SPDR","kind":1,"sortText":"409f9b1fSPDR","filterText":"SPDR","insertText":"SPDR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR"}},{"label":" SPDR0","kind":1,"sortText":"409f9b1fSPDR0","filterText":"SPDR0","insertText":"SPDR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR0"}},{"label":" SPDR1","kind":1,"sortText":"409f9b1fSPDR1","filterText":"SPDR1","insertText":"SPDR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR1"}},{"label":" SPDR2","kind":1,"sortText":"409f9b1fSPDR2","filterText":"SPDR2","insertText":"SPDR2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR2"}},{"label":" SPDR3","kind":1,"sortText":"409f9b1fSPDR3","filterText":"SPDR3","insertText":"SPDR3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR3"}},{"label":" SPDR4","kind":1,"sortText":"409f9b1fSPDR4","filterText":"SPDR4","insertText":"SPDR4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR4"}},{"label":" SPDR5","kind":1,"sortText":"409f9b1fSPDR5","filterText":"SPDR5","insertText":"SPDR5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR5"}},{"label":" SPDR6","kind":1,"sortText":"409f9b1fSPDR6","filterText":"SPDR6","insertText":"SPDR6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR6"}},{"label":" SPDR7","kind":1,"sortText":"409f9b1fSPDR7","filterText":"SPDR7","insertText":"SPDR7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPDR7"}},{"label":" SPE","kind":1,"sortText":"409f9b1fSPE","filterText":"SPE","insertText":"SPE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPE"}},{"label":" SPI2X","kind":1,"sortText":"409f9b1fSPI2X","filterText":"SPI2X","insertText":"SPI2X","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPI2X"}},{"label":" SPIE","kind":1,"sortText":"409f9b1fSPIE","filterText":"SPIE","insertText":"SPIE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPIE"}},{"label":" SPIF","kind":1,"sortText":"409f9b1fSPIF","filterText":"SPIF","insertText":"SPIF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPIF"}},{"label":" SPI_STC_vect","kind":1,"sortText":"409f9b1fSPI_STC_vect","filterText":"SPI_STC_vect","insertText":"SPI_STC_vect","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPI_STC_vect"}},{"label":" SPI_STC_vect_num","kind":1,"sortText":"409f9b1fSPI_STC_vect_num","filterText":"SPI_STC_vect_num","insertText":"SPI_STC_vect_num","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPI_STC_vect_num"}},{"label":" SPMCSR","kind":1,"sortText":"409f9b1fSPMCSR","filterText":"SPMCSR","insertText":"SPMCSR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPMCSR"}},{"label":" SPMEN","kind":1,"sortText":"409f9b1fSPMEN","filterText":"SPMEN","insertText":"SPMEN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPMEN"}},{"label":" SPMIE","kind":1,"sortText":"409f9b1fSPMIE","filterText":"SPMIE","insertText":"SPMIE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPMIE"}},{"label":" SPM_PAGESIZE","kind":1,"sortText":"409f9b1fSPM_PAGESIZE","filterText":"SPM_PAGESIZE","insertText":"SPM_PAGESIZE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPM_PAGESIZE"}},{"label":" SPM_READY_vect","kind":1,"sortText":"409f9b1fSPM_READY_vect","filterText":"SPM_READY_vect","insertText":"SPM_READY_vect","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPM_READY_vect"}},{"label":" SPM_READY_vect_num","kind":1,"sortText":"409f9b1fSPM_READY_vect_num","filterText":"SPM_READY_vect_num","insertText":"SPM_READY_vect_num","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPM_READY_vect_num"}},{"label":" SPR0","kind":1,"sortText":"409f9b1fSPR0","filterText":"SPR0","insertText":"SPR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPR0"}},{"label":" SPR1","kind":1,"sortText":"409f9b1fSPR1","filterText":"SPR1","insertText":"SPR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPR1"}},{"label":" SPSR","kind":1,"sortText":"409f9b1fSPSR","filterText":"SPSR","insertText":"SPSR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"SPSR"}},{"label":" stderr","kind":1,"sortText":"40a80791stderr","filterText":"stderr","insertText":"stderr","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"stderr"}},{"label":" short","kind":14,"sortText":"40a9a1f8short","filterText":"short","insertText":"short","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"40a9a1f8signed","filterText":"signed","insertText":"signed","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"40a9a1f8sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"40a9a1f8sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static","kind":14,"sortText":"40a9a1f8static","filterText":"static","insertText":"static","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"40a9a1f8static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"40a9a1f8static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"40a9a1f8struct","filterText":"struct","insertText":"struct","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"struct"}},{"label":" switch (condition) {cases}","kind":15,"sortText":"40a9a1f8switch","filterText":"switch","insertText":"switch (${1:condition}) {\n${0:cases}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"switch (${1:condition}) {\n${0:cases}\n}"}},{"label":"â€¢Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"sortText":"40b11469Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"Stream"}},{"label":"â€¢std::size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstddef\u003e`  \nThis is normally declared in various headers that we do not have available, so just define it here. We could also use ::size_t below, but then anyone including \\\u003cnew\u003e can no longer assume std::size_t is available."},"sortText":"40cc4228size_t","filterText":"size_t","insertText":"std::size_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"std::size_t"}},{"label":" signbit(double x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The signbit() function returns a nonzero value if the value of \\\\a \\_\\_x has its sign bit set. This is not the same as \\`\\\\a \\_\\_x \u003c 0.0',  \nbecause IEEE 754 floating point allows zero to be signed. The comparison \\`-0.0 \u003c 0.0' is false, but \\`signbit (-0.0)' will return a nonzero value."},"sortText":"40fd1dd8signbit","filterText":"signbit","insertText":"signbit(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"signbit(${1:double x})"}},{"label":" sin(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sin() function returns the sine of \\\\a \\_\\_x, measured in radians."},"sortText":"40fd1dd8sin","filterText":"sin","insertText":"sin(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sin(${1:double x})"}},{"label":" sinh(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sinh() function returns the hyperbolic sine of \\\\a \\_\\_x."},"sortText":"40fd1dd8sinh","filterText":"sinh","insertText":"sinh(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sinh(${1:double x})"}},{"label":" sqrt(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sqrt() function returns the non-negative square root of \\\\a \\_\\_x."},"sortText":"40fd1dd8sqrt","filterText":"sqrt","insertText":"sqrt(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sqrt(${1:double x})"}},{"label":" sqrtf(float)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"An alias for sqrt()."},"sortText":"40fd1dd8sqrtf","filterText":"sqrtf","insertText":"sqrtf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"sqrtf(${1:float})"}},{"label":" square(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The function square() returns \\\u003cem\u003e\\_\\_x * \\_\\_x\\\u003c/em\u003e.  \n\\\\note This function does not belong to the C standard definition."},"sortText":"40fd1dd8square","filterText":"square","insertText":"square(${1:double x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":5}},"newText":"square(${1:double x})"}}]}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":122,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":109,"character":5},"end":{"line":109,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":122,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":123,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":111},"contentChanges":[{"range":{"start":{"line":109,"character":5},"end":{"line":109,"character":5}},"rangeLength":0,"text":"t"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":123}}Content-Length: 266

{"jsonrpc":"2.0","id":124,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 328

{"jsonrpc":"2.0","id":125,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":6},"context":{"triggerKind":3}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":123,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":124,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 71511

{"jsonrpc":"2.0","id":125,"result":{"isIncomplete":false,"items":[{"label":" std","kind":9,"sortText":"4062ed6bstd","filterText":"std","insertText":"std","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"std"}},{"label":"â€¢String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"407566c2String","filterText":"String","insertText":"String","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"String"}},{"label":" stop()","kind":3,"detail":"void","sortText":"407edfe4stop","filterText":"stop","insertText":"stop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"stop()"}},{"label":"â€¢StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"40886615StringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"StringSumHelper"}},{"label":" stderr","kind":1,"sortText":"40a80791stderr","filterText":"stderr","insertText":"stderr","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"stderr"}},{"label":" stdin","kind":1,"sortText":"40a80791stdin","filterText":"stdin","insertText":"stdin","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"stdin"}},{"label":" stdout","kind":1,"sortText":"40a80791stdout","filterText":"stdout","insertText":"stdout","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"stdout"}},{"label":" static","kind":14,"sortText":"40a9a1f8static","filterText":"static","insertText":"static","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"40a9a1f8static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"40a9a1f8static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"40a9a1f8struct","filterText":"struct","insertText":"struct","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"struct"}},{"label":"â€¢Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"sortText":"40b11469Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"Stream"}},{"label":" size_t","kind":8,"sortText":"40c4c0e2size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"size_t"}},{"label":" strlen(const char *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlen(const char \\*src)  \n\\\\brief Calculate the length of a string.  \nThe strlen() function calculates the length of the string src, not including the terminating '\\\\\\\\0' character.  \n\\\\returns The strlen() function returns the number of characters in src."},"sortText":"40e7b831strlen","filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strlen(${1:const char *})"}},{"label":" strstr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strstr(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared.  \n\\\\returns The strstr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"40f8a8f0strstr","filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strstr(${1:const char *}, ${2:const char *})"}},{"label":"â€¢std::size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstddef\u003e`  \nThis is normally declared in various headers that we do not have available, so just define it here. We could also use ::size_t below, but then anyone including \\\u003cnew\u003e can no longer assume std::size_t is available."},"sortText":"40f9319esize_t","filterText":"size_t","insertText":"std::size_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"std::size_t"}},{"label":" strcasecmp(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcasecmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\returns The strcasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\"  \n\\\\p s2."},"sortText":"40fd1dd8strcasecmp","filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcasecmp(${1:const char *}, ${2:const char *})"}},{"label":" strcasecmp_P(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_P(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp_P() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\param s1 A pointer to a string in the devices SRAM.  \n\\\\param s2 A pointer to a string in the devices Flash.  \n\\\\returns The strcasecmp_P() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"40fd1dd8strcasecmp_P","filterText":"strcasecmp_P","insertText":"strcasecmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcasecmp_P(${1:const char *}, ${2:const char *})"}},{"label":" strcasecmp_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compare two strings ignoring case  \nThe strcasecmp_PF() function compares the two strings \\\\e s1 and \\\\e s2, ignoring the case of the characters.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strcasecmp_PF","filterText":"strcasecmp_PF","insertText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})"}},{"label":" strcasestr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcasestr(const char \\*s1, const char \\*s2)  \nThe strcasestr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. This is like strstr(), except that it ignores case of alphabetic symbols in searching for the substring. (Glibc, GNU extension.)  \n\\\\return The strcasestr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"40fd1dd8strcasestr","filterText":"strcasestr","insertText":"strcasestr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcasestr(${1:const char *}, ${2:const char *})"}},{"label":" strcasestr_P(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcasestr_P(const char \\*s1, const char \\*s2)  \nThis funtion is similar to strcasestr() except that \\\\p s2 is pointer to a string in program space."},"sortText":"40fd1dd8strcasestr_P","filterText":"strcasestr_P","insertText":"strcasestr_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcasestr_P(${1:const char *}, ${2:const char *})"}},{"label":" strcat(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcat(char \\*dest, const char \\*src)  \n\\\\brief Concatenate two strings.  \nThe strcat() function appends the src string to the dest string overwriting the '\\\\\\\\0' character at the end of dest, and then adds a terminating '\\\\\\\\0' character. The strings may not overlap, and the dest string must have enough space for the result.  \n\\\\returns The strcat() function returns a pointer to the resulting string dest."},"sortText":"40fd1dd8strcat","filterText":"strcat","insertText":"strcat(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcat(${1:char *}, ${2:const char *})"}},{"label":" strcat_P(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_P(char \\*dest, const char \\*src)  \nThe strcat_P() function is similar to strcat() except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strcat() function returns a pointer to the resulting string  \n\\\\e dest."},"sortText":"40fd1dd8strcat_P","filterText":"strcat_P","insertText":"strcat_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcat_P(${1:char *}, ${2:const char *})"}},{"label":" strcat_PF(char *dest, uint_farptr_t src)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Concatenates two strings  \nThe strcat_PF() function is similar to strcat() except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the string to be appended in Flash  \n\\\\returns The strcat_PF() function returns a pointer to the resulting string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns"},"sortText":"40fd1dd8strcat_PF","filterText":"strcat_PF","insertText":"strcat_PF(${1:char *dest}, ${2:uint_farptr_t src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcat_PF(${1:char *dest}, ${2:uint_farptr_t src})"}},{"label":" strchr_P(const char *, int val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchr_P(const char \\*s, int val)  \n\\\\brief Locate character in program space string.  \nThe strchr_P() function locates the first occurrence of \\\\p val (converted to a char) in the string pointed to by \\\\p s in program space. The terminating null character is considered to be part of the string.  \nThe strchr_P() function is similar to strchr() except that \\\\p s is pointer to a string in program space.  \n\\\\returns The strchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"40fd1dd8strchr_P","filterText":"strchr_P","insertText":"strchr_P(${1:const char *}, ${2:int val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strchr_P(${1:const char *}, ${2:int val})"}},{"label":" strchrnul(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchrnul(const char \\*s, int c)  \nThe strchrnul() function is like strchr() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"sortText":"40fd1dd8strchrnul","filterText":"strchrnul","insertText":"strchrnul(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strchrnul(${1:const char *}, ${2:int})"}},{"label":" strchrnul_P(const char *, int val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchrnul_P(const char \\*s, int c)  \nThe strchrnul_P() function is like strchr_P() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul_P() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"sortText":"40fd1dd8strchrnul_P","filterText":"strchrnul_P","insertText":"strchrnul_P(${1:const char *}, ${2:int val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strchrnul_P(${1:const char *}, ${2:int val})"}},{"label":" strcmp_P(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_P(const char \\*s1, const char \\*s2)  \nThe strcmp_P() function is similar to strcmp() except that \\\\p s2 is pointer to a string in program space.  \n\\\\returns The strcmp_P() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"40fd1dd8strcmp_P","filterText":"strcmp_P","insertText":"strcmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcmp_P(${1:const char *}, ${2:const char *})"}},{"label":" strcmp_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compares two strings  \nThe strcmp_PF() function is similar to strcmp() except that \\\\e s2 is a far pointer to a string in program space.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcmp_PF() function returns an integer less than, equal to,  \nor greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strcmp_PF","filterText":"strcmp_PF","insertText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})"}},{"label":" strcoll(const char *s1, const char *s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"libstdc++ compatibility, dummy declarations"},"sortText":"40fd1dd8strcoll","filterText":"strcoll","insertText":"strcoll(${1:const char *s1}, ${2:const char *s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcoll(${1:const char *s1}, ${2:const char *s2})"}},{"label":" strcpy_PF(char *dest, uint_farptr_t src)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Duplicate a string  \nThe strcpy_PF() function is similar to strcpy() except that \\\\e src is a far pointer to a string in program space.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\returns The strcpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the funcion returns."},"sortText":"40fd1dd8strcpy_PF","filterText":"strcpy_PF","insertText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})"}},{"label":" strcspn(const char *s, const char *reject)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strcspn(const char \\*s, const char \\*reject)  \nThe strcspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject.  \n\\\\return The strcspn() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"sortText":"40fd1dd8strcspn","filterText":"strcspn","insertText":"strcspn(${1:const char *s}, ${2:const char *reject})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcspn(${1:const char *s}, ${2:const char *reject})"}},{"label":" strcspn_P(const char *s, const char *reject)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strcspn_P(const char \\*s, const char \\*reject)  \nThe strcspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject. This function is similar to strcspn() except that \\\\p reject is a pointer to a string in program space.  \n\\\\return The strcspn_P() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"sortText":"40fd1dd8strcspn_P","filterText":"strcspn_P","insertText":"strcspn_P(${1:const char *s}, ${2:const char *reject})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcspn_P(${1:const char *s}, ${2:const char *reject})"}},{"label":" strdup(const char *s1)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strdup(const char \\*s1)  \n\\\\brief Duplicate a string.  \nThe strdup() function allocates memory and copies into it the string addressed by s1, including the terminating null character.  \n\\\\warning The strdup() function calls malloc() to allocate the memory for the duplicated string! The user is responsible for freeing the memory by calling free().  \n\\\\returns The strdup() function returns a pointer to the resulting string dest. If malloc() cannot allocate enough storage for the string, strdup() will return NULL.  \n\\\\warning Be sure to check the return value of the strdup() function to make sure that the function has succeeded in allocating the memory!"},"sortText":"40fd1dd8strdup","filterText":"strdup","insertText":"strdup(${1:const char *s1})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strdup(${1:const char *s1})"}},{"label":" strerror(int errnum)","kind":3,"detail":"char *","sortText":"40fd1dd8strerror","filterText":"strerror","insertText":"strerror(${1:int errnum})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strerror(${1:int errnum})"}},{"label":" strlcat(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcat(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz \u003c=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval \u003e= siz, truncation occurred."},"sortText":"40fd1dd8strlcat","filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcat_P(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nThe strlcat_P() function is similar to strlcat(), except that the \\\\p src string must be located in program space (flash).  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz \u003c=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat_P() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval \u003e= siz, truncation occurred."},"sortText":"40fd1dd8strlcat_P","filterText":"strlcat_P","insertText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcat_PF(char *dst, uint_farptr_t src, size_t siz)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strlcat_PF() function is similar to strlcat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \nAppends src to string dst of size \\\\e n (unlike strncat(), \\\\e n is the full size of \\\\e dst, not space left). At most \\\\e n-1 characters will be copied. Always NULL terminates (unless \\\\e n \u003c= strlen(\\\\e dst)).  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The total number of bytes allocated to the destination string  \n\\\\returns The strlcat_PF() function returns strlen(\\\\e src) + MIN(\\\\e n,  \nstrlen(initial \\\\e dst)). If retval \u003e= \\\\e n, truncation occurred. The contents of RAMPZ SFR are undefined when the funcion returns."},"sortText":"40fd1dd8strlcat_PF","filterText":"strlcat_PF","insertText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})"}},{"label":" strlcpy(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcpy(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \n\\\\returns The strlcpy() function returns strlen(src). If retval \u003e= siz,  \ntruncation occurred."},"sortText":"40fd1dd8strlcpy","filterText":"strlcpy","insertText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy_P(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \nThe strlcpy_P() function is similar to strlcpy() except that the  \n\\\\p src is pointer to a string in memory space.  \n\\\\returns The strlcpy_P() function returns strlen(src). If retval \u003e= siz, truncation occurred."},"sortText":"40fd1dd8strlcpy_P","filterText":"strlcpy_P","insertText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy_PF(char *dst, uint_farptr_t src, size_t siz)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_PF(char \\*dst, uint_farptr_t src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy src to string dst of size siz. At most siz-1 characters will be copied. Always NULL terminates (unless siz == 0).  \n\\\\returns The strlcpy_PF() function returns strlen(src). If retval \u003e= siz,  \ntruncation occurred. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strlcpy_PF","filterText":"strlcpy_PF","insertText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})"}},{"label":" strlen_PF(uint_farptr_t src)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlen_PF(uint_farptr_t s)  \n\\\\brief Obtain the length of a string  \nThe strlen_PF() function is similar to strlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in flash  \n\\\\returns The strlen_PF() function returns the number of characters in  \n\\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strlen_PF","filterText":"strlen_PF","insertText":"strlen_PF(${1:uint_farptr_t src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strlen_PF(${1:uint_farptr_t src})"}},{"label":" strlwr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strlwr(char \\*s)  \n\\\\brief Convert a string to lower case.  \nThe strlwr() function will convert a string to lower case. Only the upper case alphabetic characters [A .. Z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strlwr() function returns a pointer to the converted string."},"sortText":"40fd1dd8strlwr","filterText":"strlwr","insertText":"strlwr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strlwr(${1:char *})"}},{"label":" strncasecmp(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncasecmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings ignoring case.  \nThe strncasecmp() function is similar to strcasecmp(), except it only compares the first \\\\p len characters of \\\\p s1.  \n\\\\returns The strncasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 (or the first \\\\p len bytes thereof) is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strncasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2,  \nthen \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"40fd1dd8strncasecmp","filterText":"strncasecmp","insertText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncasecmp_P(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncasecmp_P(const char \\*s1, const char \\*s2, size_t n)  \n\\\\brief Compare two strings ignoring case.  \nThe strncasecmp_P() function is similar to strcasecmp_P(), except it only compares the first \\\\p n characters of \\\\p s1.  \n\\\\param s1 A pointer to a string in the devices SRAM.  \n\\\\param s2 A pointer to a string in the devices Flash.  \n\\\\param n The maximum number of bytes to compare.  \n\\\\returns The strncasecmp_P() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 (or the first \\\\p n bytes thereof) is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strncasecmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2,  \nthen \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"40fd1dd8strncasecmp_P","filterText":"strncasecmp_P","insertText":"strncasecmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strncasecmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncasecmp_PF(const char *s1, uint_farptr_t s2, size_t n)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncasecmp_PF(const char \\*s1, uint_farptr_t s2, size_t n)  \n\\\\brief Compare two strings ignoring case  \nThe strncasecmp_PF() function is similar to strcasecmp_PF(), except it only compares the first \\\\e n characters of \\\\e s1 and the string in flash is addressed using a far pointer.  \n\\\\param s1 A pointer to a string in SRAM  \n\\\\param s2 A far pointer to a string in Flash  \n\\\\param n The maximum number of bytes to compare  \n\\\\returns The strncasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 (or the first \\\\e n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strncasecmp_PF","filterText":"strncasecmp_PF","insertText":"strncasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strncasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})"}},{"label":" strncat(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strncat(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Concatenate two strings.  \nThe strncat() function is similar to strcat(), except that only the first n characters of src are appended to dest.  \n\\\\returns The strncat() function returns a pointer to the resulting string dest."},"sortText":"40fd1dd8strncat","filterText":"strncat","insertText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncat_P(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncat_P(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Concatenate two strings.  \nThe strncat_P() function is similar to strncat(), except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strncat_P() function returns a pointer to the resulting string dest."},"sortText":"40fd1dd8strncat_P","filterText":"strncat_P","insertText":"strncat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strncat_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncat_PF(char *dest, uint_farptr_t src, size_t len)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strncat_PF() function is similar to strncat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to append  \n\\\\returns The strncat_PF() function returns a pointer to the resulting string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strncat_PF","filterText":"strncat_PF","insertText":"strncat_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strncat_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})"}},{"label":" strncmp_P(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncmp_P(const char \\*s1, const char \\*s2, size_t n)  \nThe strncmp_P() function is similar to strcmp_P() except it only compares the first (at most) n characters of s1 and s2.  \n\\\\returns The strncmp_P() function returns an integer less than, equal to,  \nor greater than zero if s1 (or the first n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than s2."},"sortText":"40fd1dd8strncmp_P","filterText":"strncmp_P","insertText":"strncmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strncmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncmp_PF(const char *s1, uint_farptr_t s2, size_t n)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncmp_PF(const char \\*s1, uint_farptr_t s2, size_t n)  \n\\\\brief Compare two strings with limited length  \nThe strncmp_PF() function is similar to strcmp_PF() except it only compares the first (at most) \\\\e n characters of \\\\e s1 and \\\\e s2.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\param n The maximum number of bytes to compare  \n\\\\returns The strncmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 (or the first \\\\e n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strncmp_PF","filterText":"strncmp_PF","insertText":"strncmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strncmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})"}},{"label":" strncpy_P(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_P(char \\*dest, const char \\*src, size_t n)  \nThe strncpy_P() function is similar to strcpy_P() except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy_P() function returns a pointer to the destination string dest."},"sortText":"40fd1dd8strncpy_P","filterText":"strncpy_P","insertText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy_PF(char *dest, uint_farptr_t src, size_t len)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Duplicate a string until a limited length  \nThe strncpy_PF() function is similar to strcpy_PF() except that not more than \\\\e n bytes of \\\\e src are copied. Thus, if there is no null byte among the first \\\\e n bytes of \\\\e src, the result will not be null-terminated.  \nIn the case where the length of \\\\e src is less than that of \\\\e n, the remainder of \\\\e dst will be padded with nulls.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to copy  \n\\\\returns The strncpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strncpy_PF","filterText":"strncpy_PF","insertText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})"}},{"label":" strnlen(const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strnlen(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen function returns the number of characters in the string pointed to by src, not including the terminating '\\\\\\\\0' character, but at most len. In doing this, strnlen looks only at the first len characters at src and never beyond src+len.  \n\\\\returns The strnlen function returns strlen(src), if that is less than len, or len if there is no '\\\\\\\\0' character among the first len characters pointed to by src."},"sortText":"40fd1dd8strnlen","filterText":"strnlen","insertText":"strnlen(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strnlen(${1:const char *}, ${2:size_t})"}},{"label":" strnlen_P(const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_P(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen_P() function is similar to strnlen(), except that \\\\c src is a pointer to a string in program space.  \n\\\\returns The strnlen_P function returns strlen_P(src), if that is less than  \n\\\\c len, or \\\\c len if there is no '\\\\\\\\0' character among the first \\\\c len characters pointed to by \\\\c src."},"sortText":"40fd1dd8strnlen_P","filterText":"strnlen_P","insertText":"strnlen_P(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strnlen_P(${1:const char *}, ${2:size_t})"}},{"label":" strnlen_PF(uint_farptr_t src, size_t len)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_PF(uint_farptr_t s, size_t len)  \n\\\\brief Determine the length of a fixed-size string  \nThe strnlen_PF() function is similar to strnlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in Flash  \n\\\\param len The maximum number of length to return  \n\\\\returns The strnlen_PF function returns strlen_P(\\\\e s), if that is less than \\\\e len, or \\\\e len if there is no '\\\\\\\\0' character among the first \\\\e len characters pointed to by \\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strnlen_PF","filterText":"strnlen_PF","insertText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})"}},{"label":" strpbrk(const char *s, const char *accept)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strpbrk(const char \\*s, const char \\*accept)  \nThe strpbrk() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the string \\\\p accept.  \n\\\\return The strpbrk() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will be \\\\c NULL."},"sortText":"40fd1dd8strpbrk","filterText":"strpbrk","insertText":"strpbrk(${1:const char *s}, ${2:const char *accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strpbrk(${1:const char *s}, ${2:const char *accept})"}},{"label":" strpbrk_P(const char *s, const char *accept)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strpbrk_P(const char \\*s, const char \\*accept)  \nThe strpbrk_P() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the flash string \\\\p accept. This function is similar to strpbrk() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strpbrk_P() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will  \n\\\\c NULL."},"sortText":"40fd1dd8strpbrk_P","filterText":"strpbrk_P","insertText":"strpbrk_P(${1:const char *s}, ${2:const char *accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strpbrk_P(${1:const char *s}, ${2:const char *accept})"}},{"label":" strrchr_P(const char *, int val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strrchr_P(const char \\*s, int val)  \n\\\\brief Locate character in string.  \nThe strrchr_P() function returns a pointer to the last occurrence of the character \\\\p val in the flash string \\\\p s.  \n\\\\return The strrchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"40fd1dd8strrchr_P","filterText":"strrchr_P","insertText":"strrchr_P(${1:const char *}, ${2:int val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strrchr_P(${1:const char *}, ${2:int val})"}},{"label":" strrev(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrev(char \\*s)  \n\\\\brief Reverse a string.  \nThe strrev() function reverses the order of the string.  \n\\\\returns The strrev() function returns a pointer to the beginning of the reversed string."},"sortText":"40fd1dd8strrev","filterText":"strrev","insertText":"strrev(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strrev(${1:char *})"}},{"label":" strsep(char **, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strsep(char \\*\\*sp, const char \\*delim)  \n\\\\brief Parse a string into tokens.  \nThe strsep() function locates, in the string referenced by \\\\p \\*sp,  \nthe first occurrence of any character in the string \\\\p delim (or the terminating '\\\\\\\\0' character) and replaces it with a '\\\\\\\\0'. The location of the next character after the delimiter character (or \\\\c NULL, if the end of the string was reached) is stored in \\\\p \\*sp. An  \n\\`\\`empty'' field, i.e. one caused by two adjacent delimiter characters, can be detected by comparing the location referenced by the pointer returned in \\\\p \\*sp to '\\\\\\\\0'.  \n\\\\return The strsep() function returns a pointer to the original value of \\\\p \\*sp. If \\\\p \\*sp is initially \\\\c NULL, strsep() returns  \n\\\\c NULL."},"sortText":"40fd1dd8strsep","filterText":"strsep","insertText":"strsep(${1:char **}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strsep(${1:char **}, ${2:const char *})"}},{"label":" strsep_P(char **sp, const char *delim)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strsep_P(char \\*\\*sp, const char \\*delim)  \n\\\\brief Parse a string into tokens.  \nThe strsep_P() function locates, in the string referenced by \\\\p \\*sp,  \nthe first occurrence of any character in the string \\\\p delim (or the terminating '\\\\\\\\0' character) and replaces it with a '\\\\\\\\0'. The location of the next character after the delimiter character (or \\\\c NULL, if the end of the string was reached) is stored in \\\\p \\*sp. An  \n\\`\\`empty'' field, i.e. one caused by two adjacent delimiter characters, can be detected by comparing the location referenced by the pointer returned in \\\\p \\*sp to '\\\\\\\\0'. This function is similar to strsep() except that \\\\p delim is a pointer to a string in program space.  \n\\\\return The strsep_P() function returns a pointer to the original value of \\\\p \\*sp. If \\\\p \\*sp is initially \\\\c NULL, strsep_P() returns  \n\\\\c NULL."},"sortText":"40fd1dd8strsep_P","filterText":"strsep_P","insertText":"strsep_P(${1:char **sp}, ${2:const char *delim})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strsep_P(${1:char **sp}, ${2:const char *delim})"}},{"label":" strspn(const char *s, const char *accept)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strspn(const char \\*s, const char \\*accept)  \nThe strspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept.  \n\\\\return The strspn() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"sortText":"40fd1dd8strspn","filterText":"strspn","insertText":"strspn(${1:const char *s}, ${2:const char *accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strspn(${1:const char *s}, ${2:const char *accept})"}},{"label":" strspn_P(const char *s, const char *accept)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strspn_P(const char \\*s, const char \\*accept)  \nThe strspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept. This function is similar to strspn() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strspn_P() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"sortText":"40fd1dd8strspn_P","filterText":"strspn_P","insertText":"strspn_P(${1:const char *s}, ${2:const char *accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strspn_P(${1:const char *s}, ${2:const char *accept})"}},{"label":" strstr_P(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strstr_P(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr_P() function finds the first occurrence of the substring  \n\\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared. The strstr_P() function is similar to strstr() except that  \n\\\\p s2 is pointer to a string in program space.  \n\\\\returns The strstr_P() function returns a pointer to the beginning of the substring, or NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"40fd1dd8strstr_P","filterText":"strstr_P","insertText":"strstr_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strstr_P(${1:const char *}, ${2:const char *})"}},{"label":" strstr_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strstr_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Locate a substring.  \nThe strstr_PF() function finds the first occurrence of the substring \\\\c s2 in the string \\\\c s1. The terminating '\\\\\\\\0' characters are not compared.  \nThe strstr_PF() function is similar to strstr() except that \\\\c s2 is a far pointer to a string in program space.  \n\\\\returns The strstr_PF() function returns a pointer to the beginning of the substring, or NULL if the substring is not found.  \nIf \\\\c s2 points to a string of zero length, the function returns \\\\c s1. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"40fd1dd8strstr_PF","filterText":"strstr_PF","insertText":"strstr_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strstr_PF(${1:const char *s1}, ${2:uint_farptr_t s2})"}},{"label":" strtod(const char *nptr, char **endptr)","kind":3,"detail":"double","sortText":"40fd1dd8strtod","filterText":"strtod","insertText":"strtod(${1:const char *nptr}, ${2:char **endptr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strtod(${1:const char *nptr}, ${2:char **endptr})"}},{"label":" strtok(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strtok(char \\*s, const char \\*delim)  \n\\\\brief Parses the string s into tokens.  \nstrtok parses the string s into tokens. The first call to strtok should have s as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok. The delimiter string delim may be different for each call.  \n\\\\returns The strtok() function returns a pointer to the next token or NULL when no more tokens are found.  \n\\\\note strtok() is NOT reentrant. For a reentrant version of this function see \\\\c strtok_r()."},"sortText":"40fd1dd8strtok","filterText":"strtok","insertText":"strtok(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strtok(${1:char *}, ${2:const char *})"}},{"label":" strtok_P(char *s, const char *delim)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strtok_P(char \\*s, const char * delim)  \n\\\\brief Parses the string into tokens.  \nstrtok_P() parses the string \\\\p s into tokens. The first call to strtok_P() should have \\\\p s as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_P().  \nThe delimiter string \\\\p delim may be different for each call.  \nThe strtok_P() function is similar to strtok() except that \\\\p delim is pointer to a string in program space.  \n\\\\returns The strtok_P() function returns a pointer to the next token or NULL when no more tokens are found.  \n\\\\note strtok_P() is NOT reentrant. For a reentrant version of this function see strtok_rP()."},"sortText":"40fd1dd8strtok_P","filterText":"strtok_P","insertText":"strtok_P(${1:char *s}, ${2:const char *delim})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strtok_P(${1:char *s}, ${2:const char *delim})"}},{"label":" strtok_r(char *, const char *, char **)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strtok_r(char \\*string, const char \\*delim, char \\*\\*last)  \n\\\\brief Parses string into tokens.  \nstrtok_r parses string into tokens. The first call to strtok_r should have string as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_r. The delimiter string  \n\\\\p delim may be different for each call. \\\\p last is a user allocated char\\* pointer. It must be the same while parsing the same string. strtok_r is a reentrant version of strtok().  \n\\\\returns The strtok_r() function returns a pointer to the next token or NULL when no more tokens are found."},"sortText":"40fd1dd8strtok_r","filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})"}},{"label":" strtok_rP(char *s, const char *delim, char **last)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strtok_rP (char \\*string, const char \\*delim, char \\*\\*last)  \n\\\\brief Parses string into tokens.  \nThe strtok_rP() function parses \\\\p string into tokens. The first call to strtok_rP() should have string as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_rP().  \nThe delimiter string \\\\p delim may be different for each call. \\\\p last is a user allocated char\\* pointer. It must be the same while parsing the same string. strtok_rP() is a reentrant version of strtok_P().  \nThe strtok_rP() function is similar to strtok_r() except that \\\\p delim is pointer to a string in program space.  \n\\\\returns The strtok_rP() function returns a pointer to the next token or NULL when no more tokens are found."},"sortText":"40fd1dd8strtok_rP","filterText":"strtok_rP","insertText":"strtok_rP(${1:char *s}, ${2:const char *delim}, ${3:char **last})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strtok_rP(${1:char *s}, ${2:const char *delim}, ${3:char **last})"}},{"label":" strtol(const char *nptr, char **endptr, int base)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"The strtol() function converts the string in \\\\c nptr to a long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to a long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11,  \nand so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtol() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtol() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtol() function returns the result of the conversion, unless the value would underflow or overflow. If no conversion could be performed, 0 is returned. If an overflow or underflow occurs, \\\\c errno is set to \\\\ref avr_errno \"ERANGE\" and the function return value is clamped to \\\\c LONG_MIN or \\\\c LONG_MAX, respectively."},"sortText":"40fd1dd8strtol","filterText":"strtol","insertText":"strtol(${1:const char *nptr}, ${2:char **endptr}, ${3:int base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strtol(${1:const char *nptr}, ${2:char **endptr}, ${3:int base})"}},{"label":" strtoul(const char *nptr, char **endptr, int base)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"The strtoul() function converts the string in \\\\c nptr to an unsigned long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to an unsigned long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11, and so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtoul() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtoul() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtoul() function return either the result of the conversion or, if there was a leading minus sign, the negation of the result of the conversion, unless the original (non-negated) value would overflow; in the latter case, strtoul() returns ULONG_MAX, and \\\\c errno is set to \\\\ref avr_errno \"ERANGE\". If no conversion could be performed, 0 is returned."},"sortText":"40fd1dd8strtoul","filterText":"strtoul","insertText":"strtoul(${1:const char *nptr}, ${2:char **endptr}, ${3:int base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strtoul(${1:const char *nptr}, ${2:char **endptr}, ${3:int base})"}},{"label":" strupr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strupr(char \\*s)  \n\\\\brief Convert a string to upper case.  \nThe strupr() function will convert a string to upper case. Only the lower case alphabetic characters [a .. z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strupr() function returns a pointer to the converted string. The pointer is the same as that passed in since the operation is perform in place."},"sortText":"40fd1dd8strupr","filterText":"strupr","insertText":"strupr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strupr(${1:char *})"}},{"label":" strxfrm(char *dest, const char *src, size_t n)","kind":3,"detail":"size_t","sortText":"40fd1dd8strxfrm","filterText":"strxfrm","insertText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})"}},{"label":" strcpy(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcpy(char \\*dest, const char \\*src)  \n\\\\brief Copy a string.  \nThe strcpy() function copies the string pointed to by src (including the terminating '\\\\\\\\0' character) to the array pointed to by dest. The strings may not overlap, and the destination string dest must be large enough to receive the copy.  \n\\\\returns The strcpy() function returns a pointer to the destination string dest.  \n\\\\note If the destination string of a strcpy() is not large enough (that is, if the programmer was stupid/lazy, and failed to check the size before copying) then anything might happen. Overflowing fixed length strings is a favourite cracker technique."},"sortText":"4100bc4dstrcpy","filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcpy(${1:char *}, ${2:const char *})"}},{"label":" strcmp(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings.  \nThe strcmp() function compares the two strings \\\\p s1 and \\\\p s2.  \n\\\\returns The strcmp() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"410ce450strcmp","filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcmp(${1:const char *}, ${2:const char *})"}},{"label":" strcpy_P(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_P(char \\*dest, const char \\*src)  \nThe strcpy_P() function is similar to strcpy() except that src is a pointer to a string in program space.  \n\\\\returns The strcpy_P() function returns a pointer to the destination string dest."},"sortText":"411847f7strcpy_P","filterText":"strcpy_P","insertText":"strcpy_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strcpy_P(${1:char *}, ${2:const char *})"}},{"label":" strlen_P(const char *s)","kind":3,"detail":"size_t","sortText":"411847f7strlen_P","filterText":"strlen_P","insertText":"strlen_P(${1:const char *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strlen_P(${1:const char *s})"}},{"label":" strncpy(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strncpy(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Copy a string.  \nThe strncpy() function is similar to strcpy(), except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy() function returns a pointer to the destination string dest."},"sortText":"411847f7strncpy","filterText":"strncpy","insertText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strchr(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strchr() function returns a pointer to the first occurrence of the character \\\\p val in the string \\\\p src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strchr() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"413f5466strchr","filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strchr(${1:const char *}, ${2:int})"}},{"label":" strncmp(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings.  \nThe strncmp() function is similar to strcmp(), except it only compares the first (at most) n characters of s1 and s2.  \n\\\\returns The strncmp() function returns an integer less than, equal to, or greater than zero if s1 (or the first n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than s2."},"sortText":"413f5466strncmp","filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strrchr(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strrchr() function returns a pointer to the last occurrence of the character val in the string src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strrchr() function returns a pointer to the matched character or NULL if the character is not found."},"sortText":"413f5466strrchr","filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"strrchr(${1:const char *}, ${2:int})"}},{"label":" AF_Stepper","kind":7,"sortText":"4161fae4AF_Stepper","filterText":"AF_Stepper","insertText":"AF_Stepper","insertTextFormat":1,"textEdit":{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":6}},"newText":"AF_Stepper"}}]}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":126,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":109,"character":6},"end":{"line":109,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":126,"result":[]}
<<<
Content-Length: 2823

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":111},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n      forward();\r\n  }\r\n  if(cm < 3){\r\n    st\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 266

{"jsonrpc":"2.0","id":127,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":112},"contentChanges":[{"range":{"start":{"line":109,"character":6},"end":{"line":109,"character":6}},"rangeLength":0,"text":"o"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":127}}Content-Length: 266

{"jsonrpc":"2.0","id":128,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":127,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"16","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 2513

{"jsonrpc":"2.0","id":128,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"16","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":129,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":109,"character":7},"end":{"line":109,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":129,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":130,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":113},"contentChanges":[{"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":7}},"rangeLength":3,"text":"stop()"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":130}}Content-Length: 266

{"jsonrpc":"2.0","id":131,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":130,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":131,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":132,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":109,"character":10},"end":{"line":109,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":132,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":133,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":114},"contentChanges":[{"range":{"start":{"line":109,"character":10},"end":{"line":109,"character":10}},"rangeLength":0,"text":";"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":133}}Content-Length: 266

{"jsonrpc":"2.0","id":134,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":133,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":134,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":135,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":109,"character":11},"end":{"line":109,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":135,"result":[]}
<<<
Content-Length: 2828

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":114},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n      forward();\r\n  }\r\n  if(cm < 3){\r\n    stop();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 295

{"jsonrpc":"2.0","id":136,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":106,"character":5}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":136,"result":null}
<<<
Content-Length: 307

{"jsonrpc":"2.0","id":137,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":106,"character":6}}}
>>>
Content-Length: 215

{"jsonrpc":"2.0","id":137,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":106,"character":6},"end":{"line":106,"character":13}},"kind":1}]}Content-Length: 119

{"jsonrpc":"2.0","id":"17","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"17","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":138,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":106,"character":6},"end":{"line":106,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":138,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":139,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":115},"contentChanges":[{"range":{"start":{"line":106,"character":4},"end":{"line":106,"character":6}},"rangeLength":2,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":139}}Content-Length: 266

{"jsonrpc":"2.0","id":140,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":139,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":140,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":141,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":106,"character":4},"end":{"line":106,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":141,"result":[]}
<<<
Content-Length: 2826

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":115},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n    forward();\r\n  }\r\n  if(cm < 3){\r\n    stop();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 369

{"jsonrpc":"2.0","id":142,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":110,"character":3},"end":{"line":110,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":142,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"18","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"18","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":143,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":109,"character":11},"end":{"line":109,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":143,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"19","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"19","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 2826

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":115},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n    forward();\r\n  }\r\n  if(cm < 3){\r\n    stop();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"20","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"20","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-A9CAAD3847D5F9574E389B1BC813F91F"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"21","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"21","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"22","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"22","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":144,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":3},"end":{"line":104,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":144,"result":[]}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":145,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":111,"character":17}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":145,"result":null}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":146,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":112,"character":19},"end":{"line":112,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":146,"result":[]}
<<<
Content-Length: 2826

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":115},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n    forward();\r\n  }\r\n  if(cm < 3){\r\n    stop();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"23","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"23","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"24","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"24","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":147,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":113,"character":20}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":147,"result":null}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":148,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":107,"character":3},"end":{"line":107,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":148,"result":[]}
<<<
Content-Length: 2826

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":115},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  if(cm >18){\r\n    forward();\r\n  }\r\n  if(cm < 3){\r\n    stop();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"25","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"25","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"26","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"26","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":149,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":110,"character":3},"end":{"line":110,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":149,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":150,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":97,"character":2}}}
>>>
Content-Length: 228

{"jsonrpc":"2.0","id":150,"result":{"contents":{"kind":"markdown","value":"### variable `cm`  \n\n---\nType: `float`  \n\n---\n```cpp\nfloat cm\n```"},"range":{"start":{"line":97,"character":2},"end":{"line":97,"character":4}}}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":151,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":97,"character":2},"end":{"line":110,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":151,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":152,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":98,"character":2},"end":{"line":110,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":152,"result":[]}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":153,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":111,"character":27}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":153,"result":null}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":154,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":110,"character":3},"end":{"line":110,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":154,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":155,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":3}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":155,"result":null}
<<<
Content-Length: 307

{"jsonrpc":"2.0","id":156,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":4}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":156,"result":[]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":157,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":157,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":158,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":2}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":158,"result":null}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":159,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":116},"contentChanges":[{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":4}},"rangeLength":2,"text":"i"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":159}}Content-Length: 266

{"jsonrpc":"2.0","id":160,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":117},"contentChanges":[{"range":{"start":{"line":105,"character":3},"end":{"line":105,"character":3}},"rangeLength":0,"text":"f"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":160}}Content-Length: 266

{"jsonrpc":"2.0","id":161,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":159,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":160,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":161,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":162,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":4},"end":{"line":105,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":162,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":163,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":118},"contentChanges":[{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":4}},"rangeLength":2,"text":"else"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":163}}Content-Length: 266

{"jsonrpc":"2.0","id":164,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":163,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":164,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 328

{"jsonrpc":"2.0","id":165,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":6},"context":{"triggerKind":1}}}
>>>
Content-Length: 689

{"jsonrpc":"2.0","id":165,"result":{"isIncomplete":false,"items":[{"label":" else {statements}","kind":15,"sortText":"4029a1f8else","filterText":"else","insertText":"else {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":6}},"newText":"else {\n${0:statements}\n}"}},{"label":" else if (condition) {statements}","kind":15,"sortText":"40a9a1f8else if","filterText":"else if","insertText":"else if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":6}},"newText":"else if (${1:condition}) {\n${0:statements}\n}"}}]}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":166,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":6},"end":{"line":105,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":166,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":167,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":4}}}
>>>
Content-Length: 232

{"jsonrpc":"2.0","id":167,"result":{"contents":{"kind":"markdown","value":"### function `stop`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid stop()\n```"},"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":8}}}}
<<<
Content-Length: 2828

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":118},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else(cm >18){\r\n    forward();\r\n  }\r\n  if(cm < 3){\r\n    stop();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 369

{"jsonrpc":"2.0","id":168,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":108,"character":0},"end":{"line":110,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"27","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}Content-Length: 38

{"jsonrpc":"2.0","id":168,"result":[]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"27","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":169,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":119},"contentChanges":[{"range":{"start":{"line":108,"character":0},"end":{"line":110,"character":3}},"rangeLength":31,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":169}}Content-Length: 266

{"jsonrpc":"2.0","id":170,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":169,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":170,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 2793

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":119},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else(cm >18){\r\n    forward();\r\n  }\r\n\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 266

{"jsonrpc":"2.0","id":171,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":120},"contentChanges":[{"range":{"start":{"line":107,"character":3},"end":{"line":108,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":171}}Content-Length: 266

{"jsonrpc":"2.0","id":172,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":171,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"28","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 2513

{"jsonrpc":"2.0","id":172,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"28","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":173,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":107,"character":3},"end":{"line":107,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":173,"result":[]}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":174,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":108,"character":12}}}
>>>
Content-Length: 312

{"jsonrpc":"2.0","id":174,"result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t print(const char[])\n```"},"range":{"start":{"line":108,"character":9},"end":{"line":108,"character":14}}}}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":175,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":12}}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":175,"result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `double`\n- `int = 2`\n\n---\n```cpp\n// In Print\npublic: size_t print(double, int = 2)\n```"},"range":{"start":{"line":109,"character":9},"end":{"line":109,"character":14}}}}
<<<
Content-Length: 2789

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":120},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid Left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else(cm >18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"29","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"29","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":176,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":85,"character":14}}}
>>>
Content-Length: 313

{"jsonrpc":"2.0","id":176,"result":{"contents":{"kind":"markdown","value":"### function `pinMode`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t mode`\n\n---\n```cpp\nvoid pinMode(uint8_t pin, uint8_t mode)\n```"},"range":{"start":{"line":85,"character":13},"end":{"line":85,"character":14}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":177,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":66,"character":13}}}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":177,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"start":{"line":66,"character":9},"end":{"line":66,"character":16}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":178,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":54,"character":11}}}
>>>
Content-Length: 310

{"jsonrpc":"2.0","id":178,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":54,"character":2},"end":{"line":54,"character":13}}}}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":179,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":41,"character":6}}}
>>>
Content-Length: 230

{"jsonrpc":"2.0","id":179,"result":{"contents":{"kind":"markdown","value":"### function `Left`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid Left()\n```"},"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}}}
<<<
Content-Length: 306

{"jsonrpc":"2.0","id":180,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":41,"character":6}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":180,"result":[{"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}},"kind":1},{"range":{"start":{"line":102,"character":4},"end":{"line":102,"character":8}},"kind":1}]}
<<<
Content-Length: 367

{"jsonrpc":"2.0","id":181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":181,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":182,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":41,"character":5}}}
>>>
Content-Length: 230

{"jsonrpc":"2.0","id":182,"result":{"contents":{"kind":"markdown","value":"### function `Left`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid Left()\n```"},"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}}}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":183,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 390

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":121},"contentChanges":[{"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":6}},"rangeLength":1,"text":"l"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":183}}Content-Length: 266

{"jsonrpc":"2.0","id":184,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":183,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"Left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"30","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 2513

{"jsonrpc":"2.0","id":184,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"30","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 367

{"jsonrpc":"2.0","id":185,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":41,"character":6},"end":{"line":41,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":185,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":186,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":49,"character":9}}}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":186,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"start":{"line":49,"character":9},"end":{"line":49,"character":16}}}}
<<<
Content-Length: 2789

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":121},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid Right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else(cm >18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 294

{"jsonrpc":"2.0","id":187,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":52,"character":6}}}
>>>
Content-Length: 233

{"jsonrpc":"2.0","id":187,"result":{"contents":{"kind":"markdown","value":"### function `Right`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid Right()\n```"},"range":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}}}
<<<
Content-Length: 306

{"jsonrpc":"2.0","id":188,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":52,"character":6}}}
>>>
Content-Length: 125

{"jsonrpc":"2.0","id":188,"result":[{"range":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}},"kind":1}]}
<<<
Content-Length: 367

{"jsonrpc":"2.0","id":189,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":52,"character":5},"end":{"line":52,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":189,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"31","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"31","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":190,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":52,"character":5}}}
>>>
Content-Length: 233

{"jsonrpc":"2.0","id":190,"result":{"contents":{"kind":"markdown","value":"### function `Right`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid Right()\n```"},"range":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":191,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 390

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":122},"contentChanges":[{"range":{"start":{"line":52,"character":5},"end":{"line":52,"character":6}},"rangeLength":1,"text":"r"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":191}}Content-Length: 266

{"jsonrpc":"2.0","id":192,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":191,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"Right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":192,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 367

{"jsonrpc":"2.0","id":193,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":52,"character":6},"end":{"line":52,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":193,"result":[]}
<<<
Content-Length: 2789

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":122},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else(cm >18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"32","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"32","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":194,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":31,"character":14}}}
>>>
Content-Length: 209

{"jsonrpc":"2.0","id":194,"result":{"contents":{"kind":"markdown","value":"### macro `ENB`  \n\n---\n```cpp\n#define ENB 6\n```"},"range":{"start":{"line":31,"character":14},"end":{"line":31,"character":17}}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"33","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"33","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":195,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":25,"character":14}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":195}}
>>>
Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 320

{"jsonrpc":"2.0","id":195,"result":{"contents":{"kind":"markdown","value":"### function `digitalWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t val`\n\n---\n```cpp\nvoid digitalWrite(uint8_t pin, uint8_t val)\n```"},"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":14}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":196,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":18,"character":14}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":196,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":197,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":14,"character":14}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":197,"result":{"contents":{"kind":"markdown","value":"### macro `carSpeed`  \n\n---\n```cpp\n#define carSpeed 130\n```"},"range":{"start":{"line":14,"character":8},"end":{"line":14,"character":16}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":198,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":23,"character":24}}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":198,"result":{"contents":{"kind":"markdown","value":"### function `digitalWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t val`\n\n---\n```cpp\nvoid digitalWrite(uint8_t pin, uint8_t val)\n```"},"range":{"start":{"line":23,"character":24},"end":{"line":23,"character":25}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":199,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":37,"character":23}}}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":199,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"start":{"line":37,"character":23},"end":{"line":37,"character":24}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":200,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":64,"character":22}}}
>>>
Content-Length: 211

{"jsonrpc":"2.0","id":200,"result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"start":{"line":64,"character":20},"end":{"line":64,"character":23}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":201,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":73,"character":15}}}
>>>
Content-Length: 308

{"jsonrpc":"2.0","id":201,"result":{"contents":{"kind":"markdown","value":"### function `delayMicroseconds`  \n\n---\nâ†’ `void`  \nParameters:  \n- `unsigned int us`\n\n---\n```cpp\nvoid delayMicroseconds(unsigned int us)\n```"},"range":{"start":{"line":73,"character":4},"end":{"line":73,"character":21}}}}
<<<
Content-Length: 367

{"jsonrpc":"2.0","id":202,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":91,"character":9},"end":{"line":91,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":202,"result":[]}
<<<
Content-Length: 2789

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":122},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else(cm >18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 369

{"jsonrpc":"2.0","id":203,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":92,"character":13},"end":{"line":92,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":203,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"34","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"34","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"35","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"35","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":204,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":3}}}
>>>
Content-Length: 269

{"jsonrpc":"2.0","id":204,"result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"start":{"line":109,"character":2},"end":{"line":109,"character":8}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":205,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":4}}}
>>>
Content-Length: 269

{"jsonrpc":"2.0","id":205,"result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"start":{"line":109,"character":2},"end":{"line":109,"character":8}}}}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":206,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":12}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":206,"result":null}
<<<
Content-Length: 308

{"jsonrpc":"2.0","id":207,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":11}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":207,"result":[]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":208,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":11},"end":{"line":105,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":208,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":209,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":123},"contentChanges":[{"range":{"start":{"line":105,"character":11},"end":{"line":105,"character":11}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":209}}Content-Length: 266

{"jsonrpc":"2.0","id":210,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":209,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":210,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":211,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":12},"end":{"line":105,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":211,"result":[]}
<<<
Content-Length: 2790

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":123},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"36","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"36","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 2790

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":123},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"37","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"37","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":212,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":106,"character":14},"end":{"line":106,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":212,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":213,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":97,"character":14}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":213,"result":{"contents":{"kind":"markdown","value":"### function `GetDistance`  \n\n---\nâ†’ `float`  \n\n---\n```cpp\nfloat GetDistance()\n```"},"range":{"start":{"line":97,"character":7},"end":{"line":97,"character":18}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":214,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":86,"character":17}}}
>>>
Content-Length: 217

{"jsonrpc":"2.0","id":214,"result":{"contents":{"kind":"markdown","value":"### macro `OUTPUT`  \n\n---\n```cpp\n#define OUTPUT 0x1\n```"},"range":{"start":{"line":86,"character":15},"end":{"line":86,"character":21}}}}
<<<
Content-Length: 307

{"jsonrpc":"2.0","id":215,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":85,"character":19}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":215,"result":[]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":216,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":85,"character":19},"end":{"line":85,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":216,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":217,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":85,"character":19}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":217,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":43,"character":8},"end":{"line":43,"character":14}}}]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}Content-Length: 2790

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":123},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"38","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"38","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"39","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"39","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 2790

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":123},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"40","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"40","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"41","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"41","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":218,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":77,"character":15}}}
>>>
Content-Length: 428

{"jsonrpc":"2.0","id":218,"result":{"contents":{"kind":"markdown","value":"### function `pulseIn`  \n\n---\nâ†’ `unsigned long`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t state`\n- `unsigned long timeout = 1000000L`\n\n---\n```cpp\nunsigned long pulseIn(uint8_t pin, uint8_t state,\n                      unsigned long timeout = 1000000L)\n```"},"range":{"start":{"line":77,"character":15},"end":{"line":77,"character":22}}}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":219,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":44,"character":0},"end":{"line":47,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":219,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":220,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":46,"character":23}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":220,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","range":{"start":{"line":39,"character":8},"end":{"line":39,"character":12}}}]}
<<<
Content-Length: 8136

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/Arduino.h"}}}Content-Length: 295

{"jsonrpc":"2.0","id":221,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":46,"character":23}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":221,"result":{"contents":{"kind":"markdown","value":"### macro `HIGH`  \n\n---\n```cpp\n#define HIGH 0x1\n```"},"range":{"start":{"line":46,"character":19},"end":{"line":46,"character":23}}}}Content-Length: 119

{"jsonrpc":"2.0","id":"42","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"42","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"43","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"43","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":222,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":56,"character":0},"end":{"line":58,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":222,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":223,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":55,"character":0},"end":{"line":58,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":223,"result":[]}
<<<
Content-Length: 299

{"jsonrpc":"2.0","id":224,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":56,"character":4}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":224,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/wiring_digital.c","range":{"start":{"line":137,"character":5},"end":{"line":137,"character":17}}}]}
<<<
Content-Length: 5598

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out &= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statement; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) && defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) && defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out &= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) & bit) return HIGH;\n\treturn LOW;\n}\n"}}}Content-Length: 210

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/wiring_digital.c"}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"44","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"44","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"45","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"45","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":225,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":23,"character":0},"end":{"line":25,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":225,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":226,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":22,"character":0},"end":{"line":25,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":226,"result":[]}
<<<
Content-Length: 299

{"jsonrpc":"2.0","id":227,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":22,"character":6}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":227,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/wiring_digital.c","range":{"start":{"line":137,"character":5},"end":{"line":137,"character":17}}}]}
<<<
Content-Length: 5598

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out &= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statement; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) && defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) && defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out &= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) & bit) return HIGH;\n\treturn LOW;\n}\n"}}}Content-Length: 210

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/wiring_digital.c"}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"46","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"46","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"47","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"47","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}






Started logging.

<<<
Content-Length: 3312

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":3276,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"g:\\11.ZhiYi\\5.Tutorial\\1.tutorial\\ZYC0041)four way tracking car  tutorial\\ZYC0041\\4_Arduino_Code\\3_Obstacle_avoidance","rootUri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance","name":"3_Obstacle_avoidance"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.1"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 2807

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","languageId":"cpp","version":1,"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}}Content-Length: 363

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 264

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 305

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":13,"character":13}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 264

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 367

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":13,"character":13},"end":{"line":13,"character":13}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 2511

{"jsonrpc":"2.0","id":2,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 36

{"jsonrpc":"2.0","id":3,"result":[]}Content-Length: 2511

{"jsonrpc":"2.0","id":4,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 365

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":16,"character":9},"end":{"line":16,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":6,"result":[]}
<<<
Content-Length: 367

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":15,"character":15},"end":{"line":15,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":7,"result":[]}
<<<
Content-Length: 365

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":16,"character":9},"end":{"line":16,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-A9CAAD3847D5F9574E389B1BC813F91F"}}Content-Length: 367

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":102,"character":4},"end":{"line":102,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":9,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":102,"character":4}}}
>>>
Content-Length: 231

{"jsonrpc":"2.0","id":10,"result":{"contents":{"kind":"markdown","value":"### function `left`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid left()\n```"},"range":{"start":{"line":102,"character":4},"end":{"line":102,"character":8}}}}
<<<
Content-Length: 306

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":102,"character":5}}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":11,"result":[{"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}},"kind":1},{"range":{"start":{"line":102,"character":4},"end":{"line":102,"character":8}},"kind":1}]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":102,"character":5},"end":{"line":102,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":12,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":102,"character":4},"end":{"line":102,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":13,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":102,"character":3}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":14,"result":null}
<<<
Content-Length: 390

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":2},"contentChanges":[{"range":{"start":{"line":102,"character":4},"end":{"line":102,"character":5}},"rangeLength":1,"text":"L"}]}}Content-Length: 265

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}Content-Length: 265

{"jsonrpc":"2.0","id":16,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":15,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":16,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":102,"character":5},"end":{"line":102,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":17,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 2788

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":2},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    Left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 390

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":3},"contentChanges":[{"range":{"start":{"line":102,"character":4},"end":{"line":102,"character":5}},"rangeLength":1,"text":"l"}]}}Content-Length: 265

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":18,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 2788

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":3},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-A9CAAD3847D5F9574E389B1BC813F91F"}}Content-Length: 368

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":19,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"8","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"8","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":20,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":2}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":20,"result":null}
<<<
Content-Length: 306

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":2}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":21,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":22,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":3},"end":{"line":105,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":23,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":104,"character":3}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":24,"result":null}
<<<
Content-Length: 389

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":4},"contentChanges":[{"range":{"start":{"line":104,"character":3},"end":{"line":105,"character":2}},"rangeLength":4,"text":""}]}}Content-Length: 265

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}Content-Length: 265

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":25,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":26,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":3},"end":{"line":104,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":27,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"9","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"9","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 2782

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":4},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }else(cm > 18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":102,"character":9}}}
>>>
Content-Length: 232

{"jsonrpc":"2.0","id":28,"result":{"contents":{"kind":"markdown","value":"### function `left`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid left()\n```"},"range":{"start":{"line":102,"character":9},"end":{"line":102,"character":10}}}}Content-Length: 119

{"jsonrpc":"2.0","id":"10","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"10","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":29,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":21}}}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":29,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"start":{"line":109,"character":21},"end":{"line":109,"character":22}}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"11","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"11","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":30,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":108,"character":17}}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":30,"result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `double`\n- `int = 2`\n\n---\n```cpp\n// In Print\npublic: size_t print(double, int = 2)\n```"},"range":{"start":{"line":108,"character":15},"end":{"line":108,"character":17}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":31,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":107,"character":12}}}
>>>
Content-Length: 311

{"jsonrpc":"2.0","id":31,"result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t print(const char[])\n```"},"range":{"start":{"line":107,"character":9},"end":{"line":107,"character":14}}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-A9CAAD3847D5F9574E389B1BC813F91F"}}Content-Length: 368

{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":6},"end":{"line":104,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":32,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"12","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"12","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"13","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"13","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":33,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":11}}}
>>>
Content-Length: 238

{"jsonrpc":"2.0","id":33,"result":{"contents":{"kind":"markdown","value":"### function `forward`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid forward()\n```"},"range":{"start":{"line":105,"character":4},"end":{"line":105,"character":11}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":34,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":107,"character":12}}}
>>>
Content-Length: 311

{"jsonrpc":"2.0","id":34,"result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t print(const char[])\n```"},"range":{"start":{"line":107,"character":9},"end":{"line":107,"character":14}}}}
<<<
Content-Length: 370

{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":17},"end":{"line":104,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":35,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":36,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":104,"character":17}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":36,"result":null}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":17},"end":{"line":105,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":37,"result":[]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":17},"end":{"line":105,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":38,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":39,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":3}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":39,"result":null}
<<<
Content-Length: 390

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":5},"contentChanges":[{"range":{"start":{"line":104,"character":17},"end":{"line":105,"character":4}},"rangeLength":6,"text":""}]}}Content-Length: 265

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}Content-Length: 265

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":40,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":109,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":41,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":109,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 370

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":17},"end":{"line":104,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":42,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"14","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"14","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 2774

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":5},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }else(cm > 18){forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 399

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":6},"contentChanges":[{"range":{"start":{"line":104,"character":17},"end":{"line":104,"character":17}},"rangeLength":0,"text":"\r\n    "}]}}Content-Length: 265

{"jsonrpc":"2.0","id":43,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":43}}Content-Length: 265

{"jsonrpc":"2.0","id":44,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":43,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":44,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":4},"end":{"line":105,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":45,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 2782

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":6},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }else(cm > 18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"15","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"15","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-A9CAAD3847D5F9574E389B1BC813F91F"}}Content-Length: 368

{"jsonrpc":"2.0","id":46,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":6},"end":{"line":104,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":46,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"16","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"16","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"17","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"17","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":47,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":104,"character":16}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":47,"result":null}
<<<
Content-Length: 370

{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":16},"end":{"line":104,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":48,"result":[]}
<<<
Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":7},"contentChanges":[{"range":{"start":{"line":104,"character":16},"end":{"line":104,"character":16}},"rangeLength":0,"text":"\r\n  "}]}}Content-Length: 265

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":49}}Content-Length: 265

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":49,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":50,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":51,"result":[]}
<<<
Content-Length: 2788

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":7},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }else(cm > 18)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 294

{"jsonrpc":"2.0","id":52,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":104,"character":3}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":52,"result":null}
<<<
Content-Length: 306

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":104,"character":3}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":53,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":3},"end":{"line":104,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":54,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"18","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"18","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":8},"contentChanges":[{"range":{"start":{"line":104,"character":3},"end":{"line":104,"character":3}},"rangeLength":0,"text":"\r\n  "}]}}Content-Length: 265

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":55}}Content-Length: 265

{"jsonrpc":"2.0","id":56,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":55,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":56,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":57,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":57,"result":[]}
<<<
Content-Length: 2794

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":8},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 294

{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":104,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":58,"result":null}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":59,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":1}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":59,"result":null}Content-Length: 119

{"jsonrpc":"2.0","id":"19","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"19","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"20","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"20","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-A9CAAD3847D5F9574E389B1BC813F91F"}}Content-Length: 368

{"jsonrpc":"2.0","id":60,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":106,"character":2},"end":{"line":106,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":60,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"21","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"21","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":61,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":17}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":61,"result":null}
<<<
Content-Length: 370

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":107,"character":14},"end":{"line":107,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":62,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":63,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":106,"character":3}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":63,"result":null}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":64,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":2}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":64,"result":null}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":65,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":1}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":65,"result":null}
<<<
Content-Length: 306

{"jsonrpc":"2.0","id":66,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":2}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":66,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":3},"end":{"line":105,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":67,"result":[]}
<<<
Content-Length: 389

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":9},"contentChanges":[{"range":{"start":{"line":104,"character":3},"end":{"line":105,"character":2}},"rangeLength":4,"text":""}]}}Content-Length: 265

{"jsonrpc":"2.0","id":68,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":68}}Content-Length: 265

{"jsonrpc":"2.0","id":69,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":"22","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 2512

{"jsonrpc":"2.0","id":68,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":69,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"22","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":70,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":3},"end":{"line":104,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":70,"result":[]}
<<<
Content-Length: 2788

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":9},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }else(cm > 18)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 396

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":10},"contentChanges":[{"range":{"start":{"line":104,"character":3},"end":{"line":104,"character":3}},"rangeLength":0,"text":"\r\n  "}]}}Content-Length: 265

{"jsonrpc":"2.0","id":71,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":71}}Content-Length: 265

{"jsonrpc":"2.0","id":72,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":71,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":72,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":73,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":73,"result":[]}
<<<
Content-Length: 2795

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":10},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"23","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"23","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":74,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":89,"character":13}}}
>>>
Content-Length: 208

{"jsonrpc":"2.0","id":74,"result":{"contents":{"kind":"markdown","value":"### macro `ENA`  \n\n---\n```cpp\n#define ENA 5\n```"},"range":{"start":{"line":89,"character":10},"end":{"line":89,"character":13}}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":75,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":47,"character":12}}}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":75,"result":{"contents":{"kind":"markdown","value":"### function `digitalWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t val`\n\n---\n```cpp\nvoid digitalWrite(uint8_t pin, uint8_t val)\n```"},"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":14}}}}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":76,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":83,"character":11}}}
>>>
Content-Length: 310

{"jsonrpc":"2.0","id":76,"result":{"contents":{"kind":"markdown","value":"### variable `Echo`  \n\n---\nType: `int`  \nValue = `13 (0xd)`  \nPassed as pin (converted to uint8_t)  \nPin to D13  \n\n---\n```cpp\nint Echo = 13\n```"},"range":{"start":{"line":83,"character":10},"end":{"line":83,"character":14}}}}
<<<
Content-Length: 370

{"jsonrpc":"2.0","id":77,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":107,"character":14},"end":{"line":107,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":77,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":78,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":111,"character":11}}}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":78,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"start":{"line":111,"character":9},"end":{"line":111,"character":16}}}}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":79,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":4}}}
>>>
Content-Length: 268

{"jsonrpc":"2.0","id":79,"result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"start":{"line":109,"character":2},"end":{"line":109,"character":8}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":80,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":15}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":80,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":81,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":14}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":81,"result":null}
<<<
Content-Length: 370

{"jsonrpc":"2.0","id":82,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":15},"end":{"line":105,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":82,"result":[]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":15},"end":{"line":106,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":83,"result":[]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":84,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":15},"end":{"line":106,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":84,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":85,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":106,"character":2}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":85,"result":null}
<<<
Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":11},"contentChanges":[{"range":{"start":{"line":105,"character":15},"end":{"line":106,"character":2}},"rangeLength":4,"text":""}]}}Content-Length: 265

{"jsonrpc":"2.0","id":86,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":86}}Content-Length: 265

{"jsonrpc":"2.0","id":87,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":"24","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 2512

{"jsonrpc":"2.0","id":86,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":87,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"24","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 370

{"jsonrpc":"2.0","id":88,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":15},"end":{"line":105,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":88,"result":[]}
<<<
Content-Length: 2789

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":11},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18){\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 398

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":12},"contentChanges":[{"range":{"start":{"line":105,"character":15},"end":{"line":105,"character":15}},"rangeLength":0,"text":"\r\n  "}]}}Content-Length: 265

{"jsonrpc":"2.0","id":89,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":89}}Content-Length: 265

{"jsonrpc":"2.0","id":90,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2512

{"jsonrpc":"2.0","id":89,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2512

{"jsonrpc":"2.0","id":90,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":106,"character":2},"end":{"line":106,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":91,"result":[]}
<<<
Content-Length: 2795

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":12},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"25","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"25","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-A9CAAD3847D5F9574E389B1BC813F91F"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"26","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"26","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"27","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"27","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 370

{"jsonrpc":"2.0","id":92,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":15},"end":{"line":105,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":92,"result":[]}
<<<
Content-Length: 368

{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":106,"character":3},"end":{"line":106,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":93,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":94,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":97,"character":10}}}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":94,"result":{"contents":{"kind":"markdown","value":"### function `GetDistance`  \n\n---\nâ†’ `float`  \n\n---\n```cpp\nfloat GetDistance()\n```"},"range":{"start":{"line":97,"character":7},"end":{"line":97,"character":18}}}}
<<<
Content-Length: 306

{"jsonrpc":"2.0","id":95,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":97,"character":11}}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":95,"result":[{"range":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}},"kind":1},{"range":{"start":{"line":97,"character":7},"end":{"line":97,"character":18}},"kind":1}]}
<<<
Content-Length: 367

{"jsonrpc":"2.0","id":96,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":97,"character":7},"end":{"line":97,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":96,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":97,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":111,"character":20}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":97,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":98,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":111,"character":20}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":98,"result":null}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":99,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":78,"character":18}}}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":99,"result":{"contents":{"kind":"markdown","value":"### variable `distance`  \n\n---\nType: `float`  \n\n---\n```cpp\nfloat distance\n```"},"range":{"start":{"line":78,"character":10},"end":{"line":78,"character":18}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":100,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":85,"character":21}}}
>>>
Content-Length: 217

{"jsonrpc":"2.0","id":100,"result":{"contents":{"kind":"markdown","value":"### macro `OUTPUT`  \n\n---\n```cpp\n#define OUTPUT 0x1\n```"},"range":{"start":{"line":85,"character":15},"end":{"line":85,"character":21}}}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":101,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":78,"character":19},"end":{"line":78,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":101,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":102,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":106,"character":1}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":102,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":103,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":106,"character":0}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":103,"result":null}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":104,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":106,"character":2},"end":{"line":106,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":104,"result":[]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":106,"character":3},"end":{"line":106,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":105,"result":[]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":15},"end":{"line":105,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":106,"result":[]}
<<<
Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":13},"contentChanges":[{"range":{"start":{"line":105,"character":14},"end":{"line":105,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 266

{"jsonrpc":"2.0","id":107,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":107}}Content-Length: 266

{"jsonrpc":"2.0","id":108,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":107,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":108,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":14},"end":{"line":105,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":109,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"28","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"28","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 2794

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":13},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":14},"contentChanges":[{"range":{"start":{"line":105,"character":14},"end":{"line":105,"character":14}},"rangeLength":0,"text":")"}]}}Content-Length: 266

{"jsonrpc":"2.0","id":110,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":110}}Content-Length: 266

{"jsonrpc":"2.0","id":111,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":110,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":111,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":112,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":15},"end":{"line":105,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":112,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"29","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"29","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 2795

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":14},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else(cm > 18)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"30","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"30","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"31","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"31","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":113,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":111,"character":12}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":113}}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":113,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"start":{"line":111,"character":9},"end":{"line":111,"character":16}}}}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":114,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":111,"character":12}}}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":114,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"start":{"line":111,"character":9},"end":{"line":111,"character":16}}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":115,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":63,"character":27}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":115,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":116,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":63,"character":26}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":116,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":117,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":63,"character":28}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":117,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":118,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":106,"character":1}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":118,"result":null}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":119,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":106,"character":0},"end":{"line":106,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":119,"result":[]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":120,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":106,"character":3},"end":{"line":106,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":120,"result":[]}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":121,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":107,"character":10}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":121,"result":{"contents":{"kind":"markdown","value":"### function `forward`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid forward()\n```"},"range":{"start":{"line":107,"character":4},"end":{"line":107,"character":11}}}}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":122,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":122,"result":null}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":123,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":22}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":123,"result":null}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":124,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":109,"character":22}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":124,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":125,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":6}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":125,"result":null}
<<<
Content-Length: 307

{"jsonrpc":"2.0","id":126,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":6}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":126,"result":[]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":127,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":6},"end":{"line":105,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":127,"result":[]}
<<<
Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":15},"contentChanges":[{"range":{"start":{"line":105,"character":6},"end":{"line":105,"character":6}},"rangeLength":0,"text":" "}]}}Content-Length: 266

{"jsonrpc":"2.0","id":128,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":128}}Content-Length: 266

{"jsonrpc":"2.0","id":129,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":128,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":129,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":130,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":130,"result":[]}
<<<
Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":16},"contentChanges":[{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":7}},"rangeLength":0,"text":"i"}]}}Content-Length: 266

{"jsonrpc":"2.0","id":131,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":131}}Content-Length: 266

{"jsonrpc":"2.0","id":132,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":131,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":132,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 328

{"jsonrpc":"2.0","id":133,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":8},"context":{"triggerKind":1}}}
>>>
Content-Length: 29295

{"jsonrpc":"2.0","id":133,"result":{"isIncomplete":true,"items":[{"label":" IN1","kind":1,"sortText":"40426111IN1","filterText":"IN1","insertText":"IN1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"IN1"}},{"label":" IN2","kind":1,"sortText":"40426111IN2","filterText":"IN2","insertText":"IN2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"IN2"}},{"label":" IN3","kind":1,"sortText":"40426111IN3","filterText":"IN3","insertText":"IN3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"IN3"}},{"label":" IN4","kind":1,"sortText":"40426111IN4","filterText":"IN4","insertText":"IN4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"IN4"}},{"label":" INPUT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eINPUT","filterText":"INPUT","insertText":"INPUT","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INPUT"}},{"label":" INPUT_PULLUP","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eINPUT_PULLUP","filterText":"INPUT_PULLUP","insertText":"INPUT_PULLUP","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INPUT_PULLUP"}},{"label":" INTERLEAVE","kind":1,"sortText":"4070a89eINTERLEAVE","filterText":"INTERLEAVE","insertText":"INTERLEAVE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INTERLEAVE"}},{"label":" INTERNAL","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eINTERNAL","filterText":"INTERNAL","insertText":"INTERNAL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INTERNAL"}},{"label":" interrupts()","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89einterrupts","filterText":"interrupts","insertText":"interrupts","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"interrupts"}},{"label":" INFINITY","kind":1,"sortText":"40821470INFINITY","filterText":"INFINITY","insertText":"INFINITY","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INFINITY"}},{"label":" ISR(vector, ...)","kind":1,"sortText":"40821470ISR","filterText":"ISR","insertText":"ISR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ISR"}},{"label":" ISR_ALIAS(vector, tgt)","kind":1,"sortText":"40821470ISR_ALIAS","filterText":"ISR_ALIAS","insertText":"ISR_ALIAS","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ISR_ALIAS"}},{"label":" ISR_ALIASOF(v)","kind":1,"sortText":"40821470ISR_ALIASOF","filterText":"ISR_ALIASOF","insertText":"ISR_ALIASOF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ISR_ALIASOF"}},{"label":" ISR_BLOCK","kind":1,"sortText":"40821470ISR_BLOCK","filterText":"ISR_BLOCK","insertText":"ISR_BLOCK","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ISR_BLOCK"}},{"label":" ISR_NAKED","kind":1,"sortText":"40821470ISR_NAKED","filterText":"ISR_NAKED","insertText":"ISR_NAKED","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ISR_NAKED"}},{"label":" ISR_NOBLOCK","kind":1,"sortText":"40821470ISR_NOBLOCK","filterText":"ISR_NOBLOCK","insertText":"ISR_NOBLOCK","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ISR_NOBLOCK"}},{"label":" isfinitef","kind":1,"sortText":"40821470isfinitef","filterText":"isfinitef","insertText":"isfinitef","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isfinitef"}},{"label":" isinff","kind":1,"sortText":"40821470isinff","filterText":"isinff","insertText":"isinff","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isinff"}},{"label":" isnanf","kind":1,"sortText":"40821470isnanf","filterText":"isnanf","insertText":"isnanf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isnanf"}},{"label":" ICES1","kind":1,"sortText":"409f9b1fICES1","filterText":"ICES1","insertText":"ICES1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICES1"}},{"label":" ICF1","kind":1,"sortText":"409f9b1fICF1","filterText":"ICF1","insertText":"ICF1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICF1"}},{"label":" ICIE1","kind":1,"sortText":"409f9b1fICIE1","filterText":"ICIE1","insertText":"ICIE1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICIE1"}},{"label":" ICNC1","kind":1,"sortText":"409f9b1fICNC1","filterText":"ICNC1","insertText":"ICNC1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICNC1"}},{"label":" ICR1","kind":1,"sortText":"409f9b1fICR1","filterText":"ICR1","insertText":"ICR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1"}},{"label":" ICR1H","kind":1,"sortText":"409f9b1fICR1H","filterText":"ICR1H","insertText":"ICR1H","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1H"}},{"label":" ICR1H0","kind":1,"sortText":"409f9b1fICR1H0","filterText":"ICR1H0","insertText":"ICR1H0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1H0"}},{"label":" ICR1H1","kind":1,"sortText":"409f9b1fICR1H1","filterText":"ICR1H1","insertText":"ICR1H1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1H1"}},{"label":" ICR1H2","kind":1,"sortText":"409f9b1fICR1H2","filterText":"ICR1H2","insertText":"ICR1H2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1H2"}},{"label":" ICR1H3","kind":1,"sortText":"409f9b1fICR1H3","filterText":"ICR1H3","insertText":"ICR1H3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1H3"}},{"label":" ICR1H4","kind":1,"sortText":"409f9b1fICR1H4","filterText":"ICR1H4","insertText":"ICR1H4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1H4"}},{"label":" ICR1H5","kind":1,"sortText":"409f9b1fICR1H5","filterText":"ICR1H5","insertText":"ICR1H5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1H5"}},{"label":" ICR1H6","kind":1,"sortText":"409f9b1fICR1H6","filterText":"ICR1H6","insertText":"ICR1H6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1H6"}},{"label":" ICR1H7","kind":1,"sortText":"409f9b1fICR1H7","filterText":"ICR1H7","insertText":"ICR1H7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1H7"}},{"label":" ICR1L","kind":1,"sortText":"409f9b1fICR1L","filterText":"ICR1L","insertText":"ICR1L","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1L"}},{"label":" ICR1L0","kind":1,"sortText":"409f9b1fICR1L0","filterText":"ICR1L0","insertText":"ICR1L0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1L0"}},{"label":" ICR1L1","kind":1,"sortText":"409f9b1fICR1L1","filterText":"ICR1L1","insertText":"ICR1L1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1L1"}},{"label":" ICR1L2","kind":1,"sortText":"409f9b1fICR1L2","filterText":"ICR1L2","insertText":"ICR1L2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1L2"}},{"label":" ICR1L3","kind":1,"sortText":"409f9b1fICR1L3","filterText":"ICR1L3","insertText":"ICR1L3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1L3"}},{"label":" ICR1L4","kind":1,"sortText":"409f9b1fICR1L4","filterText":"ICR1L4","insertText":"ICR1L4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1L4"}},{"label":" ICR1L5","kind":1,"sortText":"409f9b1fICR1L5","filterText":"ICR1L5","insertText":"ICR1L5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1L5"}},{"label":" ICR1L6","kind":1,"sortText":"409f9b1fICR1L6","filterText":"ICR1L6","insertText":"ICR1L6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1L6"}},{"label":" ICR1L7","kind":1,"sortText":"409f9b1fICR1L7","filterText":"ICR1L7","insertText":"ICR1L7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ICR1L7"}},{"label":" INT0","kind":1,"sortText":"409f9b1fINT0","filterText":"INT0","insertText":"INT0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT0"}},{"label":" INT0_vect","kind":1,"sortText":"409f9b1fINT0_vect","filterText":"INT0_vect","insertText":"INT0_vect","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT0_vect"}},{"label":" INT0_vect_num","kind":1,"sortText":"409f9b1fINT0_vect_num","filterText":"INT0_vect_num","insertText":"INT0_vect_num","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT0_vect_num"}},{"label":" INT1","kind":1,"sortText":"409f9b1fINT1","filterText":"INT1","insertText":"INT1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT1"}},{"label":" INT1_vect","kind":1,"sortText":"409f9b1fINT1_vect","filterText":"INT1_vect","insertText":"INT1_vect","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT1_vect"}},{"label":" INT1_vect_num","kind":1,"sortText":"409f9b1fINT1_vect_num","filterText":"INT1_vect_num","insertText":"INT1_vect_num","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT1_vect_num"}},{"label":" INTF0","kind":1,"sortText":"409f9b1fINTF0","filterText":"INTF0","insertText":"INTF0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INTF0"}},{"label":" INTF1","kind":1,"sortText":"409f9b1fINTF1","filterText":"INTF1","insertText":"INTF1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INTF1"}},{"label":" ISC00","kind":1,"sortText":"409f9b1fISC00","filterText":"ISC00","insertText":"ISC00","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ISC00"}},{"label":" ISC01","kind":1,"sortText":"409f9b1fISC01","filterText":"ISC01","insertText":"ISC01","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ISC01"}},{"label":" ISC10","kind":1,"sortText":"409f9b1fISC10","filterText":"ISC10","insertText":"ISC10","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ISC10"}},{"label":" ISC11","kind":1,"sortText":"409f9b1fISC11","filterText":"ISC11","insertText":"ISC11","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"ISC11"}},{"label":" IVCE","kind":1,"sortText":"409f9b1fIVCE","filterText":"IVCE","insertText":"IVCE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"IVCE"}},{"label":" IVSEL","kind":1,"sortText":"409f9b1fIVSEL","filterText":"IVSEL","insertText":"IVSEL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"IVSEL"}},{"label":" INT16_C(value)","kind":1,"sortText":"40a80791INT16_C","filterText":"INT16_C","insertText":"INT16_C","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT16_C"}},{"label":" INT32_C(value)","kind":1,"sortText":"40a80791INT32_C","filterText":"INT32_C","insertText":"INT32_C","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT32_C"}},{"label":" INT32_MAX","kind":1,"sortText":"40a80791INT32_MAX","filterText":"INT32_MAX","insertText":"INT32_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT32_MAX"}},{"label":" INT64_C(value)","kind":1,"sortText":"40a80791INT64_C","filterText":"INT64_C","insertText":"INT64_C","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT64_C"}},{"label":" INT8_MIN","kind":1,"sortText":"40a80791INT8_MIN","filterText":"INT8_MIN","insertText":"INT8_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT8_MIN"}},{"label":" INTPTR_MAX","kind":1,"sortText":"40a80791INTPTR_MAX","filterText":"INTPTR_MAX","insertText":"INTPTR_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INTPTR_MAX"}},{"label":" INT_FAST16_MAX","kind":1,"sortText":"40a80791INT_FAST16_MAX","filterText":"INT_FAST16_MAX","insertText":"INT_FAST16_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT_FAST16_MAX"}},{"label":" INT_FAST16_MIN","kind":1,"sortText":"40a80791INT_FAST16_MIN","filterText":"INT_FAST16_MIN","insertText":"INT_FAST16_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT_FAST16_MIN"}},{"label":" INT_FAST32_MIN","kind":1,"sortText":"40a80791INT_FAST32_MIN","filterText":"INT_FAST32_MIN","insertText":"INT_FAST32_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT_FAST32_MIN"}},{"label":" INT_LEAST64_MAX","kind":1,"sortText":"40a80791INT_LEAST64_MAX","filterText":"INT_LEAST64_MAX","insertText":"INT_LEAST64_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT_LEAST64_MAX"}},{"label":" INT_LEAST8_MIN","kind":1,"sortText":"40a80791INT_LEAST8_MIN","filterText":"INT_LEAST8_MIN","insertText":"INT_LEAST8_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"INT_LEAST8_MIN"}},{"label":" if (condition) {statements}","kind":15,"sortText":"40a9a1f8if","filterText":"if","insertText":"if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"if (${1:condition}) {\n${0:statements}\n}"}},{"label":" int","kind":14,"sortText":"40a9a1f8int","filterText":"int","insertText":"int","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"int"}},{"label":"â€¢IPAddress","kind":7,"documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"sortText":"40b226caIPAddress","filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"IPAddress"}},{"label":" initVariant()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40bcd469initVariant","filterText":"initVariant","insertText":"initVariant","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"initVariant"}},{"label":" int_farptr_t","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\ingroup avr_inttypes signed integer type that can hold a pointer \u003e 64 KB"},"sortText":"40d6b808int_farptr_t","filterText":"int_farptr_t","insertText":"int_farptr_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"int_farptr_t"}},{"label":" init()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40e6127finit","filterText":"init","insertText":"init","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"init"}},{"label":" int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"40ee01b5int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 8 bits."},"sortText":"40ee01b5int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"int_fast8_t"}},{"label":" int_least64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"40ee01b5int_least64_t","filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"int_least64_t"}},{"label":" intmax_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint largest signed int available."},"sortText":"40ee01b5intmax_t","filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"intmax_t"}},{"label":"â€¢isAlpha(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for an alphabetic character.  \nIt is equivalent to (isupper(c) || islower(c))."},"sortText":"40fd1dd8isAlpha","filterText":"isAlpha","insertText":"isAlpha","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isAlpha"}},{"label":"â€¢isAlphaNumeric(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nWCharacter.h prototypes"},"sortText":"40fd1dd8isAlphaNumeric","filterText":"isAlphaNumeric","insertText":"isAlphaNumeric","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isAlphaNumeric"}},{"label":"â€¢isAscii(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks whether c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"40fd1dd8isAscii","filterText":"isAscii","insertText":"isAscii","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isAscii"}},{"label":"â€¢isControl(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a control character."},"sortText":"40fd1dd8isControl","filterText":"isControl","insertText":"isControl","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isControl"}},{"label":"â€¢isDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a digit (0 through 9)."},"sortText":"40fd1dd8isDigit","filterText":"isDigit","insertText":"isDigit","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isDigit"}},{"label":"â€¢isGraph(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character except space."},"sortText":"40fd1dd8isGraph","filterText":"isGraph","insertText":"isGraph","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isGraph"}},{"label":"â€¢isHexadecimalDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a hexadecimal digits, i.e. one of 0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F."},"sortText":"40fd1dd8isHexadecimalDigit","filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isHexadecimalDigit"}},{"label":"â€¢isLowerCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a lower-case character."},"sortText":"40fd1dd8isLowerCase","filterText":"isLowerCase","insertText":"isLowerCase","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isLowerCase"}},{"label":"â€¢isPrintable(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character including space."},"sortText":"40fd1dd8isPrintable","filterText":"isPrintable","insertText":"isPrintable","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isPrintable"}},{"label":"â€¢isPunct(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character which is not a space or an alphanumeric character."},"sortText":"40fd1dd8isPunct","filterText":"isPunct","insertText":"isPunct","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isPunct"}},{"label":"â€¢isSpace(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for white-space characters. For the avr-libc library,  \nthese are: space, formfeed ('\\\\f'), newline ('\\\\n'), carriage return ('\\\\r'), horizontal tab ('\\\\t'), and vertical tab ('\\\\v')."},"sortText":"40fd1dd8isSpace","filterText":"isSpace","insertText":"isSpace","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isSpace"}},{"label":"â€¢isUpperCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for an uppercase letter."},"sortText":"40fd1dd8isUpperCase","filterText":"isUpperCase","insertText":"isUpperCase","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isUpperCase"}},{"label":"â€¢isWhitespace(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a blank character, that is, a space or a tab."},"sortText":"40fd1dd8isWhitespace","filterText":"isWhitespace","insertText":"isWhitespace","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isWhitespace"}},{"label":" isfinite(double x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The isfinite() function returns a nonzero value if \\\\a \\_\\_x is finite:  \nnot plus or minus infinity, and not NaN."},"sortText":"40fd1dd8isfinite","filterText":"isfinite","insertText":"isfinite","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isfinite"}},{"label":" isalnum(int c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an alphanumeric character. It is equivalent to \\\u003ctt\u003e(isalpha(c) || isdigit(c))\\\u003c/tt\u003e."},"sortText":"410a2871isalnum","filterText":"isalnum","insertText":"isalnum","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isalnum"}},{"label":" isalpha(int c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an alphabetic character. It is equivalent to \\\u003ctt\u003e(isupper(c) || islower(c))\\\u003c/tt\u003e."},"sortText":"410a2871isalpha","filterText":"isalpha","insertText":"isalpha","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isalpha"}},{"label":" isascii(int c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks whether \\\\c c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"410a2871isascii","filterText":"isascii","insertText":"isascii","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isascii"}},{"label":" isblank(int c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a blank character, that is, a space or a tab."},"sortText":"410a2871isblank","filterText":"isblank","insertText":"isblank","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isblank"}},{"label":" iscntrl(int c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a control character."},"sortText":"410a2871iscntrl","filterText":"iscntrl","insertText":"iscntrl","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"iscntrl"}},{"label":" isdigit(int c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a digit (0 through 9)."},"sortText":"410a2871isdigit","filterText":"isdigit","insertText":"isdigit","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isdigit"}},{"label":" isgraph(int c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character except space."},"sortText":"410a2871isgraph","filterText":"isgraph","insertText":"isgraph","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isgraph"}},{"label":" islower(int c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a lower-case character."},"sortText":"410a2871islower","filterText":"islower","insertText":"islower","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"islower"}},{"label":" isprint(int c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character including space."},"sortText":"410a2871isprint","filterText":"isprint","insertText":"isprint","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":8}},"newText":"isprint"}}]}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":134,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":8},"end":{"line":105,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":134,"result":[]}
<<<
Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":17},"contentChanges":[{"range":{"start":{"line":105,"character":8},"end":{"line":105,"character":8}},"rangeLength":0,"text":"f"}]}}Content-Length: 266

{"jsonrpc":"2.0","id":135,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":135}}Content-Length: 266

{"jsonrpc":"2.0","id":136,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 328

{"jsonrpc":"2.0","id":137,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":9},"context":{"triggerKind":3}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":135,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":136,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2351

{"jsonrpc":"2.0","id":137,"result":{"isIncomplete":false,"items":[{"label":" if (condition) {statements}","kind":15,"sortText":"4029a1f8if","filterText":"if","insertText":"if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":9}},"newText":"if (${1:condition}) {\n${0:statements}\n}"}},{"label":" int_farptr_t","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\ingroup avr_inttypes signed integer type that can hold a pointer \u003e 64 KB"},"sortText":"4102140cint_farptr_t","filterText":"int_farptr_t","insertText":"int_farptr_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":9}},"newText":"int_farptr_t"}},{"label":" int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 16 bits."},"sortText":"41250290int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":9}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 32 bits."},"sortText":"41250290int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":9}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"41250290int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":9}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 8 bits."},"sortText":"41250290int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":105,"character":7},"end":{"line":105,"character":9}},"newText":"int_fast8_t"}}]}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":138,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":9},"end":{"line":105,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":138,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"32","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"32","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 2798

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":17},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else if(cm > 18)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":139,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":18},"end":{"line":105,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":139,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"33","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"33","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-A9CAAD3847D5F9574E389B1BC813F91F"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"34","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"34","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"35","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"35","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-A9CAAD3847D5F9574E389B1BC813F91F"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"36","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"36","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"37","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"37","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":140,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":104,"character":3},"end":{"line":104,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":140,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":141,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":98,"character":13}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":141,"result":null}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":142,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":98,"character":13}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":142,"result":null}
<<<
Content-Length: 307

{"jsonrpc":"2.0","id":143,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":98,"character":13}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":143,"result":[]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":144,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":98,"character":13},"end":{"line":98,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":144,"result":[]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":145,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":98,"character":12},"end":{"line":98,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":145,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":146,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":98,"character":12}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":146,"result":null}
<<<
Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":18},"contentChanges":[{"range":{"start":{"line":98,"character":12},"end":{"line":98,"character":13}},"rangeLength":1,"text":"5"}]}}Content-Length: 266

{"jsonrpc":"2.0","id":147,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":147}}Content-Length: 266

{"jsonrpc":"2.0","id":148,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":147,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":148,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":149,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":98,"character":13},"end":{"line":98,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":149,"result":[]}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":150,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":16}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":150,"result":null}Content-Length: 119

{"jsonrpc":"2.0","id":"38","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"38","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 2798

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":18},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 15) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else if(cm > 18)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}Content-Length: 296

{"jsonrpc":"2.0","id":151,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":17}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":151,"result":null}
<<<
Content-Length: 308

{"jsonrpc":"2.0","id":152,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":17}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":152,"result":[]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":153,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":17},"end":{"line":105,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":153,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":154,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":16},"end":{"line":105,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":154,"result":[]}
<<<
Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":19},"contentChanges":[{"range":{"start":{"line":105,"character":16},"end":{"line":105,"character":17}},"rangeLength":1,"text":"5"}]}}Content-Length: 266

{"jsonrpc":"2.0","id":155,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":155}}Content-Length: 266

{"jsonrpc":"2.0","id":156,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":155,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":156,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":157,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":17},"end":{"line":105,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":157,"result":[]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":158,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":18},"end":{"line":105,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":158,"result":[]}
<<<
Content-Length: 2798

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":19},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 15) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else if(cm > 15)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"39","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"39","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 2798

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":19},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 15) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else if(cm > 15)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"40","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"40","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"41","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"41","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":20},"contentChanges":[{"range":{"start":{"line":105,"character":16},"end":{"line":105,"character":17}},"rangeLength":1,"text":"8"}]}}Content-Length: 266

{"jsonrpc":"2.0","id":159,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":159,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":16},"end":{"line":105,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":160,"result":[]}
<<<
Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":21},"contentChanges":[{"range":{"start":{"line":98,"character":12},"end":{"line":98,"character":13}},"rangeLength":1,"text":"8"}]}}Content-Length: 266

{"jsonrpc":"2.0","id":161,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":161,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":162,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":98,"character":12},"end":{"line":98,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":162,"result":[]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":163,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":110,"character":19},"end":{"line":110,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":163,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"42","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"42","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 2798

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":21},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else if(cm > 18)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 2798

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":21},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 18) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else if(cm > 18)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"43","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"43","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"44","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"44","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":164,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":98,"character":12}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":164,"result":null}
<<<
Content-Length: 307

{"jsonrpc":"2.0","id":165,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":98,"character":12}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":165,"result":[]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":166,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":98,"character":12},"end":{"line":98,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":166,"result":[]}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":167,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":98,"character":12},"end":{"line":98,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":167,"result":[]}
<<<
Content-Length: 295

{"jsonrpc":"2.0","id":168,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":98,"character":13}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":168,"result":null}
<<<
Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":22},"contentChanges":[{"range":{"start":{"line":98,"character":12},"end":{"line":98,"character":13}},"rangeLength":1,"text":"5"}]}}Content-Length: 266

{"jsonrpc":"2.0","id":169,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":169}}Content-Length: 266

{"jsonrpc":"2.0","id":170,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":169,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":170,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":171,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":17}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":171,"result":null}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":172,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":98,"character":13},"end":{"line":98,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":172,"result":[]}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":173,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":16}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":173,"result":null}
<<<
Content-Length: 308

{"jsonrpc":"2.0","id":174,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"position":{"line":105,"character":16}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":174,"result":[]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":175,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":16},"end":{"line":105,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":175,"result":[]}
<<<
Content-Length: 2798

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":22},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 15) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else if(cm > 18)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"45","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"45","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":176,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":16},"end":{"line":105,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":176,"result":[]}
<<<
Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":23},"contentChanges":[{"range":{"start":{"line":105,"character":16},"end":{"line":105,"character":17}},"rangeLength":1,"text":"5"}]}}Content-Length: 266

{"jsonrpc":"2.0","id":177,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":177}}Content-Length: 266

{"jsonrpc":"2.0","id":178,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"}}}
>>>
Content-Length: 2513

{"jsonrpc":"2.0","id":177,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}Content-Length: 2513

{"jsonrpc":"2.0","id":178,"result":[{"name":"Trig","detail":"int","kind":13,"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":4},"end":{"line":6,"character":8}}},{"name":"Echo","detail":"int","kind":13,"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":13}},"selectionRange":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}}},{"name":"distance","detail":"float","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":14}},"selectionRange":{"start":{"line":15,"character":6},"end":{"line":15,"character":14}}},{"name":"cm","detail":"float","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":8}},"selectionRange":{"start":{"line":16,"character":6},"end":{"line":16,"character":8}}},{"name":"forward","detail":"void ()","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"back","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":9}}},{"name":"left","detail":"void ()","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":9}}},{"name":"right","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":10}}},{"name":"stop","detail":"void ()","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}},{"name":"GetDistance","detail":"float ()","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":112,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}]}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":179,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":17},"end":{"line":105,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":179,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 371

{"jsonrpc":"2.0","id":180,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":105,"character":18},"end":{"line":105,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":180,"result":[]}
<<<
Content-Length: 2798

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":23},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 15) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else if(cm > 15)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"46","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"46","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 2798

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":23},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 15) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else if(cm > 15)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"47","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"47","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"48","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"48","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 369

{"jsonrpc":"2.0","id":181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":112,"character":1},"end":{"line":112,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":181,"result":[]}
<<<
Content-Length: 2798

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino","version":23},"text":"/*************************************\r\n *     TIME:2022.6.25\r\n *     Development Team: Zhiyi Technology Co., Ltd.\r\n * \r\n *  **************************************/\r\n#include <AFMotor.h>\r\nint Trig = 12;//Pin to D12\r\nint Echo = 13;//Pin to D13\r\n#define ENA 5\r\n#define ENB 6\r\n#define IN1 3\r\n#define IN2 4\r\n#define IN3 2\r\n#define IN4 7\r\n#define carSpeed 130//Set the carSpeed to 130\r\nfloat distance;\r\nfloat cm;\r\n\r\nvoid forward(){ \r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n\r\n  digitalWrite(IN1,LOW); \r\n  digitalWrite(IN2,HIGH);  \r\n  digitalWrite(IN3,HIGH);  \r\n  digitalWrite(IN4,LOW); \r\n  Serial.println(\"Forward\");\r\n}\r\n\r\nvoid back(){\r\nanalogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH);\r\n\r\n  Serial.println(\"Back\");\r\n}\r\n\r\n\r\nvoid left(){\r\n  analogWrite(ENA,200); \r\n  analogWrite(ENB,200); \r\n  digitalWrite(IN1,HIGH);\r\n  digitalWrite(IN2,LOW);\r\n  digitalWrite(IN3,HIGH);\r\n  digitalWrite(IN4,LOW);\r\n\r\n  Serial.println(\"Left\");\r\n}\r\n\r\nvoid right(){\r\n  analogWrite(ENA,170); \r\n  analogWrite(ENB,170); \r\n  digitalWrite(IN1,LOW);\r\n  digitalWrite(IN2,HIGH);\r\n  digitalWrite(IN3,LOW);\r\n  digitalWrite(IN4,HIGH); \r\n\r\n  Serial.println(\"Right\");\r\n}\r\n\r\nvoid stop() {//stop function\r\n  digitalWrite(ENA, LOW);//Set the speed of ENA to low \r\n  digitalWrite(ENB, LOW);//Set the speed of ENB to low\r\n  Serial.println(\"Stop!\");\r\n}\r\n\r\nfloat GetDistance()\r\n{\r\n    // Send a low short pulse to Trig to trigger the ranging\r\n    digitalWrite(Trig, LOW); //Send a low level to Trig\r\n    delayMicroseconds(2); \r\n    digitalWrite(Trig, HIGH); \r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    distance = pulseIn(Echo, HIGH) / 58.00;\r\n\t  return distance;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  pinMode(Echo, INPUT);\r\n  pinMode(Trig, OUTPUT);\r\n  pinMode(IN1, OUTPUT);\r\n  pinMode(IN2, OUTPUT);\r\n  pinMode(IN3, OUTPUT);\r\n  pinMode(IN4, OUTPUT);\r\n  pinMode(ENA, OUTPUT);\r\n  pinMode(ENB, OUTPUT);\r\n  stop();\r\n  delay(100);\r\n}\r\n\r\nvoid loop() \r\n{\r\n  cm = GetDistance();\r\n  if(cm <= 15) \r\n  {\r\n    back();\r\n    delay(500);\r\n    left();\r\n    delay(500);\r\n  }\r\n  else if(cm > 15)\r\n  {\r\n    forward();\r\n  }\r\n  Serial.print(\"Distance = \");\r\n  Serial.print(cm);\r\n  Serial.println(\"cm\");\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"49","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"49","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"50","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"50","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 367

{"jsonrpc":"2.0","id":182,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0041%29four%20way%20tracking%20car%20%20tutorial/ZYC0041/4_Arduino_Code/3_Obstacle_avoidance/3_Obstacle_avoidance.ino"},"range":{"start":{"line":96,"character":1},"end":{"line":96,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":182,"result":[]}
<<<
Content-Length: 60

{"jsonrpc":"2.0","id":183,"method":"shutdown","params":null}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":183,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}